// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Jul 11 21:17:56 2014
// Input file:   D:\Datsville\trunk\datsville_rpgmaker\pov_source\glass_test_case.ldr
// Title:        Untitled
// Author:       Michael Horvath
// ModelDir:     D:\Datsville\trunk\datsville_rpgmaker\pov_source
// WorkDir:      D:\Datsville\trunk\datsville_rpgmaker\pov_source
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville\trunk\datsville_rpgmaker\pov_source\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" D:\Datsville\trunk\datsville_rpgmaker\pov_source\glass_test_case.ldr -o

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

#include "ldr_materials_1.4.inc"

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}




//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 47 Trans_Clear (from ldconfig.ldr)
#ifndef (L3Texture47)
#declare L3Texture47 = L3TextureTransparentRGBA(252,252,252,128)
#end
#ifndef (L3Texture47_slope)
#declare L3Texture47_slope = L3TextureSlope(L3Texture47)
#end
#ifndef (L3Color47)
#declare L3Color47 = L3MaterialT(L3Texture47)
#end
#ifndef (L3Color47_slope)
#declare L3Color47_slope = L3MaterialT(L3Texture47_slope)
#end


//// Primitive box4-1.dat
#ifndef (box4_dash_1_dot_dat)
#declare box4_dash_1_dot_dat = object {
// Box with 4 Faces without 1 Edge
// Name: box4-1.dat
// Author: Tore Eriksson [Tore_Eriksson]
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-07-15 [PTadmin] Official Update 1998-07
// !HISTORY 2002-04-05 [hafhead] Made BFC compliant
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box4_dash_1_dot_dat)


//// Primitive box2-5.dat
#ifndef (box2_dash_5_dot_dat)
#declare box2_dash_5_dot_dat = object {
// Box with 2 Faces without 5 Edges
// Name: box2-5.dat
// Author: Steffen [Steffen]
// !LDRAW_ORG Primitive UPDATE 2003-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	mesh {
		triangle { <1,1,1>, <1,1,-1>, <-1,1,-1> }
		triangle { <-1,1,-1>, <-1,1,1>, <1,1,1> }
		triangle { <1,1,1>, <-1,1,1>, <-1,-1,1> }
		triangle { <-1,-1,1>, <1,-1,1>, <1,1,1> }
	}
}
#end // ifndef (box2_dash_5_dot_dat)


//// Primitive box5.dat
#ifndef (box5_dot_dat)
#declare box5_dot_dat = object {
// Box with 5 Faces and All Edges
// Name: box5.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-03 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box5_dot_dat)


//// Primitive rect.dat
#ifndef (rect_dot_dat)
#declare rect_dot_dat = object {
// Rectangle
// Name: rect.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-05 [hafhead] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect_dot_dat)


//// Primitive rect2p.dat
#ifndef (rect2p_dot_dat)
#declare rect2p_dot_dat = object {
// Rectangle with 2 Parallel Edges
// Name: rect2p.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect2p_dot_dat)


//// Primitive rect1.dat
#ifndef (rect1_dot_dat)
#declare rect1_dot_dat = object {
// Rectangle with 1 Edge
// Name: rect1.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect1_dot_dat)


//// Primitive box4.dat
#ifndef (box4_dot_dat)
#declare box4_dot_dat = object {
// Box with 4 Faces (2 Parallel Pairs) and All Edges
// Name: box4.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-03 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box4_dot_dat)


//// Part s\30185s01.dat
#ifndef (s_slash_30185s01_dot_dat)
#declare s_slash_30185s01_dot_dat = #if (L3Quality = 0) box { <-80,0,-10>, <-37.5,144,50> } #else union {
// ~Window Bay  3 x  8 x  6 (Left Frame)
// Name: s\30185s01.dat
// Author: William Howard [WilliamH]
// !LDRAW_ORG Subpart UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-80,144,30>, <-75,144,30>, <-72,144,27> }
		triangle { <-72,144,27>, <-74.5,144,24.5>, <-80,144,30> }
		triangle { <-74.5,140,24.5>, <-72,140,27>, <-63,140,18> }
		triangle { <-63,140,18>, <-65.5,140,15.5>, <-74.5,140,24.5> }
	}
	object { box4_dash_1_dot_dat matrix <5.5,0,-5.5,0,4,0,1.25,0,1.25,-58.75,140,11.25> }
	object { box2_dash_5_dot_dat matrix <0,2,0,1.25,0,1.25,1.5,0,-1.5,-74.75,142,27.25> }
	object { box2_dash_5_dot_dat matrix <0,2,0,4,0,-4,-1.25,0,-1.25,-59.75,142,27.25> }
	object { box2_dash_5_dot_dat matrix <0,2,0,1.25,0,1.25,-1.5,0,1.5,-42.75,142,-4.75> }
	object { box2_dash_5_dot_dat matrix <0,2,0,-4,0,4,-1.25,0,-1.25,-42.75,142,10.25> }
	mesh {
		triangle { <-54.5,140,4.5>, <-52,140,7>, <-43,140,-2> }
		triangle { <-43,140,-2>, <-45.5,140,-4.5>, <-54.5,140,4.5> }
		triangle { <-45.5,144,-4.5>, <-43,144,-2>, <-40,144,-5> }
		triangle { <-40,144,-5>, <-40,144,-10>, <-45.5,144,-4.5> }
		triangle { <-74.5,144,24.5>, <-74.5,140,24.5>, <-77.5,133,27.5> }
		triangle { <-77.5,133,27.5>, <-80,144,30>, <-74.5,144,24.5> }
		triangle { <-54.5,144,4.5>, <-54.5,140,4.5>, <-65.5,140,15.5> }
		triangle { <-65.5,140,15.5>, <-65.5,144,15.5>, <-54.5,144,4.5> }
		triangle { <-40,144,-10>, <-42.5,133,-7.5>, <-45.5,140,-4.5> }
		triangle { <-45.5,140,-4.5>, <-45.5,144,-4.5>, <-40,144,-10> }
		triangle { <-54.5,144,24.5>, <-57,144,22>, <-65,144,30> }
		triangle { <-65,144,30>, <-60,144,30>, <-54.5,144,24.5> }
		triangle { <-45.5,140,15.5>, <-48,140,13>, <-57,140,22> }
		triangle { <-57,140,22>, <-54.5,140,24.5>, <-45.5,140,15.5> }
		triangle { <-40,144,10>, <-40,144,5>, <-48,144,13> }
		triangle { <-48,144,13>, <-45.5,144,15.5>, <-40,144,10> }
		triangle { <-60,144,30>, <-60,136,30>, <-54.5,140,24.5> }
		triangle { <-54.5,140,24.5>, <-54.5,144,24.5>, <-60,144,30> }
		triangle { <-54.5,140,24.5>, <-60,136,30>, <-40,136,10> }
		triangle { <-40,136,10>, <-45.5,140,15.5>, <-54.5,140,24.5> }
		triangle { <-45.5,144,15.5>, <-45.5,140,15.5>, <-40,136,10> }
		triangle { <-40,136,10>, <-40,144,10>, <-45.5,144,15.5> }
		triangle { <-63,140,18>, <-72,140,27>, <-65,140,30> }
		triangle { <-65,140,30>, <-57,140,22>, <-63,140,18> }
		triangle { <-52,140,7>, <-63,140,18>, <-57,140,22> }
		triangle { <-57,140,22>, <-48,140,13>, <-52,140,7> }
		triangle { <-40,140,5>, <-43,140,-2>, <-52,140,7> }
		triangle { <-52,140,7>, <-48,140,13>, <-40,140,5> }
		triangle { <-40,140,5>, <-40,140,-5>, <-43,140,-2> }
		triangle { <-72,140,27>, <-75,140,30>, <-65,140,30> }
		triangle { <-38.343,136,-6>, <-40,136,10>, <-60,136,30> }
		triangle { <-60,136,30>, <-76,136,31.657>, <-38.343,136,-6> }
// BFC INVERTNEXT
	}
	object { box5_dot_dat matrix <-6,0,0,0,-4,0,0,0,6,-70,144,40> }
	mesh {
		triangle { <-60,144,50>, <-64,144,46>, <-76,144,46> }
		triangle { <-76,144,46>, <-80,144,50>, <-60,144,50> }
		triangle { <-60,144,30>, <-64,144,34>, <-64,144,46> }
		triangle { <-64,144,46>, <-60,144,50>, <-60,144,30> }
		triangle { <-75,144,30>, <-76,144,34>, <-64,144,34> }
		triangle { <-64,144,34>, <-65,144,30>, <-75,144,30> }
		triangle { <-64,144,34>, <-60,144,30>, <-65,144,30> }
		triangle { <-80,144,30>, <-76,144,34>, <-75,144,30> }
		triangle { <-80,144,50>, <-76,144,46>, <-76,144,34> }
		triangle { <-76,144,34>, <-80,144,30>, <-80,144,50> }
		triangle { <-76,136,50>, <-76,136,31.657>, <-60,136,30> }
		triangle { <-60,136,30>, <-60,136,50>, <-76,136,50> }
		triangle { <-60,4,50>, <-60,4,30>, <-76,4,31.657> }
		triangle { <-76,4,31.657>, <-76,4,50>, <-60,4,50> }
		triangle { <-60,136,50>, <-60,144,50>, <-80,144,50> }
		triangle { <-80,144,50>, <-76,136,50>, <-60,136,50> }
	}
	object { rect_dot_dat matrix <0,4,0,-1,0,0,0,0,10,-60,140,40> }
	object { rect2p_dot_dat matrix <5,0,0,0,0,1,0,-2,0,-70,142,30> }
	object { rect2p_dot_dat matrix <0,0,5,1,0,0,0,2,0,-40,142,0> }
	object { rect2p_dot_dat matrix <10,0,-10,0,0,-1,0,2,0,-50,2,20> }
	mesh {
		triangle { <-76,4,31.657>, <-60,4,30>, <-40,4,10> }
		triangle { <-40,4,10>, <-38.343,4,-6>, <-76,4,31.657> }
		triangle { <-40,0,-10>, <-40,0,10>, <-60,0,30> }
		triangle { <-60,0,30>, <-80,0,30>, <-40,0,-10> }
		triangle { <-60,0,50>, <-60,4,50>, <-76,4,50> }
		triangle { <-76,4,50>, <-80,0,50>, <-60,0,50> }
	}
	object { rect1_dot_dat matrix <0,0,10,0,1,0,10,0,0,-70,0,40> }
// BFC INVERTNEXT
	object { box4_dot_dat matrix <17.5,0,-17.5,2.828,0,2.828,0,19,0,-60,26,10> }
// BFC INVERTNEXT
	object { box4_dot_dat matrix <17.5,0,-17.5,2.828,0,2.828,0,19,0,-60,70,10> }
// BFC INVERTNEXT
	object { box4_dot_dat matrix <17.5,0,-17.5,2.828,0,2.828,0,19,0,-60,114,10> }
	mesh {
		triangle { <-40,0,-10>, <-42.5,7,-7.5>, <-42.5,133,-7.5> }
		triangle { <-42.5,133,-7.5>, <-40,144,-10>, <-40,0,-10> }
		triangle { <-80,144,30>, <-77.5,133,27.5>, <-77.5,7,27.5> }
		triangle { <-77.5,7,27.5>, <-80,0,30>, <-80,144,30> }
		triangle { <-38.343,136,-6>, <-39.672,133,-4.672>, <-39.672,7,-4.672> }
		triangle { <-39.672,7,-4.672>, <-38.343,4,-6>, <-38.343,136,-6> }
		triangle { <-77.5,95,27.5>, <-42.5,95,-7.5>, <-42.5,89,-7.5> }
		triangle { <-42.5,89,-7.5>, <-77.5,89,27.5>, <-77.5,95,27.5> }
		triangle { <-77.5,51,27.5>, <-42.5,51,-7.5>, <-42.5,45,-7.5> }
		triangle { <-42.5,45,-7.5>, <-77.5,45,27.5>, <-77.5,51,27.5> }
		triangle { <-77.5,7,27.5>, <-42.5,7,-7.5>, <-40,0,-10> }
		triangle { <-40,0,-10>, <-80,0,30>, <-77.5,7,27.5> }
		triangle { <-74.5,140,24.5>, <-45.5,140,-4.5>, <-42.5,133,-7.5> }
		triangle { <-42.5,133,-7.5>, <-77.5,133,27.5>, <-74.5,140,24.5> }
		triangle { <-39.672,95,-4.672>, <-74.672,95,30.328>, <-74.672,89,30.328> }
		triangle { <-74.672,89,30.328>, <-39.672,89,-4.672>, <-39.672,95,-4.672> }
		triangle { <-39.672,51,-4.672>, <-74.672,51,30.328>, <-74.672,45,30.328> }
		triangle { <-74.672,45,30.328>, <-39.672,45,-4.672>, <-39.672,51,-4.672> }
		triangle { <-39.672,7,-4.672>, <-74.672,7,30.328>, <-76,4,31.657> }
		triangle { <-76,4,31.657>, <-38.343,4,-6>, <-39.672,7,-4.672> }
		triangle { <-74.672,133,30.328>, <-76,136,31.657>, <-76,4,31.657> }
		triangle { <-76,4,31.657>, <-74.672,7,30.328>, <-74.672,133,30.328> }
		triangle { <-38.343,136,-6>, <-76,136,31.657>, <-74.672,133,30.328> }
		triangle { <-74.672,133,30.328>, <-39.672,133,-4.672>, <-38.343,136,-6> }
	}
	object { rect_dot_dat matrix <0,0,9.1715,-1,0,0,0,-66,0,-76,70,40.8285> }
	object { rect_dot_dat matrix <0,0,-10,-1,0,0,0,2,0,-60,2,40> }
	object { rect_dot_dat matrix <0,0,-10,1,0,0,0,-72,0,-80,72,40> }
	mesh {
		triangle { <-80,0,50>, <-76,4,50>, <-76,136,50> }
		triangle { <-76,136,50>, <-80,144,50>, <-80,0,50> }
	}
}
#end
#end // ifndef (s_slash_30185s01_dot_dat)


//// Primitive stud2.dat
#ifndef (stud2_dot_dat)
#declare stud2_dot_dat = 
#if (L3Quality >= 4)
union {
#end
	difference {
		cylinder { <0,0,0>, <0,-4,0>, 6 }
		cylinder { <0,1,0>, <0,-5,0>, 4 }
	}
#if (L3Quality >= 4)
	object { L3Logo scale 0.75 }
}
#end
#end // ifndef (stud2_dot_dat)


//// Primitive stud3.dat
#ifndef (stud3_dot_dat)
#declare stud3_dot_dat = cylinder { <0,0,0>, <0,-4,0>, 4 }
#end // ifndef (stud3_dot_dat)


//// Part 30185.dat
#ifndef (_30185_dot_dat)
#declare _30185_dot_dat = #if (L3Quality = 0) box { <-80,-4,-10>, <80,144,50> } #else union {
// Window Bay  3 x  8 x  6
// Name: 30185.dat
// Author: Luis E. Fernandez [lfernand]
// !LDRAW_ORG Part UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-03-23 [PTadmin] Official Update 1998-03
// !HISTORY 1999-05-17 [PTadmin] Official Update 1999-03
// !HISTORY 2007-06-07 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [WilliamH] Re-worked prior to Luis Fernandez affirming the CA (2006-09-29)
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object { s_slash_30185s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_30185s01_dot_dat matrix <-1,0,0,0,1,0,0,0,1,0,0,0> }
	#if (L3Studs)
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,70,0,40> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,30,0,0> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,10,0,0> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,-10,0,0> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,-30,0,0> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,-70,0,40> }
// BFC INVERTNEXT
	#end
	object { box4_dot_dat matrix <36,0,0,0,0,4,0,19,0,0,26,-10> }
// BFC INVERTNEXT
	object { box4_dot_dat matrix <36,0,0,0,0,4,0,19,0,0,70,-10> }
// BFC INVERTNEXT
	object { box4_dot_dat matrix <36,0,0,0,0,4,0,19,0,0,114,-10> }
	object { rect_dot_dat matrix <40,0,0,0,0,-1,0,4,0,0,140,10> }
	object { rect_dot_dat matrix <40,0,0,0,0,-1,0,2,0,0,2,10> }
// BFC INVERTNEXT
	object { box5_dot_dat matrix <36,0,0,0,-4,0,0,0,6,0,144,0> }
	#if (L3Studs)
		object { stud3_dot_dat matrix <1,0,0,0,-1,0,0,0,1,20,140,0> }
		object { stud3_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,140,0> }
		object { stud3_dot_dat matrix <1,0,0,0,-1,0,0,0,1,-20,140,0> }
	#end
	mesh {
		triangle { <40,144,10>, <36,144,6>, <-36,144,6> }
		triangle { <-36,144,6>, <-40,144,10>, <40,144,10> }
		triangle { <-40,144,10>, <-36,144,6>, <-36,144,-6> }
		triangle { <-36,144,-6>, <-40,144,-10>, <-40,144,10> }
		triangle { <-40,144,-10>, <-36,144,-6>, <36,144,-6> }
		triangle { <36,144,-6>, <40,144,-10>, <-40,144,-10> }
		triangle { <40,144,-10>, <36,144,-6>, <36,144,6> }
		triangle { <36,144,6>, <40,144,10>, <40,144,-10> }
		triangle { <40,0,-10>, <36,7,-10>, <36,133,-10> }
		triangle { <36,133,-10>, <40,144,-10>, <40,0,-10> }
		triangle { <-40,144,-10>, <-36,133,-10>, <-36,7,-10> }
		triangle { <-36,7,-10>, <-40,0,-10>, <-40,144,-10> }
		triangle { <38.343,136,-6>, <36,133,-6>, <36,7,-6> }
		triangle { <36,7,-6>, <38.343,4,-6>, <38.343,136,-6> }
		triangle { <-38.343,4,-6>, <-36,7,-6>, <-36,133,-6> }
		triangle { <-36,133,-6>, <-38.343,136,-6>, <-38.343,4,-6> }
		triangle { <-36,95,-10>, <36,95,-10>, <36,89,-10> }
		triangle { <36,89,-10>, <-36,89,-10>, <-36,95,-10> }
		triangle { <-36,89,-6>, <36,89,-6>, <36,95,-6> }
		triangle { <36,95,-6>, <-36,95,-6>, <-36,89,-6> }
		triangle { <-36,51,-10>, <36,51,-10>, <36,45,-10> }
		triangle { <36,45,-10>, <-36,45,-10>, <-36,51,-10> }
		triangle { <-36,45,-6>, <36,45,-6>, <36,51,-6> }
		triangle { <36,51,-6>, <-36,51,-6>, <-36,45,-6> }
		triangle { <-40,144,-10>, <40,144,-10>, <36,133,-10> }
		triangle { <36,133,-10>, <-36,133,-10>, <-40,144,-10> }
		triangle { <-36,133,-6>, <36,133,-6>, <38.343,136,-6> }
		triangle { <38.343,136,-6>, <-38.343,136,-6>, <-36,133,-6> }
		triangle { <-38.343,4,-6>, <38.343,4,-6>, <36,7,-6> }
		triangle { <36,7,-6>, <-36,7,-6>, <-38.343,4,-6> }
		triangle { <-40,4,10>, <40,4,10>, <38.343,4,-6> }
		triangle { <38.343,4,-6>, <-38.343,4,-6>, <-40,4,10> }
		triangle { <-40,0,-10>, <40,0,-10>, <40,0,10> }
		triangle { <40,0,10>, <-40,0,10>, <-40,0,-10> }
		triangle { <-38.343,136,-6>, <38.343,136,-6>, <40,136,10> }
		triangle { <40,136,10>, <-40,136,10>, <-38.343,136,-6> }
		triangle { <-36,7,-10>, <36,7,-10>, <40,0,-10> }
		triangle { <40,0,-10>, <-40,0,-10>, <-36,7,-10> }
	}
}
#end
#end // ifndef (_30185_dot_dat)


//// Primitive rect3.dat
#ifndef (rect3_dot_dat)
#declare rect3_dot_dat = object {
// Rectangle with 3 Edges
// Name: rect3.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] Change winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect3_dot_dat)


//// Part s\30186s01.dat
#ifndef (s_slash_30186s01_dot_dat)
#declare s_slash_30186s01_dot_dat = #if (L3Quality = 0) box { <-76,4,-6.0005>, <76,136,34.2055> } #else union {
// ~Glass for Window Bay  3 x  8 x  6 without Front Face
// Name: s\30186s01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2007-08-25 {The LEGO Universe Team} Original part shape
// !HISTORY 2008-02-10 [Philo] Creation from LUT and WilliamH versions
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <36.9,4,-2.25>, <-36.89,4,-2.25>, <-38.45,4,-6> }
		triangle { <-38.45,4,-6>, <38.4,4,-6>, <36.9,4,-2.25> }
		triangle { <36.9,4,-2.25>, <38.4,4,-6>, <76,4,31.553> }
		triangle { <36.9,4,-2.25>, <76,4,31.553>, <76,4,34.205> }
		triangle { <76,4,34.205>, <73.3,4,34.205>, <36.9,4,-2.25> }
		triangle { <-76,4,31.553>, <-38.45,4,-6>, <-36.89,4,-2.25> }
		triangle { <-76,4,31.553>, <-36.89,4,-2.25>, <-73.348,4,34.205> }
		triangle { <-73.348,4,34.205>, <-76,4,34.205>, <-76,4,31.553> }
		triangle { <-36.89,136,-2.25>, <36.9,136,-2.25>, <38.4,136,-6> }
		triangle { <38.4,136,-6>, <-38.45,136,-6>, <-36.89,136,-2.25> }
		triangle { <-36.89,136,-2.25>, <-38.45,136,-6>, <-76,136,31.553> }
		triangle { <-36.89,136,-2.25>, <-76,136,31.553>, <-76,136,34.205> }
		triangle { <-76,136,34.205>, <-73.348,136,34.205>, <-36.89,136,-2.25> }
		triangle { <76,136,31.553>, <38.4,136,-6>, <36.9,136,-2.25> }
		triangle { <76,136,31.553>, <36.9,136,-2.25>, <73.3,136,34.205> }
		triangle { <73.3,136,34.205>, <76,136,34.205>, <76,136,31.553> }
	}
	object { rect_dot_dat matrix <36.9,0,0,0,0,-1,0,66,0,0,70,-2.25> }
	object { rect2p_dot_dat matrix <18.2,0,18.2275,0,0,-1,0,66,0,55.1,70,15.9775> }
	object { rect2p_dot_dat matrix <-18.2,0,18.2275,0,0,-1,0,66,0,-55.1,70,15.978> }
	object { rect_dot_dat matrix <1.326,0,0,0,0,-1,0,66,0,-74.674,70,34.205> }
	object { rect_dot_dat matrix <1.326,0,0,0,0,-1,0,66,0,74.674,70,34.205> }
	object { rect3_dot_dat matrix <0,-66,0,-1,0,0,0,0,-1.326,76,70,32.879> }
	object { rect3_dot_dat matrix <0,-66,0,1,0,0,0,0,-1.326,-76,70,32.879> }
	object { rect3_dot_dat matrix <0,-66,0,0,0,1,-18.8,0,-18.7765,57.2,70,12.7765> }
	object { rect3_dot_dat matrix <0,-66,0,0,0,1,18.8,0,-18.7765,-57.2,70,12.776> }
	#if (L3Studs)
		object { stud3_dot_dat matrix <0.4,0,0,0,0,-0.6,0,0.4,0,31,48,-2.25> }
		object { stud3_dot_dat matrix <0.4,0,0,0,0,-0.6,0,0.4,0,-31,48,-2.25> }
		object { stud3_dot_dat matrix <0.4,0,0,0,0,-0.6,0,0.4,0,31,92,-2.25> }
		object { stud3_dot_dat matrix <0.4,0,0,0,0,-0.6,0,0.4,0,-31,92,-2.25> }
	#end
}
#end
#end // ifndef (s_slash_30186s01_dot_dat)


//// Part 30186.dat
#ifndef (_30186_dot_dat)
#declare _30186_dot_dat = #if (L3Quality = 0) box { <-76,4,-6.0005>, <76,136,34.2055> } #else union {
// Glass for Window Bay  3 x  8 x  6
// Name: 30186.dat
// Author: Luis E. Fernandez [lfernand]
// !LDRAW_ORG Part UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-03-23 [PTadmin] Official Update 1998-03
// !HISTORY 1999-02-01 [PTadmin] Official Update 1999-01
// !HISTORY 2007-06-06 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [WilliamH] Re-worked prior to Luis Fernandez affirming the CA (2006-09-29)
// !HISTORY 2008-07-08 [PTadmin] Moved from 301 (2007-10-10)
// !HISTORY 2008-07-09 [Philo] Add more details from The LEGO Universe Team version (2008-02-10)
// !HISTORY 2008-07-10 [Philo] Subparted for patterned versions (2008-02-10)
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-38.45,136,-6>, <38.4,136,-6>, <38.4,4,-6> }
		triangle { <38.4,4,-6>, <-38.45,4,-6>, <-38.45,136,-6> }
	}
	object { s_slash_30186s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end
#end // ifndef (_30186_dot_dat)


//// Part 30185c04.dat
#ifndef (_30185c04_dot_dat)
#declare _30185c04_dot_dat = #if (L3Quality = 0) box { <-80,-4,-10>, <80,144,50> } #else union {
// Window Bay  3 x  8 x  6 with Clear Glass
// Name: 30185c04.dat
// Author: William Howard [WilliamH]
// !LDRAW_ORG Shortcut UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object { _30185_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _30186_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> material { L3Color47 } }
}
#end
#end // ifndef (_30185c04_dot_dat)


//// Color 33 Trans_Dark_Blue (from ldconfig.ldr)
#ifndef (L3Texture33)
#declare L3Texture33 = L3TextureTransparentRGBA(0,32,160,128)
#end
#ifndef (L3Texture33_slope)
#declare L3Texture33_slope = L3TextureSlope(L3Texture33)
#end
#ifndef (L3Color33)
#declare L3Color33 = L3MaterialT(L3Texture33)
#end
#ifndef (L3Color33_slope)
#declare L3Color33_slope = L3MaterialT(L3Texture33_slope)
#end


//// Part 30185c02.dat
#ifndef (_30185c02_dot_dat)
#declare _30185c02_dot_dat = #if (L3Quality = 0) box { <-80,-4,-10>, <80,144,50> } #else union {
// Window Bay  3 x  8 x  6 with Trans-Blue Glass (Complete)
// Name: 30185c02.dat
// Author: William Howard [WilliamH]
// !LDRAW_ORG Shortcut UPDATE 2010-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-07-05 [PTadmin] Official Update 2010-02
	object { _30185_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _30186_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> material { L3Color33 } }
}
#end
#end // ifndef (_30185c02_dot_dat)


//// Color 34 Trans_Green (from ldconfig.ldr)
#ifndef (L3Texture34)
#declare L3Texture34 = L3TextureTransparentRGBA(35,120,65,128)
#end
#ifndef (L3Texture34_slope)
#declare L3Texture34_slope = L3TextureSlope(L3Texture34)
#end
#ifndef (L3Color34)
#declare L3Color34 = L3MaterialT(L3Texture34)
#end
#ifndef (L3Color34_slope)
#declare L3Color34_slope = L3MaterialT(L3Texture34_slope)
#end


//// Part 30185c05.dat
#ifndef (_30185c05_dot_dat)
#declare _30185c05_dot_dat = #if (L3Quality = 0) box { <-80,-4,-10>, <80,144,50> } #else union {
// Window Bay  3 x  8 x  6 with Trans-Green Glass
// Name: 30185c05.dat
// Author: William Howard [WilliamH]
// !LDRAW_ORG Shortcut UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object { _30185_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _30186_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> material { L3Color34 } }
}
#end
#end // ifndef (_30185c05_dot_dat)


//// Color 41 Trans_Medium_Blue (from ldconfig.ldr)
#ifndef (L3Texture41)
#declare L3Texture41 = L3TextureTransparentRGBA(85,154,183,128)
#end
#ifndef (L3Texture41_slope)
#declare L3Texture41_slope = L3TextureSlope(L3Texture41)
#end
#ifndef (L3Color41)
#declare L3Color41 = L3MaterialT(L3Texture41)
#end
#ifndef (L3Color41_slope)
#declare L3Color41_slope = L3MaterialT(L3Texture41_slope)
#end


//// Part 30185c03.dat
#ifndef (_30185c03_dot_dat)
#declare _30185c03_dot_dat = #if (L3Quality = 0) box { <-80,-4,-10>, <80,144,50> } #else union {
// Window Bay  3 x  8 x  6 with Trans-Light-Blue Glass
// Name: 30185c03.dat
// Author: William Howard [WilliamH]
// !LDRAW_ORG Shortcut UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object { _30185_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _30186_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> material { L3Color41 } }
}
#end
#end // ifndef (_30185c03_dot_dat)


//// Color 4 Red (from ldconfig.ldr)
#ifndef (L3Texture4)
#declare L3Texture4 = L3TextureOpaqueRGB(201,26,9)
#end
#ifndef (L3Texture4_slope)
#declare L3Texture4_slope = L3TextureSlope(L3Texture4)
#end
#ifndef (L3Color4)
#declare L3Color4 = L3Material(L3Texture4)
#end
#ifndef (L3Color4_slope)
#declare L3Color4_slope = L3Material(L3Texture4_slope)
#end


//// Primitive stud2a.dat
#ifndef (stud2a_dot_dat)
#declare stud2a_dot_dat = 
#if (L3Quality >= 4)
union {
#end
	difference {
		cylinder { <0,0,0>, <0,-4,0>, 6 }
		cylinder { <0,1,0>, <0,-5,0>, 4 }
	}
#if (L3Quality >= 4)
	object { L3Logo scale 0.75 }
}
#end
#end // ifndef (stud2a_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 2-4ndis.dat
#ifndef (_2_dash_4ndis_dot_dat)
#declare _2_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <-1,-1,0>, <1,1,1> } } }
#end // ifndef (_2_dash_4ndis_dot_dat)


//// Part s\4444s01.dat
#ifndef (s_slash_4444s01_dot_dat)
#declare s_slash_4444s01_dot_dat = #if (L3Quality = 0) box { <-50,-4,-10>, <50,144,30> } #else union {
// ~Panel  2 x  5 x  6 Wall without Front Face
// Name: s\4444s01.dat
// Author: Andy Westrate [westrate]
// !LDRAW_ORG Subpart UPDATE 2004-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !HISTORY 2003-09-17 [westrate] Created subfile, added primitives, BFC'd
// !HISTORY 2004-09-15 [PTadmin] Official Update 2004-03
// !HISTORY 2007-09-09 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	#if (L3Studs)
		object { stud2a_dot_dat matrix <1,0,0,0,1,0,0,0,1,20,0,0> }
	#end
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,8,0,0,0,6,20,0,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,8,0,0,0,4,20,0,0> }
	#if (L3Studs)
		object { stud2a_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	#end
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,8,0,0,0,6,0,0,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,8,0,0,0,4,0,0,0> }
	#if (L3Studs)
		object { stud2a_dot_dat matrix <1,0,0,0,1,0,0,0,1,-20,0,0> }
	#end
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,8,0,0,0,6,-20,0,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,8,0,0,0,4,-20,0,0> }
// BFC INVERTNEXT
	object { box5_dot_dat matrix <28,0,0,0,8,0,0,0,8,0,0,0> }
	#if (L3Studs)
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,40,24,0> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,-40,24,0> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,20,8,20> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,8,20> }
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,-20,8,20> }
	#end
	object { rect_dot_dat matrix <30,0,0,0,1,0,0,0,10,0,8,20> }
	object { rect3_dot_dat matrix <30,0,0,0,0,-1,0,-4,0,0,4,10> }
	object { rect_dot_dat matrix <26,0,0,0,-1,0,0,0,18,0,12,12> }
	object { rect_dot_dat matrix <2,0,0,0,-1,0,0,0,10,28,16,20> }
	object { rect_dot_dat matrix <2,0,0,0,-1,0,0,0,10,-28,16,20> }
	mesh {
		triangle { <30,0,10>, <28,0,8>, <-28,0,8> }
		triangle { <-28,0,8>, <-30,0,10>, <30,0,10> }
		triangle { <-30,0,10>, <-28,0,8>, <-28,0,-8> }
		triangle { <-28,0,-8>, <-30,0,-10>, <-30,0,10> }
		triangle { <-30,0,-10>, <-28,0,-8>, <28,0,-8> }
		triangle { <28,0,-8>, <30,0,-10>, <-30,0,-10> }
		triangle { <30,0,-10>, <28,0,-8>, <28,0,8> }
		triangle { <28,0,8>, <30,0,10>, <30,0,-10> }
		triangle { <30,16,-10>, <30,0,-10>, <30,0,10> }
		triangle { <30,0,10>, <30,8,10>, <30,16,-10> }
		triangle { <-30,0,10>, <-30,0,-10>, <-30,16,-10> }
		triangle { <-30,16,-10>, <-30,8,10>, <-30,0,10> }
		triangle { <30,8,10>, <30,8,30>, <30,16,30> }
		triangle { <30,16,30>, <30,16,-10>, <30,8,10> }
		triangle { <-30,16,30>, <-30,8,30>, <-30,8,10> }
		triangle { <-30,8,10>, <-30,16,-10>, <-30,16,30> }
		triangle { <26,16,30>, <26,12,30>, <26,12,-6> }
		triangle { <26,12,-6>, <26,16,-6>, <26,16,30> }
		triangle { <-26,12,-6>, <-26,12,30>, <-26,16,30> }
		triangle { <-26,16,30>, <-26,16,-6>, <-26,12,-6> }
		triangle { <30,16,30>, <30,8,30>, <26,12,30> }
		triangle { <26,12,30>, <26,16,30>, <30,16,30> }
		triangle { <-26,12,30>, <-30,8,30>, <-30,16,30> }
		triangle { <-30,16,30>, <-26,16,30>, <-26,12,30> }
		triangle { <26,12,30>, <30,8,30>, <-30,8,30> }
		triangle { <-30,8,30>, <-26,12,30>, <26,12,30> }
// Window
// BFC INVERTNEXT
	}
	object { _2_dash_4cyli_dot_dat matrix <10,0,0,0,0,4,0,-10,0,0,42,-10> }
	object { rect_dot_dat matrix <10,0,0,0,4,0,0,0,2,0,72,-8> }
	object { rect2p_dot_dat matrix <0,-15,0,4,0,0,0,0,2,10,57,-8> }
	object { rect2p_dot_dat matrix <0,-15,0,-4,0,0,0,0,2,-10,57,-8> }
// Outside edge
	object { rect_dot_dat matrix <0,0,10,1,0,0,0,48,0,-50,72,0> }
	object { rect_dot_dat matrix <0,0,10,-1,0,0,0,48,0,50,72,0> }
	object { rect2p_dot_dat matrix <0,4,0,1,0,0,0,0,-10,-30,20,0> }
	object { rect3_dot_dat matrix <0,0,-10,0,1,0,10,0,0,-40,24,0> }
	object { rect2p_dot_dat matrix <0,4,0,-1,0,0,0,0,10,30,20,0.001> }
	object { rect3_dot_dat matrix <0,0,10,0,1,0,-10,0,0,40,24,0> }
// Inside edge
	mesh {
		triangle { <30,144,10>, <30,136,10>, <-30,136,10> }
		triangle { <-30,136,10>, <-30,144,10>, <30,144,10> }
		triangle { <26,120,10>, <26,136,10>, <30,136,10> }
		triangle { <30,136,10>, <30,120,10>, <26,120,10> }
		triangle { <-30,136,10>, <-26,136,10>, <-26,120,10> }
		triangle { <-26,120,10>, <-30,120,10>, <-30,136,10> }
		triangle { <50,112,10>, <26,112,10>, <26,120,10> }
		triangle { <26,120,10>, <50,120,10>, <50,112,10> }
		triangle { <-26,120,10>, <-26,112,10>, <-50,112,10> }
		triangle { <-50,112,10>, <-50,120,10>, <-26,120,10> }
		triangle { <50,112,10>, <50,28,10>, <46,28,10> }
		triangle { <46,28,10>, <46,112,10>, <50,112,10> }
		triangle { <-46,28,10>, <-50,28,10>, <-50,112,10> }
		triangle { <-50,112,10>, <-46,112,10>, <-46,28,10> }
		triangle { <50,28,10>, <50,24,10>, <26,24,10> }
		triangle { <26,24,10>, <26,28,10>, <50,28,10> }
		triangle { <-26,24,10>, <-50,24,10>, <-50,28,10> }
		triangle { <-50,28,10>, <-26,28,10>, <-26,24,10> }
		triangle { <26,24,10>, <30,24,10>, <30,16,10> }
		triangle { <30,16,10>, <26,16,10>, <26,24,10> }
		triangle { <-30,16,10>, <-30,24,10>, <-26,24,10> }
		triangle { <-26,24,10>, <-26,16,10>, <-30,16,10> }
	}
	object { rect2p_dot_dat matrix <0,6,0,-1,0,0,0,0,-8,-26,22,2> }
	object { rect3_dot_dat matrix <0,0,-8,0,-1,0,10,0,0,-36,28,2> }
	object { rect_dot_dat matrix <0,0,8,-1,0,0,0,42,0,-46,70,2> }
	object { rect3_dot_dat matrix <0,0,-8,0,1,0,10,0,0,-36,112,2> }
	object { rect3_dot_dat matrix <0,0,-8,-1,0,0,0,12,0,-26,124,2> }
	object { rect2p_dot_dat matrix <26,0,0,0,1,0,0,0,8,0,136,2> }
	object { rect3_dot_dat matrix <0,0,8,1,0,0,0,12,0,26,124,2> }
	object { rect3_dot_dat matrix <0,0,8,0,1,0,-10,0,0,36,112,2> }
	object { rect_dot_dat matrix <0,0,8,1,0,0,0,42,0,46,70,2> }
	object { rect3_dot_dat matrix <0,0,8,0,-1,0,-10,0,0,36,28,2> }
	object { rect2p_dot_dat matrix <0,6,0,1,0,0,0,0,-8,26,22,2> }
// Inside face
	object { _2_dash_4ndis_dot_dat matrix <10,0,0,0,0,-1,0,-10,0,0,42,-6> }
	mesh {
		triangle { <46,112,-6>, <10,72,-6>, <-10,72,-6> }
		triangle { <-10,72,-6>, <-46,112,-6>, <46,112,-6> }
		triangle { <10,32,-6>, <46,28,-6>, <-46,28,-6> }
		triangle { <-46,28,-6>, <-10,32,-6>, <10,32,-6> }
		triangle { <26,136,-6>, <26,112,-6>, <-26,112,-6> }
		triangle { <-26,112,-6>, <-26,136,-6>, <26,136,-6> }
		triangle { <46,112,-6>, <46,28,-6>, <10,32,-6> }
		triangle { <10,32,-6>, <10,72,-6>, <46,112,-6> }
		triangle { <-10,32,-6>, <-46,28,-6>, <-46,112,-6> }
		triangle { <-46,112,-6>, <-10,72,-6>, <-10,32,-6> }
		triangle { <26,28,-6>, <26,12,-6>, <-26,12,-6> }
		triangle { <-26,12,-6>, <-26,28,-6>, <26,28,-6> }
// Bottom
		triangle { <-46,120,6>, <-30,120,6>, <-30,120,10> }
		triangle { <-30,120,10>, <-50,120,10>, <-46,120,6> }
		triangle { <-46,120,-6>, <-46,120,6>, <-50,120,10> }
		triangle { <-50,120,10>, <-50,120,-10>, <-46,120,-6> }
		triangle { <-30,120,-6>, <-46,120,-6>, <-50,120,-10> }
		triangle { <-50,120,-10>, <-30,120,-10>, <-30,120,-6> }
// BFC INVERTNEXT
	}
	object { box4_dash_1_dot_dat matrix <0,0,-6,0,-4,0,-8,0,0,-38,120,0> }
	object { box4_dash_1_dot_dat matrix <0,0,1.5,0,4,0,-2,0,0,-32,116,0> }
	mesh {
		triangle { <-30,120,10>, <-30,120,-10>, <-30,144,-10> }
		triangle { <-30,144,-10>, <-30,144,10>, <-30,120,10> }
		triangle { <-30,116,-6>, <-30,120,-6>, <-30,120,6> }
		triangle { <-30,120,6>, <-30,116,6>, <-30,116,-6> }
		triangle { <46,120,-6>, <30,120,-6>, <30,120,-10> }
		triangle { <30,120,-10>, <50,120,-10>, <46,120,-6> }
		triangle { <46,120,6>, <46,120,-6>, <50,120,-10> }
		triangle { <50,120,-10>, <50,120,10>, <46,120,6> }
		triangle { <30,120,6>, <46,120,6>, <50,120,10> }
		triangle { <50,120,10>, <30,120,10>, <30,120,6> }
// BFC INVERTNEXT
	}
	object { box4_dash_1_dot_dat matrix <0,0,6,0,-4,0,8,0,0,38,120,0> }
	object { box4_dash_1_dot_dat matrix <0,0,-1.5,0,4,0,2,0,0,32,116,0> }
	mesh {
		triangle { <30,120,-10>, <30,120,10>, <30,144,10> }
		triangle { <30,144,10>, <30,144,-10>, <30,120,-10> }
		triangle { <30,116,6>, <30,120,6>, <30,120,-6> }
		triangle { <30,120,-6>, <30,116,-6>, <30,116,6> }
		triangle { <-26,144,6>, <26,144,6>, <30,144,10> }
		triangle { <30,144,10>, <-30,144,10>, <-26,144,6> }
		triangle { <-26,144,-6>, <-26,144,6>, <-30,144,10> }
		triangle { <-30,144,10>, <-30,144,-10>, <-26,144,-6> }
		triangle { <26,144,-6>, <-26,144,-6>, <-30,144,-10> }
		triangle { <-30,144,-10>, <30,144,-10>, <26,144,-6> }
		triangle { <26,144,6>, <26,144,-6>, <30,144,-10> }
		triangle { <30,144,-10>, <30,144,10>, <26,144,6> }
// BFC INVERTNEXT
	}
	object { box5_dot_dat matrix <26,0,0,0,-4,0,0,0,6,0,144,0> }
	#if (L3Studs)
		object { stud3_dot_dat matrix <1,0,0,0,-1,0,0,0,1,-10,140,0> }
		object { stud3_dot_dat matrix <1,0,0,0,-1,0,0,0,1,10,140,0> }
	#end
}
#end
#end // ifndef (s_slash_4444s01_dot_dat)


//// Part 4444p06.dat
#ifndef (_4444p06_dot_dat)
#declare _4444p06_dot_dat = #if (L3Quality = 0) box { <-50,-4,-10>, <50,144,30> } #else union {
// Panel  2 x  5 x  6 with Red Window Bricks Pattern
// Name: 4444p06.dat
// Author: J.C. Tchang [tchang]
// !LDRAW_ORG Part UPDATE 2012-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !KEYWORDS Castle Wall
// !HISTORY 2012-08-09 [PTadmin] Official Update 2012-02
	object { s_slash_4444s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
// 
	mesh {
		triangle { <2.7,18.2,-10>, <0,18,-10>, <0,32,-10> }
		triangle { <0,32,-10>, <2.23109,32.4436,-10>, <2.7,18.2,-10> }
		triangle { <2.7,18.2,-10>, <2.23109,32.4436,-10>, <5.35,18.65,-10> }
		triangle { <7.6,19.2,-10>, <3.827,32.761,-10>, <6.5705,34.5945,-10> }
		triangle { <6.5705,34.5945,-10>, <12,21.216,-10>, <7.6,19.2,-10> }
		triangle { <12,21.216,-10>, <6.5705,34.5945,-10>, <15.75,24,-10> }
		triangle { <20.1,29,-10>, <17.2,25.25,-10>, <7.071,34.929,-10> }
		triangle { <7.071,34.929,-10>, <9.239,38.173,-10>, <20.1,29,-10> }
		triangle { <22.3736,33.2152,-10>, <20.1,29,-10>, <9.239,38.173,-10> }
		triangle { <9.239,38.173,-10>, <9.37658,38.8649,-10>, <22.3736,33.2152,-10> }
		triangle { <24,39.9,-10>, <23.1816,35.3888,-10>, <9.57167,39.846,-10> }
		triangle { <9.57167,39.846,-10>, <10,42,-10>, <24,39.9,-10> }
		triangle { <24.1,44,-10>, <24,39.9,-10>, <10,42,-10> }
		triangle { <10,42,-10>, <10,44,-10>, <24.1,44,-10> }
		triangle { <20,46,-10>, <10,46,-10>, <10,53.6,-10> }
		triangle { <10,53.6,-10>, <20,53.6,-10>, <20,46,-10> }
		triangle { <14.6,55,-10>, <10,55,-10>, <10,63,-10> }
		triangle { <10,63,-10>, <14.6,63,-10>, <14.6,55,-10> }
		triangle { <20,55,-10>, <16,55,-10>, <16,63,-10> }
		triangle { <16,63,-10>, <20,63,-10>, <20,55,-10> }
		triangle { <20,64,-10>, <10,64,-10>, <10,72,-10> }
		triangle { <10,72,-10>, <20,72,-10>, <20,64,-10> }
		triangle { <8,73,-10>, <0,73,-10>, <0,80.5,-10> }
		triangle { <0,80.5,-10>, <8,80.5,-10>, <8,73,-10> }
		triangle { <23.5,73,-10>, <9,73,-10>, <9,80.5,-10> }
		triangle { <9,80.5,-10>, <23.5,80.5,-10>, <23.5,73,-10> }
		triangle { <15,82,-10>, <0.5,82,-10>, <0.5,89,-10> }
		triangle { <0.5,89,-10>, <15,89,-10>, <15,82,-10> }
		triangle { <23.5,82,-10>, <16.5,82,-10>, <16.5,89,-10> }
		triangle { <16.5,89,-10>, <23.5,89,-10>, <23.5,82,-10> }
		triangle { <-2.231,32.444,-10>, <0,32,-10>, <0,18,-10> }
		triangle { <0,18,-10>, <-2.7,18.2,-10>, <-2.231,32.444,-10> }
		triangle { <-5.35,18.65,-10>, <-2.231,32.444,-10>, <-2.7,18.2,-10> }
		triangle { <-12,21.216,-10>, <-6.57,34.594,-10>, <-3.827,32.761,-10> }
		triangle { <-3.827,32.761,-10>, <-7.6,19.2,-10>, <-12,21.216,-10> }
		triangle { <-15.75,24,-10>, <-6.57,34.594,-10>, <-12,21.216,-10> }
		triangle { <-9.239,38.173,-10>, <-7.071,34.929,-10>, <-17.2,25.25,-10> }
		triangle { <-17.2,25.25,-10>, <-20.1,29,-10>, <-9.239,38.173,-10> }
		triangle { <-9.377,38.865,-10>, <-9.239,38.173,-10>, <-20.1,29,-10> }
		triangle { <-20.1,29,-10>, <-22.374,33.215,-10>, <-9.377,38.865,-10> }
		triangle { <-10,42,-10>, <-9.572,39.846,-10>, <-23.182,35.389,-10> }
		triangle { <-23.182,35.389,-10>, <-24,39.9,-10>, <-10,42,-10> }
		triangle { <-10,44,-10>, <-10,42,-10>, <-24,39.9,-10> }
		triangle { <-24,39.9,-10>, <-24.1,44,-10>, <-10,44,-10> }
		triangle { <-20,53.6,-10>, <-10,53.6,-10>, <-10,46,-10> }
		triangle { <-10,46,-10>, <-20,46,-10>, <-20,53.6,-10> }
		triangle { <-14.6,63,-10>, <-10,63,-10>, <-10,55,-10> }
		triangle { <-10,55,-10>, <-14.6,55,-10>, <-14.6,63,-10> }
		triangle { <-20,63,-10>, <-16,63,-10>, <-16,55,-10> }
		triangle { <-16,55,-10>, <-20,55,-10>, <-20,63,-10> }
		triangle { <-20,72,-10>, <-10,72,-10>, <-10,64,-10> }
		triangle { <-10,64,-10>, <-20,64,-10>, <-20,72,-10> }
		triangle { <-8,80.5,-10>, <0,80.5,-10>, <0,73,-10> }
		triangle { <0,73,-10>, <-8,73,-10>, <-8,80.5,-10> }
		triangle { <-23.5,80.5,-10>, <-9,80.5,-10>, <-9,73,-10> }
		triangle { <-9,73,-10>, <-23.5,73,-10>, <-23.5,80.5,-10> }
		triangle { <-15,89,-10>, <-0.5,89,-10>, <-0.5,82,-10> }
		triangle { <-0.5,82,-10>, <-15,82,-10>, <-15,89,-10> }
		triangle { <-23.5,89,-10>, <-16.5,89,-10>, <-16.5,82,-10> }
		triangle { <-16.5,82,-10>, <-23.5,82,-10>, <-23.5,89,-10> }
// 
		material { L3Color4 }
	}
	mesh {
		triangle { <20.5,46,-10>, <20,53.6,-10>, <20,55,-10> }
		triangle { <20.5,46,-10>, <20,55,-10>, <20,63,-10> }
		triangle { <20,63,-10>, <20.5,72,-10>, <20.5,46,-10> }
		triangle { <-20.5,72,-10>, <-20,63,-10>, <-20,55,-10> }
		triangle { <-20,55,-10>, <-20.5,46,-10>, <-20.5,72,-10> }
		triangle { <-20.5,46,-10>, <-20,55,-10>, <-20,53.6,-10> }
		triangle { <0,17.5,-10>, <0,18,-10>, <2.7,18.2,-10> }
		triangle { <2.7,18.2,-10>, <2.75,17.6,-10>, <0,17.5,-10> }
		triangle { <2.75,17.6,-10>, <2.7,18.2,-10>, <5.35,18.65,-10> }
		triangle { <5.35,18.65,-10>, <5.4,18.15,-10>, <2.75,17.6,-10> }
		triangle { <5.4,18.15,-10>, <5.35,18.65,-10>, <7.6,19.2,-10> }
		triangle { <7.6,19.2,-10>, <7.75,18.75,-10>, <5.4,18.15,-10> }
		triangle { <7.75,18.75,-10>, <7.6,19.2,-10>, <12,21.216,-10> }
		triangle { <12,21.216,-10>, <12.25,20.8,-10>, <7.75,18.75,-10> }
		triangle { <12.25,20.8,-10>, <12,21.216,-10>, <15.75,24,-10> }
		triangle { <15.75,24,-10>, <16.05,23.55,-10>, <12.25,20.8,-10> }
		triangle { <16.05,23.55,-10>, <15.75,24,-10>, <17.2,25.25,-10> }
		triangle { <17.2,25.25,-10>, <17.65,24.9,-10>, <16.05,23.55,-10> }
		triangle { <17.65,24.9,-10>, <17.2,25.25,-10>, <20.1,29,-10> }
		triangle { <20.1,29,-10>, <20.55,28.85,-10>, <17.65,24.9,-10> }
		triangle { <20.55,28.85,-10>, <20.1,29,-10>, <22.3736,33.2152,-10> }
		triangle { <22.3736,33.2152,-10>, <22.85,33,-10>, <20.55,28.85,-10> }
		triangle { <22.85,33,-10>, <22.3736,33.2152,-10>, <23.1816,35.3888,-10> }
		triangle { <23.1816,35.3888,-10>, <23.65,35.35,-10>, <22.85,33,-10> }
		triangle { <23.65,35.35,-10>, <23.1816,35.3888,-10>, <24,39.9,-10> }
		triangle { <24,39.9,-10>, <24.5,39.95,-10>, <23.65,35.35,-10> }
		triangle { <24.5,39.95,-10>, <24,39.9,-10>, <24.1,44,-10> }
		triangle { <24.1,44,-10>, <24.5,44,-10>, <24.5,39.95,-10> }
		triangle { <24.5,46,-10>, <24.5,44,-10>, <24.1,44,-10> }
		triangle { <24.1,44,-10>, <20.5,46,-10>, <24.5,46,-10> }
		triangle { <5.35,18.65,-10>, <2.23109,32.4436,-10>, <3.827,32.761,-10> }
		triangle { <3.827,32.761,-10>, <7.6,19.2,-10>, <5.35,18.65,-10> }
		triangle { <15.75,24,-10>, <6.5705,34.5945,-10>, <7.071,34.929,-10> }
		triangle { <7.071,34.929,-10>, <17.2,25.25,-10>, <15.75,24,-10> }
		triangle { <22.3736,33.2152,-10>, <9.37658,38.8649,-10>, <9.57167,39.846,-10> }
		triangle { <9.57167,39.846,-10>, <23.1816,35.3888,-10>, <22.3736,33.2152,-10> }
		triangle { <10,44,-10>, <10,46,-10>, <20,46,-10> }
		triangle { <20,46,-10>, <24.1,44,-10>, <10,44,-10> }
		triangle { <24.1,44,-10>, <20,46,-10>, <20.5,46,-10> }
		triangle { <20.5,46,-10>, <20,46,-10>, <20,53.6,-10> }
		triangle { <20,63,-10>, <20,64,-10>, <20.5,72,-10> }
		triangle { <20,64,-10>, <20,72,-10>, <20.5,72,-10> }
		triangle { <16,55,-10>, <14.6,55,-10>, <14.6,63,-10> }
		triangle { <14.6,63,-10>, <16,63,-10>, <16,55,-10> }
		triangle { <10,53.6,-10>, <10,55,-10>, <14.6,55,-10> }
		triangle { <10,53.6,-10>, <14.6,55,-10>, <16,55,-10> }
		triangle { <16,55,-10>, <20,53.6,-10>, <10,53.6,-10> }
		triangle { <20,53.6,-10>, <16,55,-10>, <20,55,-10> }
		triangle { <14.6,63,-10>, <10,63,-10>, <10,64,-10> }
		triangle { <16,63,-10>, <14.6,63,-10>, <10,64,-10> }
		triangle { <10,64,-10>, <20,64,-10>, <16,63,-10> }
		triangle { <20,63,-10>, <16,63,-10>, <20,64,-10> }
		triangle { <0,72,-10>, <0,73,-10>, <8,73,-10> }
		triangle { <8,73,-10>, <10,72,-10>, <0,72,-10> }
		triangle { <10,72,-10>, <8,73,-10>, <9,73,-10> }
		triangle { <9,73,-10>, <20,72,-10>, <10,72,-10> }
		triangle { <20,72,-10>, <9,73,-10>, <23.5,73,-10> }
		triangle { <23.5,73,-10>, <20.5,72,-10>, <20,72,-10> }
		triangle { <24,72,-10>, <20.5,72,-10>, <23.5,73,-10> }
		triangle { <24,72,-10>, <23.5,73,-10>, <23.5,80.5,-10> }
		triangle { <24,72,-10>, <23.5,80.5,-10>, <23.5,82,-10> }
		triangle { <23.5,82,-10>, <24,89.5,-10>, <24,72,-10> }
		triangle { <23.5,82,-10>, <23.5,89,-10>, <24,89.5,-10> }
		triangle { <0.5,82,-10>, <0,80.5,-10>, <0,89.5,-10> }
		triangle { <0,89.5,-10>, <0.5,89,-10>, <0.5,82,-10> }
		triangle { <15,89,-10>, <0.5,89,-10>, <0,89.5,-10> }
		triangle { <0,89.5,-10>, <24,89.5,-10>, <15,89,-10> }
		triangle { <16.5,89,-10>, <15,89,-10>, <24,89.5,-10> }
		triangle { <23.5,89,-10>, <16.5,89,-10>, <24,89.5,-10> }
		triangle { <16.5,82,-10>, <15,82,-10>, <15,89,-10> }
		triangle { <15,89,-10>, <16.5,89,-10>, <16.5,82,-10> }
		triangle { <9,73,-10>, <8,73,-10>, <8,80.5,-10> }
		triangle { <8,80.5,-10>, <9,80.5,-10>, <9,73,-10> }
		triangle { <8,80.5,-10>, <0,80.5,-10>, <0.5,82,-10> }
		triangle { <9,80.5,-10>, <8,80.5,-10>, <0.5,82,-10> }
		triangle { <0.5,82,-10>, <15,82,-10>, <9,80.5,-10> }
		triangle { <9,80.5,-10>, <15,82,-10>, <16.5,82,-10> }
		triangle { <16.5,82,-10>, <23.5,80.5,-10>, <9,80.5,-10> }
		triangle { <23.5,80.5,-10>, <16.5,82,-10>, <23.5,82,-10> }
		triangle { <-2.75,17.6,-10>, <-2.7,18.2,-10>, <0,18,-10> }
		triangle { <0,18,-10>, <0,17.5,-10>, <-2.75,17.6,-10> }
		triangle { <-5.4,18.15,-10>, <-5.35,18.65,-10>, <-2.7,18.2,-10> }
		triangle { <-2.7,18.2,-10>, <-2.75,17.6,-10>, <-5.4,18.15,-10> }
		triangle { <-7.75,18.75,-10>, <-7.6,19.2,-10>, <-5.35,18.65,-10> }
		triangle { <-5.35,18.65,-10>, <-5.4,18.15,-10>, <-7.75,18.75,-10> }
		triangle { <-12.25,20.8,-10>, <-12,21.216,-10>, <-7.6,19.2,-10> }
		triangle { <-7.6,19.2,-10>, <-7.75,18.75,-10>, <-12.25,20.8,-10> }
		triangle { <-16.05,23.55,-10>, <-15.75,24,-10>, <-12,21.216,-10> }
		triangle { <-12,21.216,-10>, <-12.25,20.8,-10>, <-16.05,23.55,-10> }
		triangle { <-17.65,24.9,-10>, <-17.2,25.25,-10>, <-15.75,24,-10> }
		triangle { <-15.75,24,-10>, <-16.05,23.55,-10>, <-17.65,24.9,-10> }
		triangle { <-20.55,28.85,-10>, <-20.1,29,-10>, <-17.2,25.25,-10> }
		triangle { <-17.2,25.25,-10>, <-17.65,24.9,-10>, <-20.55,28.85,-10> }
		triangle { <-22.85,33,-10>, <-22.374,33.215,-10>, <-20.1,29,-10> }
		triangle { <-20.1,29,-10>, <-20.55,28.85,-10>, <-22.85,33,-10> }
		triangle { <-23.65,35.35,-10>, <-23.182,35.389,-10>, <-22.374,33.215,-10> }
		triangle { <-22.374,33.215,-10>, <-22.85,33,-10>, <-23.65,35.35,-10> }
		triangle { <-24.5,39.95,-10>, <-24,39.9,-10>, <-23.182,35.389,-10> }
		triangle { <-23.182,35.389,-10>, <-23.65,35.35,-10>, <-24.5,39.95,-10> }
		triangle { <-24.5,44,-10>, <-24.1,44,-10>, <-24,39.9,-10> }
		triangle { <-24,39.9,-10>, <-24.5,39.95,-10>, <-24.5,44,-10> }
		triangle { <-20.5,46,-10>, <-24.1,44,-10>, <-24.5,44,-10> }
		triangle { <-24.5,44,-10>, <-24.5,46,-10>, <-20.5,46,-10> }
		triangle { <-7.6,19.2,-10>, <-3.827,32.761,-10>, <-2.231,32.444,-10> }
		triangle { <-2.231,32.444,-10>, <-5.35,18.65,-10>, <-7.6,19.2,-10> }
		triangle { <-17.2,25.25,-10>, <-7.071,34.929,-10>, <-6.57,34.594,-10> }
		triangle { <-6.57,34.594,-10>, <-15.75,24,-10>, <-17.2,25.25,-10> }
		triangle { <-23.182,35.389,-10>, <-9.572,39.846,-10>, <-9.377,38.865,-10> }
		triangle { <-9.377,38.865,-10>, <-22.374,33.215,-10>, <-23.182,35.389,-10> }
		triangle { <-24.1,44,-10>, <-20,46,-10>, <-10,46,-10> }
		triangle { <-10,46,-10>, <-10,44,-10>, <-24.1,44,-10> }
		triangle { <-24.1,44,-10>, <-20.5,46,-10>, <-20,46,-10> }
		triangle { <-20,46,-10>, <-20.5,46,-10>, <-20,53.6,-10> }
		triangle { <-20,63,-10>, <-20.5,72,-10>, <-20,64,-10> }
		triangle { <-20,64,-10>, <-20.5,72,-10>, <-20,72,-10> }
		triangle { <-16,63,-10>, <-14.6,63,-10>, <-14.6,55,-10> }
		triangle { <-14.6,55,-10>, <-16,55,-10>, <-16,63,-10> }
		triangle { <-10,53.6,-10>, <-14.6,55,-10>, <-10,55,-10> }
		triangle { <-20,53.6,-10>, <-16,55,-10>, <-14.6,55,-10> }
		triangle { <-14.6,55,-10>, <-10,53.6,-10>, <-20,53.6,-10> }
		triangle { <-20,53.6,-10>, <-20,55,-10>, <-16,55,-10> }
		triangle { <-10,64,-10>, <-10,63,-10>, <-14.6,63,-10> }
		triangle { <-14.6,63,-10>, <-20,64,-10>, <-10,64,-10> }
		triangle { <-14.6,63,-10>, <-16,63,-10>, <-20,64,-10> }
		triangle { <-16,63,-10>, <-20,63,-10>, <-20,64,-10> }
		triangle { <-10,72,-10>, <-8,73,-10>, <0,73,-10> }
		triangle { <0,73,-10>, <0,72,-10>, <-10,72,-10> }
		triangle { <-20,72,-10>, <-9,73,-10>, <-8,73,-10> }
		triangle { <-8,73,-10>, <-10,72,-10>, <-20,72,-10> }
		triangle { <-20.5,72,-10>, <-23.5,73,-10>, <-9,73,-10> }
		triangle { <-9,73,-10>, <-20,72,-10>, <-20.5,72,-10> }
		triangle { <-20.5,72,-10>, <-24,72,-10>, <-23.5,73,-10> }
		triangle { <-23.5,80.5,-10>, <-23.5,73,-10>, <-24,72,-10> }
		triangle { <-24,72,-10>, <-24,89.5,-10>, <-23.5,80.5,-10> }
		triangle { <-23.5,80.5,-10>, <-24,89.5,-10>, <-23.5,82,-10> }
		triangle { <-23.5,82,-10>, <-24,89.5,-10>, <-23.5,89,-10> }
		triangle { <-0.5,89,-10>, <0,89.5,-10>, <0,80.5,-10> }
		triangle { <0,80.5,-10>, <-0.5,82,-10>, <-0.5,89,-10> }
		triangle { <-24,89.5,-10>, <0,89.5,-10>, <-0.5,89,-10> }
		triangle { <-0.5,89,-10>, <-15,89,-10>, <-24,89.5,-10> }
		triangle { <-15,89,-10>, <-16.5,89,-10>, <-24,89.5,-10> }
		triangle { <-16.5,89,-10>, <-23.5,89,-10>, <-24,89.5,-10> }
		triangle { <-16.5,89,-10>, <-15,89,-10>, <-15,82,-10> }
		triangle { <-15,82,-10>, <-16.5,82,-10>, <-16.5,89,-10> }
		triangle { <-9,80.5,-10>, <-8,80.5,-10>, <-8,73,-10> }
		triangle { <-8,73,-10>, <-9,73,-10>, <-9,80.5,-10> }
		triangle { <-0.5,82,-10>, <0,80.5,-10>, <-8,80.5,-10> }
		triangle { <-8,80.5,-10>, <-15,82,-10>, <-0.5,82,-10> }
		triangle { <-8,80.5,-10>, <-9,80.5,-10>, <-15,82,-10> }
		triangle { <-23.5,80.5,-10>, <-16.5,82,-10>, <-15,82,-10> }
		triangle { <-15,82,-10>, <-9,80.5,-10>, <-23.5,80.5,-10> }
		triangle { <-23.5,80.5,-10>, <-23.5,82,-10>, <-16.5,82,-10> }
// 
		material { L3Color7 }
	}
	mesh {
		triangle { <30,0,-10>, <2.75,17.6,-10>, <5.4,18.15,-10> }
		triangle { <30,0,-10>, <5.4,18.15,-10>, <7.75,18.75,-10> }
		triangle { <30,0,-10>, <7.75,18.75,-10>, <12.25,20.8,-10> }
		triangle { <30,0,-10>, <12.25,20.8,-10>, <16.05,23.55,-10> }
		triangle { <30,0,-10>, <16.05,23.55,-10>, <17.65,24.9,-10> }
		triangle { <17.65,24.9,-10>, <30,24,-9.999>, <30,0,-10> }
		triangle { <30,24,-9.999>, <17.65,24.9,-10>, <20.55,28.85,-10> }
		triangle { <30,24,-9.999>, <20.55,28.85,-10>, <22.85,33,-10> }
		triangle { <22.85,33,-10>, <50,24,-10>, <30,24,-9.999> }
		triangle { <50,24,-10>, <22.85,33,-10>, <23.65,35.35,-10> }
		triangle { <50,24,-10>, <23.65,35.35,-10>, <24.5,39.95,-10> }
		triangle { <50,24,-10>, <24.5,39.95,-10>, <24.5,44,-10> }
		triangle { <50,24,-10>, <24.5,44,-10>, <24.5,46,-10> }
		triangle { <24.5,46,-10>, <20.5,46,-10>, <20.5,72,-10> }
		triangle { <20.5,72,-10>, <24,72,-10>, <24.5,46,-10> }
		triangle { <50,24,-10>, <24.5,46,-10>, <24,72,-10> }
		triangle { <24,72,-10>, <24,89.5,-10>, <50,24,-10> }
		triangle { <50,120,-10>, <50,24,-10>, <24,89.5,-10> }
		triangle { <24,89.5,-10>, <30,120,-10>, <50,120,-10> }
		triangle { <30,120,-10>, <24,89.5,-10>, <0,89.5,-10> }
		triangle { <0,89.5,-10>, <30,144,-10>, <30,120,-10> }
		triangle { <-5.4,18.15,-10>, <-2.75,17.6,-10>, <-30,0,-10> }
		triangle { <-7.75,18.75,-10>, <-5.4,18.15,-10>, <-30,0,-10> }
		triangle { <-12.25,20.8,-10>, <-7.75,18.75,-10>, <-30,0,-10> }
		triangle { <-16.05,23.55,-10>, <-12.25,20.8,-10>, <-30,0,-10> }
		triangle { <-30,24,-9.999>, <-17.65,24.9,-10>, <-16.05,23.55,-10> }
		triangle { <-16.05,23.55,-10>, <-30,0,-10>, <-30,24,-9.999> }
		triangle { <-20.55,28.85,-10>, <-17.65,24.9,-10>, <-30,24,-9.999> }
		triangle { <-50,24,-10>, <-22.85,33,-10>, <-20.55,28.85,-10> }
		triangle { <-20.55,28.85,-10>, <-30,24,-9.999>, <-50,24,-10> }
		triangle { <-23.65,35.35,-10>, <-22.85,33,-10>, <-50,24,-10> }
		triangle { <-24.5,39.95,-10>, <-23.65,35.35,-10>, <-50,24,-10> }
		triangle { <-24.5,44,-10>, <-24.5,39.95,-10>, <-50,24,-10> }
		triangle { <-24.5,46,-10>, <-24.5,44,-10>, <-50,24,-10> }
		triangle { <-24,72,-10>, <-20.5,72,-10>, <-20.5,46,-10> }
		triangle { <-20.5,46,-10>, <-24.5,46,-10>, <-24,72,-10> }
		triangle { <-24,89.5,-10>, <-24,72,-10>, <-24.5,46,-10> }
		triangle { <-24.5,46,-10>, <-50,24,-10>, <-24,89.5,-10> }
		triangle { <-30,120,-10>, <-24,89.5,-10>, <-50,24,-10> }
		triangle { <-50,24,-10>, <-50,120,-10>, <-30,120,-10> }
		triangle { <-30,144,-10>, <0,89.5,-10>, <-24,89.5,-10> }
		triangle { <-24,89.5,-10>, <-30,120,-10>, <-30,144,-10> }
		triangle { <30,0,-10>, <0,0,-10>, <0,17.5,-10> }
		triangle { <0,17.5,-10>, <2.75,17.6,-10>, <30,0,-10> }
		triangle { <-2.75,17.6,-10>, <0,17.5,-10>, <0,0,-10> }
		triangle { <0,0,-10>, <-30,0,-10>, <-2.75,17.6,-10> }
		triangle { <0,89.5,-10>, <-30,144,-10>, <30,144,-10> }
	}
}
#end
#end // ifndef (_4444p06_dot_dat)


//// Model glass_test_case.ldr
#ifndef (glass__test__case_dot_ldr)
#declare glass__test__case_dot_ldr = union {
// Untitled
// Name: glass_test_case_01.ldr
// Author: Michael Horvath
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 16  -240 -144 -50  1 0 0  0 1 0  0 0 1 30185c04.dat
	object {
		_30185c04_dot_dat
		matrix <1-L3SW/160,0,0,0,1-L3SW/148,0,0,0,1-L3SW/60,0,L3SW/2.11429,L3SW/3>
		matrix <1,0,0,0,1,0,0,0,1,-240,-144,-50>
	}
	// 1 16  -80 -144 -50  1 0 0  0 1 0  0 0 1 30185c02.dat
	object {
		_30185c02_dot_dat
		matrix <1-L3SW/160,0,0,0,1-L3SW/148,0,0,0,1-L3SW/60,0,L3SW/2.11429,L3SW/3>
		matrix <1,0,0,0,1,0,0,0,1,-80,-144,-50>
	}
	// 1 16  80 -144 -50  1 0 0  0 1 0  0 0 1 30185c05.dat
	object {
		_30185c05_dot_dat
		matrix <1-L3SW/160,0,0,0,1-L3SW/148,0,0,0,1-L3SW/60,0,L3SW/2.11429,L3SW/3>
		matrix <1,0,0,0,1,0,0,0,1,80,-144,-50>
	}
	// 1 16  240 -144 -50  1 0 0  0 1 0  0 0 1 30185c03.dat
	object {
		_30185c03_dot_dat
		matrix <1-L3SW/160,0,0,0,1-L3SW/148,0,0,0,1-L3SW/60,0,L3SW/2.11429,L3SW/3>
		matrix <1,0,0,0,1,0,0,0,1,240,-144,-50>
	}
	// 1 16  -250 -144 10  1 0 0  0 1 0  0 0 1 4444p06.dat
	object {
		_4444p06_dot_dat
		matrix <1-L3SW/100,0,0,0,1-L3SW/148,0,0,0,1-L3SW/40,0,L3SW/2.11429,L3SW/4>
		matrix <1,0,0,0,1,0,0,0,1,-250,-144,10>
	}
	// 1 16  -150 -144 10  1 0 0  0 1 0  0 0 1 4444p06.dat
	object {
		_4444p06_dot_dat
		matrix <1-L3SW/100,0,0,0,1-L3SW/148,0,0,0,1-L3SW/40,0,L3SW/2.11429,L3SW/4>
		matrix <1,0,0,0,1,0,0,0,1,-150,-144,10>
	}
	// 1 16  -50 -144 10  1 0 0  0 1 0  0 0 1 4444p06.dat
	object {
		_4444p06_dot_dat
		matrix <1-L3SW/100,0,0,0,1-L3SW/148,0,0,0,1-L3SW/40,0,L3SW/2.11429,L3SW/4>
		matrix <1,0,0,0,1,0,0,0,1,-50,-144,10>
	}
	// 1 16  50 -144 10  1 0 0  0 1 0  0 0 1 4444p06.dat
	object {
		_4444p06_dot_dat
		matrix <1-L3SW/100,0,0,0,1-L3SW/148,0,0,0,1-L3SW/40,0,L3SW/2.11429,L3SW/4>
		matrix <1,0,0,0,1,0,0,0,1,50,-144,10>
	}
	// 1 16  150 -144 10  1 0 0  0 1 0  0 0 1 4444p06.dat
	object {
		_4444p06_dot_dat
		matrix <1-L3SW/100,0,0,0,1-L3SW/148,0,0,0,1-L3SW/40,0,L3SW/2.11429,L3SW/4>
		matrix <1,0,0,0,1,0,0,0,1,150,-144,10>
	}
	// 1 16  250 -144 10  1 0 0  0 1 0  0 0 1 4444p06.dat
	object {
		_4444p06_dot_dat
		matrix <1-L3SW/100,0,0,0,1-L3SW/148,0,0,0,1-L3SW/40,0,L3SW/2.11429,L3SW/4>
		matrix <1,0,0,0,1,0,0,0,1,250,-144,10>
	}
}
#end // ifndef (glass__test__case_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-320,-148,-60>;
#declare L3ModelBBoxMax = <320,0,40>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-74,-10>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <640,148,100>
#declare L3FloorY = L3ModelBBoxMax.y;

//// Camera
// L3P's automatic camera positioning was based on the following:
// L3Latitude=30
// L3Longitude=45
// L3Radius=420.478
// L3PercentageBack=0
// L3ViewingAngle=67.3801
// L3RollAngle=0
// L3AspectRatio=4/3
// If changed below, objects may no longer fit into the view.
camera {
	#declare L3PercentageBack = 0; // Percentage of radius
	#declare L3Orthographic = 0; // Set to 1 for orthographic view
	#declare L3ViewingAngle = 67.3801; // degrees
	#declare L3RollAngle = 0; // degrees
	#declare L3AspectRatio = 4/3;
	#declare L3Sky = -y;
	#declare L3StereoAngle = 5; // degrees
	//5 degrees corresponds to a distance between eyes (stereo cameras)
	//of 1/12 of distance to model.
	#declare L3StereoView = 0; // Normal view
	//Uncomment either two lines below to make stereo images:
	//#declare L3StereoView = -L3StereoAngle/2; // Left view
	//#declare L3StereoView =  L3StereoAngle/2; // Right view

	#if (version >= 3.5)
		#if (abs(L3AspectRatio-image_width/image_height) > 0.01)
			#error "L3AspectRatio does not match image size. Select a correct image size or use option -car<ar>."
		#end
	#end

	sky      L3Sky
	right    -L3AspectRatio*x
	#if (L3Orthographic)

		#error "* * doesn't work yet..."

		orthographic
		#declare L3LookAt = <0,-74,-10>; // BBox center (not -cla)
		#declare L3OrthoScale = (1+L3PercentageBack/100.0)*382.73;
		#declare L3Location = L3LookAt - 2000*<-0.612372,0.5,0.612372>;
		location L3Location
		scale    L3OrthoScale
	#else
		#declare L3LookAt = <107.396,8.49981,30.0354>; // Calculated (not -cla)
		#declare L3Location = <364.886,-201.739,-227.454>;
		#declare L3Location = L3Location + L3PercentageBack/100.0*(L3Location-L3LookAt);
		//#if (L3StereoView)
		//	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, <-0.353553,-0.866025,0.353553>, L3StereoView);
		//#end
		angle    L3ViewingAngle
		location L3Location
	#end
	look_at  L3LookAt
	rotate   <0,1e-5,0> // Prevent gap between adjacent quads

#declare Closer = L3LookAt+0.1*(L3Location-L3LookAt);

	translate -L3Location
	#declare vx=vaxis_rotate(x,L3LookAt-L3Location,L3RollAngle);
	#declare vy=vaxis_rotate(y,L3LookAt-L3Location,L3RollAngle);
	#declare vz=vaxis_rotate(z,L3LookAt-L3Location,L3RollAngle);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	translate L3Location

#if (L3StereoView)
	translate -L3Location
	#declare Ver=<-0.353553,-0.866025,0.353553>;
	#declare vx=vaxis_rotate(x,Ver,L3StereoView);
	#declare vy=vaxis_rotate(y,Ver,L3StereoView);
	#declare vz=vaxis_rotate(z,Ver,L3StereoView);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, Ver, L3StereoView);
	translate L3Location
#end


//////////////////////////////////////////////////
// What about L3RollAngle... before/after stereo ?
//////////////////////////////////////////////////

	//Rotate model around its center:
	//translate -L3ModelBBoxCenter
	//rotate    <0,360*clock,0>
	//translate L3ModelBBoxCenter
}

//// Lights
light_source {
	<0,-371.323,-307.323>  // Latitude,Longitude,Radius: 45,0,420.478
	color rgb <1,1,1>
}
light_source {
	<315.359,-284.239,172.073>  // Latitude,Longitude,Radius: 30,120,420.478
	color rgb <1,1,1>
}
light_source {
	<-182.073,-438.145,95.1196>  // Latitude,Longitude,Radius: 60,-120,420.478
	color rgb <1,1,1>
}

//// ModelObject glass_test_case.ldr
object { glass__test__case_dot_ldr material { L3Color7 } }



//// Statistics
//               PARTS             P         Total
// DAT files:       11            16            28
// POV Equivs:       -             6 (38%)
// Model has 11 parts (112 studs)

//// End

background {color rgbf 1}
