// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:10 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_047_trident.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_047_trident.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_047_trident.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4cylc.dat
#ifndef (_4_dash_4cylc_dot_dat)
#declare _4_dash_4cylc_dot_dat = union {
// Cylinder Closed 1.0
// Name: 4-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2008-12-29 [cwdee] Removed one disc
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _4_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylc_dot_dat)


//// Primitive 3-8ring3.dat
#ifndef (_3_dash_8ring3_dot_dat)
#declare _3_dash_8ring3_dot_dat = disc {
	<0,0,0>, <0,1,0>, 4, 3
	clipped_by { plane { -z, 0 } plane { <-1,0,-1>, 0 } }
}
#end // ifndef (_3_dash_8ring3_dot_dat)


//// Primitive 3-8ring4.dat
#ifndef (_3_dash_8ring4_dot_dat)
#declare _3_dash_8ring4_dot_dat = disc {
	<0,0,0>, <0,1,0>, 5, 4
	clipped_by { plane { -z, 0 } plane { <-1,0,-1>, 0 } }
}
#end // ifndef (_3_dash_8ring4_dot_dat)


//// Primitive 3-8rin10.dat
#ifndef (_3_dash_8rin10_dot_dat)
#declare _3_dash_8rin10_dot_dat = disc {
	<0,0,0>, <0,1,0>, 11, 10
	clipped_by { plane { -z, 0 } plane { <-1,0,-1>, 0 } }
}
#end // ifndef (_3_dash_8rin10_dot_dat)


//// Part s\92290s01.dat
#ifndef (s_slash_92290s01_dot_dat)
#declare s_slash_92290s01_dot_dat = #if (L3Quality = 0) box { <0,-106.947,-20.141>, <4.5,-51.2989,0> } #else union {
// ~Minifig Weapon Trident Quarter of Head
// Name: s\92290s01.dat
// Author: Joerg Sommerer [Brickaneer]
// !LDRAW_ORG Subpart UPDATE 2012-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2012-08-09 [PTadmin] Official Update 2012-02
	mesh {
		triangle { <1.531,-51.483,-3.696>, <2.8284,-51.2989,-2.8284>, <2.786,-52.5,-8.5> }
		triangle { <1.6273,-60.461,-4.4192>, <1.618,-60.677,-5.32>, <2.786,-52.5,-8.5> }
		triangle { <2.786,-52.5,-8.5>, <2.8284,-51.2989,-2.8284>, <1.6273,-60.461,-4.4192> }
		triangle { <2.9574,-60.2337,-3.4752>, <1.6273,-60.461,-4.4192>, <2.8284,-51.2989,-2.8284> }
		triangle { <2.8284,-51.2989,-2.8284>, <4.5,-65.4021,-2.8284>, <2.9574,-60.2337,-3.4752> }
		triangle { <4.0337,-64.9186,-2.1049>, <4.5,-65.4021,-2.8284>, <2.8284,-51.2989,-2.8284> }
		triangle { <2.8284,-51.2989,-2.8284>, <3.6956,-64.8044,-1.5308>, <4.0337,-64.9186,-2.1049> }
		triangle { <1.6273,-60.461,-4.4192>, <2.9574,-60.2337,-3.4752>, <2.78,-61.2,-7.5> }
		triangle { <2.78,-61.2,-7.5>, <1.618,-60.677,-5.32>, <1.6273,-60.461,-4.4192> }
		triangle { <2.78,-61.2,-7.5>, <2.9574,-60.2337,-3.4752>, <1.556,-67.8952,-5.0815> }
		triangle { <1.556,-67.8952,-5.0815>, <2.9574,-60.2337,-3.4752>, <3.059,-66.111,-3.8891> }
		triangle { <3.059,-66.111,-3.8891>, <2.9574,-60.2337,-3.4752>, <4.5,-65.4021,-2.8284> }
		triangle { <4,-64.5,0>, <4.5,-64.5,0>, <4.5,-64.9186,-2.1049> }
		triangle { <4.5,-64.9186,-2.1049>, <3.6956,-64.8044,-1.5308>, <4,-64.5,0> }
		triangle { <4.5,-67.2283,-1.1481>, <4.5,-64.9186,-2.1049>, <4.5,-64.5,0> }
		triangle { <4.5,-64.5,0>, <4.5,-67,0>, <4.5,-67.2283,-1.1481> }
		triangle { <3.6956,-64.8044,-1.5308>, <4.5,-64.9186,-2.1049>, <4.0337,-64.9186,-2.1049> }
		triangle { <4.0337,-64.9186,-2.1049>, <4.5,-64.9186,-2.1049>, <4.5,-65.4021,-2.8284> }
		triangle { <4.5,-65.4021,-2.8284>, <4.5,-66.111,-3.8891>, <3.059,-66.111,-3.8891> }
		triangle { <4.5,-67.8787,-2.1213>, <4.5,-65.4021,-2.8284>, <4.5,-64.9186,-2.1049> }
		triangle { <4.5,-64.9186,-2.1049>, <4.5,-67.2283,-1.1481>, <4.5,-67.8787,-2.1213> }
		triangle { <4.5,-65.4021,-2.8284>, <4.5,-67.8787,-2.1213>, <4.5,-66.111,-3.8891> }
		triangle { <4.5,-66.111,-3.8891>, <4.5,-67.8952,-5.0815>, <1.556,-67.8952,-5.0815> }
		triangle { <1.556,-67.8952,-5.0815>, <1.882,-66.111,-3.889>, <4.5,-66.111,-3.8891> }
		triangle { <1.556,-67.8952,-5.0815>, <4.5,-67.8952,-5.0815>, <4.5,-70,-5.5> }
		triangle { <4.5,-70,-5.5>, <2.13,-70,-5.5>, <1.556,-67.8952,-5.0815> }
		triangle { <1.556,-67.8952,-5.0815>, <1.21,-68.821,-5.265>, <0,-68.364,-5.175> }
		triangle { <1.556,-67.8952,-5.0815>, <2.13,-70,-5.5>, <1.21,-68.821,-5.265> }
		triangle { <4.5,-70,-5.5>, <2.644,-71.12,-5.277>, <2.13,-70,-5.5> }
		triangle { <4.5,-72.1049,-5.0815>, <2.772,-72.105,-5.081>, <2.644,-71.12,-5.277> }
		triangle { <2.644,-71.12,-5.277>, <4.5,-70,-5.5>, <4.5,-72.1049,-5.0815> }
		triangle { <4.5,-72.1049,-5.0815>, <2.813,-72.344,-4.922>, <2.772,-72.105,-5.081> }
		triangle { <4.5,-73.8891,-3.8891>, <2.628,-73.394,-4.22>, <2.813,-72.344,-4.922> }
		triangle { <2.813,-72.344,-4.922>, <4.5,-72.1049,-5.0815>, <4.5,-73.8891,-3.8891> }
		triangle { <2.628,-73.394,-4.22>, <4.5,-73.8891,-3.8891>, <2.338,-73.889,-3.889> }
		triangle { <2.338,-73.889,-3.889>, <4.5,-73.8891,-3.8891>, <2.085,-74.243,-3.36> }
		triangle { <2.085,-74.243,-3.36>, <4.5,-73.8891,-3.8891>, <4.5,-75.0815,-2.1049> }
		triangle { <4.5,-75.0815,-2.1049>, <1.186,-74.811,-2.509>, <2.085,-74.243,-3.36> }
		triangle { <1.186,-74.811,-2.509>, <4.5,-75.0815,-2.1049>, <1.263,-75.081,-2.105> }
		triangle { <1.263,-75.081,-2.105>, <0.957,-74.944,-2.31>, <1.186,-74.811,-2.509> }
		triangle { <0.68,-74.908,-2.365>, <1.186,-74.811,-2.509>, <0.957,-74.944,-2.31> }
		triangle { <4.5,-75.0815,-2.1049>, <1.768,-75.148,-1.768>, <1.263,-75.081,-2.105> }
		triangle { <4.5,-75.0815,-2.1049>, <2.31,-75.31,-0.957>, <1.768,-75.148,-1.768> }
		triangle { <4.5,-75.0815,-2.1049>, <4.5,-75.5,0>, <2.5,-75.5,0> }
		triangle { <2.5,-75.5,0>, <2.31,-75.31,-0.957>, <4.5,-75.0815,-2.1049> }
	}
	object { _3_dash_8ring3_dot_dat matrix <0,-1,0,-1,0,0,0,0,-1,4.5,-70,0> }
	object { _3_dash_8ring4_dot_dat matrix <0,-1,0,-1,0,0,0,0,-1,4.5,-70,0> }
	object { _3_dash_8rin10_dot_dat matrix <0,-0.5,0,-1,0,0,0,0,-0.5,4.5,-70,0> }
	mesh {
		triangle { <2.31,-75.31,-0.957>, <2.5,-75.5,0>, <2.5,-90.883,0> }
		triangle { <2.5,-90.883,0>, <2.31,-91.299,-0.957>, <2.31,-75.31,-0.957> }
		triangle { <1.768,-75.148,-1.768>, <2.31,-75.31,-0.957>, <2.31,-91.299,-0.957> }
		triangle { <2.31,-91.299,-0.957>, <1.937,-92.47,-1.514>, <1.768,-75.148,-1.768> }
		triangle { <1.768,-75.148,-1.768>, <1.937,-92.47,-1.514>, <1.768,-94,-1.768> }
		triangle { <1.768,-94,-1.768>, <1.263,-75.081,-2.105>, <1.768,-75.148,-1.768> }
		triangle { <0.957,-74.944,-2.31>, <1.263,-75.081,-2.105>, <1.768,-94,-1.768> }
		triangle { <0.957,-74.944,-2.31>, <1.768,-94,-1.768>, <1.768,-99.768,-1.768> }
		triangle { <0.957,-74.944,-2.31>, <1.768,-99.768,-1.768>, <0.96,-100.31,-2.31> }
		triangle { <0.96,-100.31,-2.31>, <0,-100.5,-2.5>, <0.957,-74.944,-2.31> }
		triangle { <0.957,-74.944,-2.31>, <0,-100.5,-2.5>, <0,-75.153,-2.5> }
		triangle { <0,-75.153,-2.5>, <0.68,-74.908,-2.365>, <0.957,-74.944,-2.31> }
		triangle { <0,-75.344,-17.376>, <0,-68.364,-5.175>, <0.957,-75.47,-17.196> }
		triangle { <0.957,-75.47,-17.196>, <0,-68.364,-5.175>, <1.21,-68.821,-5.265> }
		triangle { <1.21,-68.821,-5.265>, <1.768,-75.829,-16.684>, <0.957,-75.47,-17.196> }
		triangle { <2.13,-70,-5.5>, <1.768,-75.829,-16.684>, <1.21,-68.821,-5.265> }
		triangle { <2.31,-76.366,-15.916>, <1.768,-75.829,-16.684>, <2.13,-70,-5.5> }
		triangle { <2.13,-70,-5.5>, <2.644,-71.12,-5.277>, <2.31,-76.366,-15.916> }
		triangle { <2.31,-76.366,-15.916>, <2.644,-71.12,-5.277>, <2.5,-77,-15.012> }
		triangle { <2.5,-77,-15.012>, <2.644,-71.12,-5.277>, <2.772,-72.105,-5.081> }
		triangle { <2.5,-77,-15.012>, <2.772,-72.105,-5.081>, <2.813,-72.344,-4.922> }
		triangle { <2.813,-72.344,-4.922>, <2.628,-73.394,-4.22>, <2.5,-77,-15.012> }
		triangle { <2.5,-77,-15.012>, <2.628,-73.394,-4.22>, <2.31,-77.634,-14.107> }
		triangle { <2.31,-77.634,-14.107>, <2.628,-73.394,-4.22>, <2.338,-73.889,-3.889> }
		triangle { <2.338,-73.889,-3.889>, <2.085,-74.243,-3.36>, <2.31,-77.634,-14.107> }
		triangle { <2.31,-77.634,-14.107>, <2.085,-74.243,-3.36>, <1.768,-78.171,-13.339> }
		triangle { <1.768,-78.171,-13.339>, <2.085,-74.243,-3.36>, <1.186,-74.811,-2.509> }
		triangle { <1.186,-74.811,-2.509>, <0.957,-78.53,-12.827>, <1.768,-78.171,-13.339> }
		triangle { <0.68,-74.908,-2.365>, <0.957,-78.53,-12.827>, <1.186,-74.811,-2.509> }
		triangle { <0.68,-74.908,-2.365>, <0,-75.153,-2.5>, <0.957,-78.53,-12.827> }
		triangle { <0.957,-78.53,-12.827>, <0,-75.153,-2.5>, <0,-78.656,-12.647> }
		triangle { <0,-92.927,-13.895>, <0.957,-92.773,-14.073>, <0.957,-78.53,-12.827> }
		triangle { <0.957,-78.53,-12.827>, <0,-78.656,-12.647>, <0,-92.927,-13.895> }
		triangle { <1.768,-78.171,-13.339>, <0.957,-78.53,-12.827>, <0.957,-92.773,-14.073> }
		triangle { <0.957,-92.773,-14.073>, <1.768,-89.093,-14.295>, <1.768,-78.171,-13.339> }
		triangle { <1.768,-89.093,-14.295>, <0.957,-92.773,-14.073>, <1.768,-92.335,-14.579> }
		triangle { <1.768,-95,-11.5>, <1.768,-92.335,-14.579>, <0.957,-92.773,-14.073> }
		triangle { <1.937,-87.546,-14.414>, <1.768,-78.171,-13.339>, <1.768,-89.093,-14.295> }
		triangle { <2.31,-86.332,-14.868>, <2.31,-77.634,-14.107>, <1.768,-78.171,-13.339> }
		triangle { <1.768,-78.171,-13.339>, <1.937,-87.546,-14.414>, <2.31,-86.332,-14.868> }
		triangle { <2.31,-86.332,-14.868>, <2.5,-85.834,-15.784>, <2.5,-77,-15.012> }
		triangle { <2.5,-77,-15.012>, <2.31,-77.634,-14.107>, <2.31,-86.332,-14.868> }
		triangle { <2.5,-85.834,-15.784>, <2.31,-86.165,-16.774>, <2.31,-76.366,-15.916> }
		triangle { <2.31,-76.366,-15.916>, <2.5,-77,-15.012>, <2.5,-85.834,-15.784> }
		triangle { <1.937,-87.282,-17.431>, <1.768,-75.829,-16.684>, <2.31,-76.366,-15.916> }
		triangle { <2.31,-76.366,-15.916>, <2.31,-86.165,-16.774>, <1.937,-87.282,-17.431> }
		triangle { <1.768,-88.785,-17.817>, <1.768,-75.829,-16.684>, <1.937,-87.282,-17.431> }
		triangle { <0.957,-106.647,-19.924>, <1.768,-88.785,-17.817>, <1.768,-105.791,-19.305> }
		triangle { <0.957,-106.647,-19.924>, <0.957,-75.47,-17.196>, <1.768,-75.829,-16.684> }
		triangle { <1.768,-75.829,-16.684>, <1.768,-88.785,-17.817>, <0.957,-106.647,-19.924> }
		triangle { <0.957,-106.647,-19.924>, <0,-106.947,-20.141>, <0,-75.344,-17.376> }
		triangle { <0,-75.344,-17.376>, <0.957,-75.47,-17.196>, <0.957,-106.647,-19.924> }
		triangle { <2.31,-86.332,-14.868>, <2.31,-86.165,-16.774>, <2.5,-85.834,-15.784> }
		triangle { <1.937,-87.546,-14.414>, <1.937,-87.282,-17.431>, <2.31,-86.165,-16.774> }
		triangle { <2.31,-86.165,-16.774>, <2.31,-86.332,-14.868>, <1.937,-87.546,-14.414> }
		triangle { <1.768,-89.093,-14.295>, <1.768,-88.785,-17.817>, <1.937,-87.282,-17.431> }
		triangle { <1.937,-87.282,-17.431>, <1.937,-87.546,-14.414>, <1.768,-89.093,-14.295> }
		triangle { <1.768,-88.785,-17.817>, <1.768,-89.093,-14.295>, <1.768,-92.335,-14.579> }
		triangle { <1.768,-92.335,-14.579>, <1.768,-105.791,-19.305>, <1.768,-88.785,-17.817> }
		triangle { <1.768,-105.791,-19.305>, <1.768,-92.335,-14.579>, <1.768,-95,-11.5> }
	}
}
#end
#end // ifndef (s_slash_92290s01_dot_dat)


//// Part 92290.dat
#ifndef (_92290_dot_dat)
#declare _92290_dot_dat = #if (L3Quality = 0) box { <-4.5,-115,-20.141>, <4.5,0,20.141> } #else union {
// Minifig Weapon Trident
// Name: 92290.dat
// Author: Joerg Sommerer [Brickaneer]
// !LDRAW_ORG Part UPDATE 2012-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !HISTORY 2012-08-09 [PTadmin] Official Update 2012-02
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,-1,0,0,0,-4,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-64.844,0,0,0,-4,0,0,0> }
	mesh {
		triangle { <0,-51.547,4>, <-1.531,-51.483,3.696>, <-2.786,-52.5,8.5> }
		triangle { <2.786,-52.5,8.5>, <1.531,-51.483,3.696>, <0,-51.547,4> }
		triangle { <0,-51.547,4>, <-2.786,-52.5,8.5>, <2.786,-52.5,8.5> }
		triangle { <1.618,-60.677,5.32>, <2.786,-52.5,8.5>, <-2.786,-52.5,8.5> }
		triangle { <-2.786,-52.5,8.5>, <-1.618,-60.677,5.32>, <1.618,-60.677,5.32> }
		triangle { <-1.618,-60.677,5.32>, <-2.78,-61.2,7.5>, <2.78,-61.2,7.5> }
		triangle { <2.78,-61.2,7.5>, <1.618,-60.677,5.32>, <-1.618,-60.677,5.32> }
		triangle { <1.556,-67.895,5.081>, <2.78,-61.2,7.5>, <-2.78,-61.2,7.5> }
		triangle { <-2.78,-61.2,7.5>, <-1.556,-67.895,5.081>, <1.556,-67.895,5.081> }
		triangle { <-1.556,-67.895,5.081>, <0,-68.364,5.175>, <1.556,-67.895,5.081> }
		triangle { <-2.786,-52.5,-8.5>, <-1.531,-51.483,-3.696>, <0,-51.547,-4> }
		triangle { <-2.786,-52.5,-8.5>, <0,-51.547,-4>, <1.531,-51.483,-3.696> }
		triangle { <1.531,-51.483,-3.696>, <2.786,-52.5,-8.5>, <-2.786,-52.5,-8.5> }
		triangle { <-1.618,-60.677,-5.32>, <-2.786,-52.5,-8.5>, <2.786,-52.5,-8.5> }
		triangle { <2.786,-52.5,-8.5>, <1.618,-60.677,-5.32>, <-1.618,-60.677,-5.32> }
		triangle { <1.618,-60.677,-5.32>, <2.78,-61.2,-7.5>, <-2.78,-61.2,-7.5> }
		triangle { <-2.78,-61.2,-7.5>, <-1.618,-60.677,-5.32>, <1.618,-60.677,-5.32> }
		triangle { <-1.556,-67.895,-5.081>, <-2.78,-61.2,-7.5>, <2.78,-61.2,-7.5> }
		triangle { <2.78,-61.2,-7.5>, <1.556,-67.895,-5.081>, <-1.556,-67.895,-5.081> }
		triangle { <1.556,-67.895,-5.081>, <0,-68.364,-5.175>, <-1.556,-67.895,-5.081> }
// BFC INVERTNEXT
	}
	object { _4_dash_4cylc_dot_dat matrix <0,-3,0,-4,0,0,0,0,-3,-0.5,-70,0> }
// BFC INVERTNEXT
	object { _4_dash_4cylc_dot_dat matrix <0,-3,0,4,0,0,0,0,3,0.5,-70,0> }
	mesh {
		triangle { <-1.768,-95,11.5>, <-0.957,-92.773,14.073>, <0,-92.927,13.895> }
		triangle { <0,-92.927,13.895>, <1.768,-95,11.5>, <-1.768,-95,11.5> }
		triangle { <0.957,-92.773,14.073>, <1.768,-95,11.5>, <0,-92.927,13.895> }
		triangle { <1.768,-95,11.5>, <1.768,-105.791,19.305>, <0.957,-106.647,19.924> }
		triangle { <0.957,-106.647,19.924>, <-1.768,-95,11.5>, <1.768,-95,11.5> }
		triangle { <0.957,-106.647,19.924>, <0,-106.947,20.141>, <-0.957,-106.647,19.924> }
		triangle { <-0.957,-106.647,19.924>, <-1.768,-95,11.5>, <0.957,-106.647,19.924> }
		triangle { <-0.957,-106.647,19.924>, <-1.768,-105.791,19.305>, <-1.768,-95,11.5> }
		triangle { <1.768,-95,-11.5>, <0,-92.927,-13.895>, <-0.957,-92.773,-14.073> }
		triangle { <-0.957,-92.773,-14.073>, <-1.768,-95,-11.5>, <1.768,-95,-11.5> }
		triangle { <0,-92.927,-13.895>, <1.768,-95,-11.5>, <0.957,-92.773,-14.073> }
		triangle { <-1.768,-95,-11.5>, <0.957,-106.647,-19.924>, <1.768,-105.791,-19.305> }
		triangle { <1.768,-105.791,-19.305>, <1.768,-95,-11.5>, <-1.768,-95,-11.5> }
		triangle { <-1.768,-95,-11.5>, <-0.957,-106.647,-19.924>, <0,-106.947,-20.141> }
		triangle { <0,-106.947,-20.141>, <0.957,-106.647,-19.924>, <-1.768,-95,-11.5> }
		triangle { <-1.768,-95,-11.5>, <-1.768,-105.791,-19.305>, <-0.957,-106.647,-19.924> }
		triangle { <-2.5,-90.883,0>, <-2.31,-91.299,-0.957>, <-2.31,-91.299,0.957> }
		triangle { <-2.31,-91.299,0.957>, <-2.31,-91.299,-0.957>, <-1.937,-92.47,-1.514> }
		triangle { <-1.937,-92.47,-1.514>, <-1.937,-92.47,1.514>, <-2.31,-91.299,0.957> }
		triangle { <-1.937,-92.47,1.514>, <-1.937,-92.47,-1.514>, <-1.768,-94,-1.768> }
		triangle { <-1.768,-94,-1.768>, <-1.768,-94,1.768>, <-1.937,-92.47,1.514> }
		triangle { <-1.768,-99.768,-1.768>, <-1.768,-99.768,1.768>, <-1.768,-94,1.768> }
		triangle { <-1.768,-94,1.768>, <-1.768,-94,-1.768>, <-1.768,-99.768,-1.768> }
		triangle { <2.31,-91.299,0.957>, <2.31,-91.299,-0.957>, <2.5,-90.883,0> }
		triangle { <1.937,-92.47,1.514>, <1.937,-92.47,-1.514>, <2.31,-91.299,-0.957> }
		triangle { <2.31,-91.299,-0.957>, <2.31,-91.299,0.957>, <1.937,-92.47,1.514> }
		triangle { <1.768,-94,1.768>, <1.768,-94,-1.768>, <1.937,-92.47,-1.514> }
		triangle { <1.937,-92.47,-1.514>, <1.937,-92.47,1.514>, <1.768,-94,1.768> }
		triangle { <1.768,-94,-1.768>, <1.768,-94,1.768>, <1.768,-99.768,1.768> }
		triangle { <1.768,-99.768,1.768>, <1.768,-99.768,-1.768>, <1.768,-94,-1.768> }
		triangle { <-1.768,-99.768,1.768>, <-1.768,-103,5>, <-0.957,-100.31,2.31> }
		triangle { <-0.957,-100.31,2.31>, <-1.768,-103,5>, <1.768,-103,5> }
		triangle { <1.768,-103,5>, <0,-100.5,2.5>, <-0.957,-100.31,2.31> }
		triangle { <0,-100.5,2.5>, <1.768,-103,5>, <0.96,-100.31,2.31> }
		triangle { <1.768,-99.768,1.768>, <0.96,-100.31,2.31>, <1.768,-103,5> }
		triangle { <-0.957,-100.31,-2.31>, <-1.768,-103,-5>, <-1.768,-99.768,-1.768> }
		triangle { <0,-100.5,-2.5>, <1.768,-103,-5>, <-1.768,-103,-5> }
		triangle { <-1.768,-103,-5>, <-0.957,-100.31,-2.31>, <0,-100.5,-2.5> }
		triangle { <0.96,-100.31,-2.31>, <1.768,-103,-5>, <0,-100.5,-2.5> }
		triangle { <1.768,-103,-5>, <0.96,-100.31,-2.31>, <1.768,-99.768,-1.768> }
		triangle { <-1.768,-103,-5>, <-1.768,-99.768,1.768>, <-1.768,-99.768,-1.768> }
		triangle { <-1.768,-115,0>, <-1.768,-103,5>, <-1.768,-99.768,1.768> }
		triangle { <-1.768,-99.768,1.768>, <-1.768,-103,-5>, <-1.768,-115,0> }
		triangle { <1.768,-103,5>, <-1.768,-103,5>, <-1.768,-115,0> }
		triangle { <-1.768,-115,0>, <1.768,-115,0>, <1.768,-103,5> }
		triangle { <1.768,-99.768,-1.768>, <1.768,-99.768,1.768>, <1.768,-103,-5> }
		triangle { <1.768,-103,-5>, <1.768,-99.768,1.768>, <1.768,-103,5> }
		triangle { <1.768,-103,5>, <1.768,-115,0>, <1.768,-103,-5> }
		triangle { <1.768,-115,0>, <-1.768,-115,0>, <-1.768,-103,-5> }
		triangle { <-1.768,-103,-5>, <1.768,-103,-5>, <1.768,-115,0> }
	}
	object { s_slash_92290s01_dot_dat matrix <-1,0,0,0,1,0,0,0,-1,0,0,0> }
	object { s_slash_92290s01_dot_dat matrix <1,0,0,0,1,0,0,0,-1,0,0,0> }
	object { s_slash_92290s01_dot_dat matrix <-1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_92290s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end
#end // ifndef (_92290_dot_dat)


//// Model weapon_047_trident.ldr
#ifndef (weapon__047__trident_dot_ldr)
#declare weapon__047__trident_dot_ldr = object {
// Untitled
// Name: weapon_047_trident.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 7  0 58 0  0 0 -1  0 1 0  1 0 0 92290.dat
	object {
		_92290_dot_dat
		matrix <1-L3SW/9,0,0,0,1-L3SW/115,0,0,0,1-L3SW/40.282,0,L3SW/-2,0>
		matrix <0,0,1,0,1,0,-1,0,0,0,58,0>
		material { L3Color7 }
	}
}
#end // ifndef (weapon__047__trident_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-20.141,-57,-4.5>;
#declare L3ModelBBoxMax = <20.141,58,4.5>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,0.5,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <40.282,115,9>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_047_trident.ldr
object { weapon__047__trident_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        3             7            11
// POV Equivs:       -             5 (71%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
