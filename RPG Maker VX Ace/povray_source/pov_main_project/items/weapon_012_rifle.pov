// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:08 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_012_rifle.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_012_rifle.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_012_rifle.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 6 Brown (from ldconfig.ldr)
#ifndef (L3Texture6)
#declare L3Texture6 = L3TextureOpaqueRGB(88,57,39)
#end
#ifndef (L3Texture6_slope)
#declare L3Texture6_slope = L3TextureSlope(L3Texture6)
#end
#ifndef (L3Color6)
#declare L3Color6 = L3Material(L3Texture6)
#end
#ifndef (L3Color6_slope)
#declare L3Color6_slope = L3Material(L3Texture6_slope)
#end


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 2-4disc.dat
#ifndef (_2_dash_4disc_dot_dat)
#declare _2_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { box { <-2,-1,0>, <2,1,2> } } }
#end // ifndef (_2_dash_4disc_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 2-4cylc.dat
#ifndef (_2_dash_4cylc_dot_dat)
#declare _2_dash_4cylc_dot_dat = union {
// Cylinder Closed 0.5
// Name: 2-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _2_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _2_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_2_dash_4cylc_dot_dat)


//// Primitive rect1.dat
#ifndef (rect1_dot_dat)
#declare rect1_dot_dat = object {
// Rectangle with 1 Edge
// Name: rect1.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect1_dot_dat)


//// Primitive rect3.dat
#ifndef (rect3_dot_dat)
#declare rect3_dot_dat = object {
// Rectangle with 3 Edges
// Name: rect3.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] Change winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect3_dot_dat)


//// Primitive rect2p.dat
#ifndef (rect2p_dot_dat)
#declare rect2p_dot_dat = object {
// Rectangle with 2 Parallel Edges
// Name: rect2p.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect2p_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4cyls.dat
#ifndef (_1_dash_4cyls_dot_dat)
#declare _1_dash_4cyls_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,sqrt(1/2) } }
}
#end // ifndef (_1_dash_4cyls_dot_dat)


//// Primitive box4o8a.dat
#ifndef (box4o8a_dot_dat)
#declare box4o8a_dot_dat = object {
// Box with 4 Faces (2 Parallel Pairs) without Top and Bottom Edges
// Name: box4o8a.dat
// Author: Steffen [Steffen]
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2004-04-22 [PTadmin] Official Update 2004-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box4o8a_dot_dat)


//// Primitive 1-4cylo.dat
#ifndef (_1_dash_4cylo_dot_dat)
#declare _1_dash_4cylo_dot_dat = object {
// Cylinder Open 0.25
// Name: 1-4cylo.dat
// Author: Max Martin Richter [MMR1988]
// !LDRAW_ORG Primitive UPDATE 2010-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-12-31 [PTadmin] Official Update 2010-03
	object { _1_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_1_dash_4cylo_dot_dat)


//// Primitive 1-4ring5.dat
#ifndef (_1_dash_4ring5_dot_dat)
#declare _1_dash_4ring5_dot_dat = disc {
	<0,0,0>, <0,1,0>, 6, 5
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring5_dot_dat)


//// Primitive 4-4cylc.dat
#ifndef (_4_dash_4cylc_dot_dat)
#declare _4_dash_4cylc_dot_dat = union {
// Cylinder Closed 1.0
// Name: 4-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2008-12-29 [cwdee] Removed one disc
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _4_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylc_dot_dat)


//// Primitive 1-4cyls2.dat
#ifndef (_1_dash_4cyls2_dot_dat)
#declare _1_dash_4cyls2_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,0 } }
}
#end // ifndef (_1_dash_4cyls2_dot_dat)


//// Part 30141.dat
#ifndef (_30141_dot_dat)
#declare _30141_dot_dat = #if (L3Quality = 0) box { <-4,-16.758,-72>, <4,6,37.3617> } #else union {
// Minifig Gun Rifle
// Name: 30141.dat
// Author: Franklin W. Cain [fwcain]
// !LDRAW_ORG Part UPDATE 2011-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !HELP The center of the "backgrip" (i.e. the part of the buttstock
// !HELP immediately behind the receiver) is the point (0,-7.41,9.66)
// !HELP and the angle of the "backgrip" is 75 degrees.
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !KEYWORDS minifig weapon, firearm
// !KEYWORDS western, wild west, cowboy ,cavalry, indian, injun
// !KEYWORDS adventurers, machinegun
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2007-06-06 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-11-09 [Eldar] BFC'ed
// !HISTORY 2011-02-12 [Philo] Fixed several intersections
// !HISTORY 2011-12-29 [PTadmin] Official Update 2011-02
// grip
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-12,0,0,0,4,0,6,0> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,-12,0,0,0,4,0,6,0> }
// receiver
	object { _2_dash_4cylc_dot_dat matrix <0,4,0,8,0,0,0,0,4,-4,-10,0> }
	object { _2_dash_4disc_dot_dat matrix <0,-4,0,-1,0,0,0,0,4,4,-10,0> }
// 
	object { rect1_dot_dat matrix <0,-4,0,1,0,0,0,0,5,-4,-10,-5> }
	object { rect1_dot_dat matrix <0,-4,0,-1,0,0,0,0,-5,4,-10,-5> }
	object { rect1_dot_dat matrix <0,0,-5,0,1,0,4,0,0,0,-14,-5> }
	object { rect3_dot_dat matrix <4,0,0,0,-1,0,0,0,-10,0,-6,-10> }
	object { rect2p_dot_dat matrix <0,0.586,0,0,0,1,4,0,0,0,-13.414,-10> }
	object { rect2p_dot_dat matrix <0,-3.414,0,0,0,1,-4,0,0,0,-9.414,-20> }
	object { rect1_dot_dat matrix <0,-3.414,0,1,0,0,0,0,5,-4,-9.414,-15> }
	object { rect1_dot_dat matrix <0,-3.414,0,-1.00412,0,0,0,0,-5,4,-9.414,-15> }
	mesh {
		triangle { <-4,-12.828,-10>, <-4,-12.828,-20>, <4,-12.828,-20> }
		triangle { <4,-12.828,-20>, <4,-12.828,-10>, <-4,-12.828,-10> }
// 
	}
	object { _1_dash_4cyli_dot_dat matrix <2.84,-2.84,0,0,0,-10,-2.84,-2.84,0,0,-10,-10> }
// 
// 
// 
// intersection of grip and receiver
	object { _1_dash_4cyls_dot_dat matrix <-4,0,0,0,-4,0,0,0,4,0,-6,0> }
	object { _1_dash_4cyls_dot_dat matrix <4,0,0,0,-4,0,0,0,4,0,-6,0> }
// 
// trigger guard
	object { box4o8a_dot_dat matrix <1.5,0,0,0,0,6.3,0,-0.5,0,0,-0.5,-10> }
// 
	object { _1_dash_4cylo_dot_dat matrix <0,6,0,3,0,0,0,0,-6,-1.5,-6,-10> }
// BFC INVERTNEXT
	object { _1_dash_4cylo_dot_dat matrix <0,5,0,3,0,0,0,0,-5,-1.5,-6,-10> }
	object { _1_dash_4ring5_dot_dat matrix <0,1,0,1,0,0,0,0,-1,-1.5,-6,-10> }
	object { _1_dash_4ring5_dot_dat matrix <0,1,0,-1,0,0,0,0,-1,1.5,-6,-10> }
// 
// 
// barrel
	object { _4_dash_4cylc_dot_dat matrix <4,0,0,0,0,52,0,4,0,0,-10,-72> }
// front sight
	mesh {
		triangle { <-1,-13.8,-72>, <-1,-15.8,-72>, <-1,-15.8,-71> }
		triangle { <-1,-15.8,-71>, <-1,-13.8,-70>, <-1,-13.8,-72> }
		triangle { <1,-13.8,-70>, <1,-15.8,-71>, <1,-15.8,-72> }
		triangle { <1,-15.8,-72>, <1,-13.8,-72>, <1,-13.8,-70> }
	}
	object { rect3_dot_dat matrix <1,0,0,0,0,1,0,-1,0,0,-14.8,-72> }
	object { rect3_dot_dat matrix <1,0,0,0,1,0,0,0,0.5,0,-15.8,-71.5> }
	object { rect2p_dot_dat matrix <0,1,0.5,0,1,-2,-1,0,0,0,-14.8,-70.5> }
// 
// 
// buttstock - "backgrip"
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,3.10583,11.5911,0,-3.8637,1.03528,0,-8.965,3.864> }
// 
// intersection of backgrip and receiver
	object { _1_dash_4cyls2_dot_dat matrix <0,3.8637,-1.03528,0,-1.03528,-3.8637,4,0,0,0,-8.965,3.864> }
	object { _1_dash_4cyls2_dot_dat matrix <0,3.8637,-1.03528,0,-1.03528,-3.8637,-4,0,0,0,-8.965,3.864> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-3.8637,1.03528,0,-1.03528,-3.8637,-4,0,0,0,-8.965,3.864> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-3.8637,1.03528,0,-1.03528,-3.8637,4,0,0,0,-8.965,3.864> }
// 
// 
// shoulder stock
	object { _2_dash_4cyli_dot_dat matrix <4,0,0,0,5.17638,19.3185,0,3.8637,-1.03528,0,-5.859,15.455> }
	object { _2_dash_4cyli_dot_dat matrix <4,0,0,0,-0.61918,20.8714,0,-3.8637,1.03528,0,-5.859,15.455> }
	mesh {
		triangle { <-4,-6.478,36.326>, <-4,-0.683,34.773>, <-4,-5.859,15.455> }
		triangle { <4,-5.859,15.455>, <4,-0.683,34.773>, <4,-6.478,36.326> }
// 
// buttplate
	}
	object { _2_dash_4disc_dot_dat matrix <-4,0,0,0,-0.25882,-0.96593,0,3.8637,-1.03528,0,-0.683,34.773> }
	object { _2_dash_4disc_dot_dat matrix <-4,0,0,0,-0.25882,-0.96593,0,-3.8637,1.03528,0,-6.478,36.326> }
// 
	object { rect2p_dot_dat matrix <0,-2.89778,0.7765,0,-6.212,-23.1822,4,0,0,0,-3.58,35.55> }
// 
// 
// hammer
	mesh {
		triangle { <-1,-13.671,0.984>, <-1,-16.758,4.917>, <-1,-16.499,5.882> }
		triangle { <-1,-16.499,5.882>, <-1,-12.635,4.847>, <-1,-13.671,0.984> }
		triangle { <1,-12.635,4.847>, <1,-16.499,5.882>, <1,-16.758,4.917> }
		triangle { <1,-16.758,4.917>, <1,-13.671,0.984>, <1,-12.635,4.847> }
	}
	object { rect3_dot_dat matrix <-1,0,0,0,-2.07054,-7.7274,0,-1.93185,0.51763,0,-14.567,5.365> }
	object { rect3_dot_dat matrix <-1,0,0,0,0.96591,-0.99983,0,-0.12945,-0.48296,0,-16.628,5.4> }
	object { rect2p_dot_dat matrix <0,1.54365,-1.96653,0,0.78661,1,1,0,0,0,-15.214,2.95> }
	mesh {
		triangle { <-1,-12.635,4.847>, <-1,-13.671,0.984>, <1,-13.671,0.984> }
		triangle { <1,-13.671,0.984>, <1,-12.635,4.847>, <-1,-12.635,4.847> }
	}
}
#end
#end // ifndef (_30141_dot_dat)


//// Model weapon_012_rifle.ldr
#ifndef (weapon__012__rifle_dot_ldr)
#declare weapon__012__rifle_dot_ldr = object {
// Untitled
// Name: weapon_012_rifle.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 6  -17 7 0  0 0 -1  0 1 0  1 0 0 30141.dat
	object {
		_30141_dot_dat
		matrix <1-L3SW/8,0,0,0,1-L3SW/22.758,0,0,0,1-L3SW/109.362,0,L3SW/-4.2309,L3SW/-6.31449>
		matrix <0,0,1,0,1,0,-1,0,0,-17,7,0>
		material { L3Color6 }
	}
}
#end // ifndef (weapon__012__rifle_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-54.3617,-9.758,-4>;
#declare L3ModelBBoxMax = <55,13,4>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0.31916,1.621,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <109.362,22.758,8>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_012_rifle.ldr
object { weapon__012__rifle_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            20            23
// POV Equivs:       -             8 (40%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
