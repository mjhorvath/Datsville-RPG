// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sun Aug 24 11:37:06 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_020_fishingpole.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_020_fishingpole.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_020_fishingpole.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 28 Dark_Tan (from ldconfig.ldr)
#ifndef (L3Texture28)
#declare L3Texture28 = L3TextureOpaqueRGB(149,138,115)
#end
#ifndef (L3Texture28_slope)
#declare L3Texture28_slope = L3TextureSlope(L3Texture28)
#end
#ifndef (L3Color28)
#declare L3Color28 = L3Material(L3Texture28)
#end
#ifndef (L3Color28_slope)
#declare L3Color28_slope = L3Material(L3Texture28_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 1-4con3.dat
#ifndef (_1_dash_4con3_dot_dat)
#declare _1_dash_4con3_dot_dat = cone {
	<0,0,0>, 4, <0,1,0>, 3 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con3_dot_dat)


//// Primitive 4-4con1.dat
#ifndef (_4_dash_4con1_dot_dat)
#declare _4_dash_4con1_dot_dat = cone { <0,0,0>, 2, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4con1_dot_dat)


//// Primitive stud2a.dat
#ifndef (stud2a_dot_dat)
#declare stud2a_dot_dat = 
#if (L3Quality >= 4)
union {
#end
	difference {
		cylinder { <0,0,0>, <0,-4,0>, 6 }
		cylinder { <0,1,0>, <0,-5,0>, 4 }
	}
#if (L3Quality >= 4)
	object { L3Logo scale 0.75 }
}
#end
#end // ifndef (stud2a_dot_dat)


//// Primitive ring2.dat
#ifndef (ring2_dot_dat)
#declare ring2_dot_dat = disc { <0,0,0>, <0,1,0>, 3, 2 }
#end // ifndef (ring2_dot_dat)


//// Part 2614.dat
#ifndef (_2614_dot_dat)
#declare _2614_dot_dat = #if (L3Quality = 0) box { <-8,-219.949,-24>, <8,24,4.242> } #else union {
// Minifig Tool Fishing Rod
// Name: 2614.dat
// Author: Imre Papp [ampi]
// !LDRAW_ORG Part UPDATE 2000-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !CATEGORY Minifig Accessory
// !KEYWORDS minifig, tool, fishing, adventure
// !HISTORY 2000-05-07 [PTadmin] Official Update 2000-01
// !HISTORY 2007-05-17 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// Rod
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,24,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,72,0,0,0,4,0,-48,0> }
	object { _1_dash_4con3_dot_dat matrix <1,0,0,0,-2,0,0,0,1,0,-48,0> }
	object { _1_dash_4con3_dot_dat matrix <-1,0,0,0,-2,0,0,0,1,0,-48,0> }
	object { _1_dash_4con3_dot_dat matrix <-1,0,0,0,-2,0,0,0,-1,0,-48,0> }
	object { _1_dash_4con3_dot_dat matrix <1,0,0,0,-2,0,0,0,-1,0,-48,0> }
	object { _4_dash_4con1_dot_dat matrix <1.5,0,0,0,-162,0,0,0,1.5,0,-50,0> }
// Reel holder
	mesh {
		triangle { <-3,-29,-2.5717>, <-2.8284,-29,-2.8284>, <-3,-29,-4> }
		triangle { <-2.8284,-29,-2.8284>, <-1.5307,-29,-3.6955>, <-3,-29,-4> }
		triangle { <-1.5307,-29,-3.6955>, <0,-29,-4>, <-3,-29,-4> }
		triangle { <0,-29,-4>, <1.5307,-29,-3.6955>, <3,-29,-4> }
		triangle { <1.5307,-29,-3.6955>, <2.8284,-29,-2.8284>, <3,-29,-4> }
		triangle { <2.8284,-29,-2.8284>, <3,-29,-2.5717>, <3,-29,-4> }
		triangle { <-3,-29,-4>, <3,-29,-4>, <3,-29,-9.9042> }
		triangle { <3,-29,-9.9042>, <-3,-29,-9.9042>, <-3,-29,-4> }
		triangle { <-3,-19,-2.5717>, <-2.8284,-19,-2.8284>, <-3,-19,-4> }
		triangle { <-2.8284,-19,-2.8284>, <-1.5307,-19,-3.6955>, <-3,-19,-4> }
		triangle { <-1.5307,-19,-3.6955>, <0,-19,-4>, <-3,-19,-4> }
		triangle { <0,-19,-4>, <1.5307,-19,-3.6955>, <3,-19,-4> }
		triangle { <1.5307,-19,-3.6955>, <2.8284,-19,-2.8284>, <3,-19,-4> }
		triangle { <2.8284,-19,-2.8284>, <3,-19,-2.5717>, <3,-19,-4> }
		triangle { <-3,-19,-4>, <3,-19,-4>, <3,-19,-9.9042> }
		triangle { <3,-19,-9.9042>, <-3,-19,-9.9042>, <-3,-19,-4> }
		triangle { <3,-29,-9.9042>, <3,-27.0615,-8.609>, <3,-29,-8> }
		triangle { <3,-27.0615,-8.609>, <3,-24,-8>, <3,-29,-8> }
		triangle { <3,-24,-8>, <3,-20.9385,-8.609>, <3,-19,-8> }
		triangle { <3,-20.9385,-8.609>, <3,-19,-9.9042>, <3,-19,-8> }
		triangle { <3,-29,-8>, <3,-19,-8>, <3,-19,-2.5717> }
		triangle { <3,-19,-2.5717>, <3,-29,-2.5717>, <3,-29,-8> }
		triangle { <-3,-29,-9.9042>, <-3,-27.0615,-8.609>, <-3,-29,-8> }
		triangle { <-3,-27.0615,-8.609>, <-3,-24,-8>, <-3,-29,-8> }
		triangle { <-3,-24,-8>, <-3,-20.9385,-8.609>, <-3,-19,-8> }
		triangle { <-3,-20.9385,-8.609>, <-3,-19,-9.9042>, <-3,-19,-8> }
		triangle { <-3,-29,-8>, <-3,-19,-8>, <-3,-19,-2.5717> }
		triangle { <-3,-19,-2.5717>, <-3,-29,-2.5717>, <-3,-29,-8> }
// Reel
// Left
	}
	#if (L3Studs)
		object { stud2a_dot_dat matrix <0,1,0,-1,0,0,0,0,1,4,-24,-16> }
	#end
	object { _4_dash_4cyli_dot_dat matrix <0,4,0,2,0,0,0,0,4,2,-24,-16> }
	object { _4_dash_4cyli_dot_dat matrix <0,8,0,2,0,0,0,0,8,2,-24,-16> }
	mesh {
		triangle { <4,-24,-8>, <4,-20.9385,-8.609>, <4,-21.7039,-10.4567> }
		triangle { <4,-21.7039,-10.4567>, <4,-24,-10>, <4,-24,-8> }
		triangle { <4,-20.9385,-8.609>, <4,-18.3431,-10.3431>, <4,-19.7574,-11.7574> }
		triangle { <4,-19.7574,-11.7574>, <4,-21.7039,-10.4567>, <4,-20.9385,-8.609> }
		triangle { <4,-18.3431,-10.3431>, <4,-16.609,-12.9385>, <4,-18.4567,-13.7039> }
		triangle { <4,-18.4567,-13.7039>, <4,-19.7574,-11.7574>, <4,-18.3431,-10.3431> }
		triangle { <4,-16.609,-12.9385>, <4,-16,-16>, <4,-18,-16> }
		triangle { <4,-18,-16>, <4,-18.4567,-13.7039>, <4,-16.609,-12.9385> }
		triangle { <4,-16,-16>, <4,-16.609,-19.0615>, <4,-18.4567,-18.2961> }
		triangle { <4,-18.4567,-18.2961>, <4,-18,-16>, <4,-16,-16> }
		triangle { <4,-16.609,-19.0615>, <4,-18.3431,-21.6569>, <4,-19.7574,-20.2426> }
		triangle { <4,-19.7574,-20.2426>, <4,-18.4567,-18.2961>, <4,-16.609,-19.0615> }
		triangle { <4,-18.3431,-21.6569>, <4,-20.9385,-23.391>, <4,-21.7039,-21.5433> }
		triangle { <4,-21.7039,-21.5433>, <4,-19.7574,-20.2426>, <4,-18.3431,-21.6569> }
		triangle { <4,-20.9385,-23.391>, <4,-24,-24>, <4,-24,-22> }
		triangle { <4,-24,-22>, <4,-21.7039,-21.5433>, <4,-20.9385,-23.391> }
		triangle { <4,-24,-24>, <4,-27.0615,-23.391>, <4,-26.2961,-21.5433> }
		triangle { <4,-26.2961,-21.5433>, <4,-24,-22>, <4,-24,-24> }
		triangle { <4,-27.0615,-23.391>, <4,-29.6569,-21.6569>, <4,-28.2426,-20.2426> }
		triangle { <4,-28.2426,-20.2426>, <4,-26.2961,-21.5433>, <4,-27.0615,-23.391> }
		triangle { <4,-29.6569,-21.6569>, <4,-31.391,-19.0615>, <4,-29.5433,-18.2961> }
		triangle { <4,-29.5433,-18.2961>, <4,-28.2426,-20.2426>, <4,-29.6569,-21.6569> }
		triangle { <4,-31.391,-19.0615>, <4,-32,-16>, <4,-30,-16> }
		triangle { <4,-30,-16>, <4,-29.5433,-18.2961>, <4,-31.391,-19.0615> }
		triangle { <4,-32,-16>, <4,-31.391,-12.9385>, <4,-29.5433,-13.7039> }
		triangle { <4,-29.5433,-13.7039>, <4,-30,-16>, <4,-32,-16> }
		triangle { <4,-31.391,-12.9385>, <4,-29.6569,-10.3431>, <4,-28.2426,-11.7574> }
		triangle { <4,-28.2426,-11.7574>, <4,-29.5433,-13.7039>, <4,-31.391,-12.9385> }
		triangle { <4,-29.6569,-10.3431>, <4,-27.0615,-8.609>, <4,-26.2961,-10.4567> }
		triangle { <4,-26.2961,-10.4567>, <4,-28.2426,-11.7574>, <4,-29.6569,-10.3431> }
		triangle { <4,-27.0615,-8.609>, <4,-24,-8>, <4,-24,-10> }
		triangle { <4,-24,-10>, <4,-26.2961,-10.4567>, <4,-27.0615,-8.609> }
// Right
		triangle { <-8,-27.8011,-15>, <-8,-27.6955,-14.4693>, <2,-27.6955,-14.4693> }
		triangle { <2,-27.6955,-14.4693>, <2,-27.8011,-15>, <-8,-27.8011,-15> }
		triangle { <-8,-27.6955,-14.4693>, <-8,-26.8284,-13.1716>, <2,-26.8284,-13.1716> }
		triangle { <2,-26.8284,-13.1716>, <2,-27.6955,-14.4693>, <-8,-27.6955,-14.4693> }
		triangle { <-8,-26.8284,-13.1716>, <-8,-25.5307,-12.3045>, <2,-25.5307,-12.3045> }
		triangle { <2,-25.5307,-12.3045>, <2,-26.8284,-13.1716>, <-8,-26.8284,-13.1716> }
		triangle { <-8,-25.5307,-12.3045>, <-8,-24,-12>, <2,-24,-12> }
		triangle { <2,-24,-12>, <2,-25.5307,-12.3045>, <-8,-25.5307,-12.3045> }
		triangle { <-8,-24,-12>, <-8,-22.4693,-12.3045>, <2,-22.4693,-12.3045> }
		triangle { <2,-22.4693,-12.3045>, <2,-24,-12>, <-8,-24,-12> }
		triangle { <-8,-22.4693,-12.3045>, <-8,-21.1716,-13.1716>, <2,-21.1716,-13.1716> }
		triangle { <2,-21.1716,-13.1716>, <2,-22.4693,-12.3045>, <-8,-22.4693,-12.3045> }
		triangle { <-8,-21.1716,-13.1716>, <-8,-20.3045,-14.4693>, <2,-20.3045,-14.4693> }
		triangle { <2,-20.3045,-14.4693>, <2,-21.1716,-13.1716>, <-8,-21.1716,-13.1716> }
		triangle { <-8,-20.3045,-14.4693>, <-8,-20,-16>, <2,-20,-16> }
		triangle { <2,-20,-16>, <2,-20.3045,-14.4693>, <-8,-20.3045,-14.4693> }
		triangle { <-8,-20,-16>, <-8,-20.3045,-17.5307>, <2,-20.3045,-17.5307> }
		triangle { <2,-20.3045,-17.5307>, <2,-20,-16>, <-8,-20,-16> }
		triangle { <-8,-20.3045,-17.5307>, <-8,-21.1716,-18.8284>, <2,-21.1716,-18.8284> }
		triangle { <2,-21.1716,-18.8284>, <2,-20.3045,-17.5307>, <-8,-20.3045,-17.5307> }
		triangle { <-8,-21.1716,-18.8284>, <-8,-22.4693,-19.6955>, <2,-22.4693,-19.6955> }
		triangle { <2,-22.4693,-19.6955>, <2,-21.1716,-18.8284>, <-8,-21.1716,-18.8284> }
		triangle { <-8,-22.4693,-19.6955>, <-8,-24,-20>, <2,-24,-20> }
		triangle { <2,-24,-20>, <2,-22.4693,-19.6955>, <-8,-22.4693,-19.6955> }
		triangle { <-8,-24,-20>, <-8,-25.5307,-19.6955>, <2,-25.5307,-19.6955> }
		triangle { <2,-25.5307,-19.6955>, <2,-24,-20>, <-8,-24,-20> }
		triangle { <-8,-25.5307,-19.6955>, <-8,-26.8284,-18.8284>, <2,-26.8284,-18.8284> }
		triangle { <2,-26.8284,-18.8284>, <2,-25.5307,-19.6955>, <-8,-25.5307,-19.6955> }
		triangle { <-8,-26.8284,-18.8284>, <-8,-27.6955,-17.5307>, <2,-27.6955,-17.5307> }
		triangle { <2,-27.6955,-17.5307>, <2,-26.8284,-18.8284>, <-8,-26.8284,-18.8284> }
		triangle { <-8,-27.6955,-17.5307>, <-8,-27.8011,-17>, <2,-27.8011,-17> }
		triangle { <2,-27.8011,-17>, <2,-27.6955,-17.5307>, <-8,-27.6955,-17.5307> }
		triangle { <-8,-29.8011,-15>, <-8,-29.5433,-13.7039>, <-4,-29.5433,-13.7039> }
		triangle { <-4,-29.5433,-13.7039>, <-4,-29.8011,-15>, <-8,-29.8011,-15> }
		triangle { <-8,-29.5433,-13.7039>, <-8,-28.2426,-11.7574>, <-4,-28.2426,-11.7574> }
		triangle { <-4,-28.2426,-11.7574>, <-4,-29.5433,-13.7039>, <-8,-29.5433,-13.7039> }
		triangle { <-8,-28.2426,-11.7574>, <-8,-26.2961,-10.4567>, <-4,-26.2961,-10.4567> }
		triangle { <-4,-26.2961,-10.4567>, <-4,-28.2426,-11.7574>, <-8,-28.2426,-11.7574> }
		triangle { <-8,-26.2961,-10.4567>, <-8,-24,-10>, <-4,-24,-10> }
		triangle { <-4,-24,-10>, <-4,-26.2961,-10.4567>, <-8,-26.2961,-10.4567> }
		triangle { <-8,-24,-10>, <-8,-21.7039,-10.4567>, <-4,-21.7039,-10.4567> }
		triangle { <-4,-21.7039,-10.4567>, <-4,-24,-10>, <-8,-24,-10> }
		triangle { <-8,-21.7039,-10.4567>, <-8,-19.7574,-11.7574>, <-4,-19.7574,-11.7574> }
		triangle { <-4,-19.7574,-11.7574>, <-4,-21.7039,-10.4567>, <-8,-21.7039,-10.4567> }
		triangle { <-8,-19.7574,-11.7574>, <-8,-18.4567,-13.7039>, <-4,-18.4567,-13.7039> }
		triangle { <-4,-18.4567,-13.7039>, <-4,-19.7574,-11.7574>, <-8,-19.7574,-11.7574> }
		triangle { <-8,-18.4567,-13.7039>, <-8,-18,-16>, <-4,-18,-16> }
		triangle { <-4,-18,-16>, <-4,-18.4567,-13.7039>, <-8,-18.4567,-13.7039> }
		triangle { <-8,-18,-16>, <-8,-18.4567,-18.2961>, <-4,-18.4567,-18.2961> }
		triangle { <-4,-18.4567,-18.2961>, <-4,-18,-16>, <-8,-18,-16> }
		triangle { <-8,-18.4567,-18.2961>, <-8,-19.7574,-20.2426>, <-4,-19.7574,-20.2426> }
		triangle { <-4,-19.7574,-20.2426>, <-4,-18.4567,-18.2961>, <-8,-18.4567,-18.2961> }
		triangle { <-8,-19.7574,-20.2426>, <-8,-21.7039,-21.5433>, <-4,-21.7039,-21.5433> }
		triangle { <-4,-21.7039,-21.5433>, <-4,-19.7574,-20.2426>, <-8,-19.7574,-20.2426> }
		triangle { <-8,-21.7039,-21.5433>, <-8,-24,-22>, <-4,-24,-22> }
		triangle { <-4,-24,-22>, <-4,-21.7039,-21.5433>, <-8,-21.7039,-21.5433> }
		triangle { <-8,-24,-22>, <-8,-26.2961,-21.5433>, <-4,-26.2961,-21.5433> }
		triangle { <-4,-26.2961,-21.5433>, <-4,-24,-22>, <-8,-24,-22> }
		triangle { <-8,-26.2961,-21.5433>, <-8,-28.2426,-20.2426>, <-4,-28.2426,-20.2426> }
		triangle { <-4,-28.2426,-20.2426>, <-4,-26.2961,-21.5433>, <-8,-26.2961,-21.5433> }
		triangle { <-8,-28.2426,-20.2426>, <-8,-29.5433,-18.2961>, <-4,-29.5433,-18.2961> }
		triangle { <-4,-29.5433,-18.2961>, <-4,-28.2426,-20.2426>, <-8,-28.2426,-20.2426> }
		triangle { <-8,-29.5433,-18.2961>, <-8,-29.8011,-17>, <-4,-29.8011,-17> }
		triangle { <-4,-29.8011,-17>, <-4,-29.5433,-18.2961>, <-8,-29.5433,-18.2961> }
		triangle { <-4,-31.8011,-15>, <-4,-31.391,-12.9385>, <2,-31.391,-12.9385> }
		triangle { <2,-31.391,-12.9385>, <2,-31.8011,-15>, <-4,-31.8011,-15> }
		triangle { <-4,-31.391,-12.9385>, <-4,-29.6569,-10.3431>, <2,-29.6569,-10.3431> }
		triangle { <2,-29.6569,-10.3431>, <2,-31.391,-12.9385>, <-4,-31.391,-12.9385> }
		triangle { <-4,-29.6569,-10.3431>, <-4,-27.0615,-8.609>, <2,-27.0615,-8.609> }
		triangle { <2,-27.0615,-8.609>, <2,-29.6569,-10.3431>, <-4,-29.6569,-10.3431> }
		triangle { <-4,-27.0615,-8.609>, <-4,-24,-8>, <2,-24,-8> }
		triangle { <2,-24,-8>, <2,-27.0615,-8.609>, <-4,-27.0615,-8.609> }
		triangle { <-4,-24,-8>, <-4,-20.9385,-8.609>, <2,-20.9385,-8.609> }
		triangle { <2,-20.9385,-8.609>, <2,-24,-8>, <-4,-24,-8> }
		triangle { <-4,-20.9385,-8.609>, <-4,-18.3431,-10.3431>, <2,-18.3431,-10.3431> }
		triangle { <2,-18.3431,-10.3431>, <2,-20.9385,-8.609>, <-4,-20.9385,-8.609> }
		triangle { <-4,-18.3431,-10.3431>, <-4,-16.609,-12.9385>, <2,-16.609,-12.9385> }
		triangle { <2,-16.609,-12.9385>, <2,-18.3431,-10.3431>, <-4,-18.3431,-10.3431> }
		triangle { <-4,-16.609,-12.9385>, <-4,-16,-16>, <2,-16,-16> }
		triangle { <2,-16,-16>, <2,-16.609,-12.9385>, <-4,-16.609,-12.9385> }
		triangle { <-4,-16,-16>, <-4,-16.609,-19.0615>, <2,-16.609,-19.0615> }
		triangle { <2,-16.609,-19.0615>, <2,-16,-16>, <-4,-16,-16> }
		triangle { <-4,-16.609,-19.0615>, <-4,-18.3431,-21.6569>, <2,-18.3431,-21.6569> }
		triangle { <2,-18.3431,-21.6569>, <2,-16.609,-19.0615>, <-4,-16.609,-19.0615> }
		triangle { <-4,-18.3431,-21.6569>, <-4,-20.9385,-23.391>, <2,-20.9385,-23.391> }
		triangle { <2,-20.9385,-23.391>, <2,-18.3431,-21.6569>, <-4,-18.3431,-21.6569> }
		triangle { <-4,-20.9385,-23.391>, <-4,-24,-24>, <2,-24,-24> }
		triangle { <2,-24,-24>, <2,-20.9385,-23.391>, <-4,-20.9385,-23.391> }
		triangle { <-4,-24,-24>, <-4,-27.0615,-23.391>, <2,-27.0615,-23.391> }
		triangle { <2,-27.0615,-23.391>, <2,-24,-24>, <-4,-24,-24> }
		triangle { <-4,-27.0615,-23.391>, <-4,-29.6569,-21.6569>, <2,-29.6569,-21.6569> }
		triangle { <2,-29.6569,-21.6569>, <2,-27.0615,-23.391>, <-4,-27.0615,-23.391> }
		triangle { <-4,-29.6569,-21.6569>, <-4,-31.391,-19.0615>, <2,-31.391,-19.0615> }
		triangle { <2,-31.391,-19.0615>, <2,-29.6569,-21.6569>, <-4,-29.6569,-21.6569> }
		triangle { <-4,-31.391,-19.0615>, <-4,-31.8011,-17>, <2,-31.8011,-17> }
		triangle { <2,-31.8011,-17>, <2,-31.391,-19.0615>, <-4,-31.391,-19.0615> }
		triangle { <2,-27.8011,-17>, <2,-31.8011,-17>, <-4,-31.8011,-17> }
		triangle { <2,-27.8011,-15>, <2,-31.8011,-15>, <-4,-31.8011,-15> }
		triangle { <2,-27.8011,-17>, <-4,-31.8011,-17>, <-4,-29.8011,-17> }
		triangle { <2,-27.8011,-15>, <-4,-31.8011,-15>, <-4,-29.8011,-15> }
		triangle { <2,-27.8011,-17>, <-4,-29.8011,-17>, <-8,-29.8011,-17> }
		triangle { <2,-27.8011,-15>, <-4,-29.8011,-15>, <-8,-29.8011,-15> }
		triangle { <2,-27.8011,-17>, <-8,-29.8011,-17>, <-8,-27.8011,-17> }
		triangle { <2,-27.8011,-15>, <-8,-29.8011,-15>, <-8,-27.8011,-15> }
		triangle { <-4,-31.8011,-15>, <-4,-31.391,-12.9385>, <-4,-29.5433,-13.7039> }
		triangle { <-4,-29.5433,-13.7039>, <-4,-29.8011,-15>, <-4,-31.8011,-15> }
		triangle { <-4,-31.391,-12.9385>, <-4,-29.6569,-10.3431>, <-4,-28.2426,-11.7574> }
		triangle { <-4,-28.2426,-11.7574>, <-4,-29.5433,-13.7039>, <-4,-31.391,-12.9385> }
		triangle { <-4,-29.6569,-10.3431>, <-4,-27.0615,-8.609>, <-4,-26.2961,-10.4567> }
		triangle { <-4,-26.2961,-10.4567>, <-4,-28.2426,-11.7574>, <-4,-29.6569,-10.3431> }
		triangle { <-4,-27.0615,-8.609>, <-4,-24,-8>, <-4,-24,-10> }
		triangle { <-4,-24,-10>, <-4,-26.2961,-10.4567>, <-4,-27.0615,-8.609> }
		triangle { <-4,-24,-8>, <-4,-20.9385,-8.609>, <-4,-21.7039,-10.4567> }
		triangle { <-4,-21.7039,-10.4567>, <-4,-24,-10>, <-4,-24,-8> }
		triangle { <-4,-20.9385,-8.609>, <-4,-18.3431,-10.3431>, <-4,-19.7574,-11.7574> }
		triangle { <-4,-19.7574,-11.7574>, <-4,-21.7039,-10.4567>, <-4,-20.9385,-8.609> }
		triangle { <-4,-18.3431,-10.3431>, <-4,-16.609,-12.9385>, <-4,-18.4567,-13.7039> }
		triangle { <-4,-18.4567,-13.7039>, <-4,-19.7574,-11.7574>, <-4,-18.3431,-10.3431> }
		triangle { <-4,-16.609,-12.9385>, <-4,-16,-16>, <-4,-18,-16> }
		triangle { <-4,-18,-16>, <-4,-18.4567,-13.7039>, <-4,-16.609,-12.9385> }
		triangle { <-4,-16,-16>, <-4,-16.609,-19.0615>, <-4,-18.4567,-18.2961> }
		triangle { <-4,-18.4567,-18.2961>, <-4,-18,-16>, <-4,-16,-16> }
		triangle { <-4,-16.609,-19.0615>, <-4,-18.3431,-21.6569>, <-4,-19.7574,-20.2426> }
		triangle { <-4,-19.7574,-20.2426>, <-4,-18.4567,-18.2961>, <-4,-16.609,-19.0615> }
		triangle { <-4,-18.3431,-21.6569>, <-4,-20.9385,-23.391>, <-4,-21.7039,-21.5433> }
		triangle { <-4,-21.7039,-21.5433>, <-4,-19.7574,-20.2426>, <-4,-18.3431,-21.6569> }
		triangle { <-4,-20.9385,-23.391>, <-4,-24,-24>, <-4,-24,-22> }
		triangle { <-4,-24,-22>, <-4,-21.7039,-21.5433>, <-4,-20.9385,-23.391> }
		triangle { <-4,-24,-24>, <-4,-27.0615,-23.391>, <-4,-26.2961,-21.5433> }
		triangle { <-4,-26.2961,-21.5433>, <-4,-24,-22>, <-4,-24,-24> }
		triangle { <-4,-27.0615,-23.391>, <-4,-29.6569,-21.6569>, <-4,-28.2426,-20.2426> }
		triangle { <-4,-28.2426,-20.2426>, <-4,-26.2961,-21.5433>, <-4,-27.0615,-23.391> }
		triangle { <-4,-29.6569,-21.6569>, <-4,-31.391,-19.0615>, <-4,-29.5433,-18.2961> }
		triangle { <-4,-29.5433,-18.2961>, <-4,-28.2426,-20.2426>, <-4,-29.6569,-21.6569> }
		triangle { <-4,-31.391,-19.0615>, <-4,-31.8011,-17>, <-4,-29.8011,-17> }
		triangle { <-4,-29.8011,-17>, <-4,-29.5433,-18.2961>, <-4,-31.391,-19.0615> }
		triangle { <-8,-29.8011,-15>, <-8,-29.5433,-13.7039>, <-8,-27.6955,-14.4693> }
		triangle { <-8,-27.6955,-14.4693>, <-8,-27.8011,-15>, <-8,-29.8011,-15> }
		triangle { <-8,-29.5433,-13.7039>, <-8,-28.2426,-11.7574>, <-8,-26.8284,-13.1716> }
		triangle { <-8,-26.8284,-13.1716>, <-8,-27.6955,-14.4693>, <-8,-29.5433,-13.7039> }
		triangle { <-8,-28.2426,-11.7574>, <-8,-26.2961,-10.4567>, <-8,-25.5307,-12.3045> }
		triangle { <-8,-25.5307,-12.3045>, <-8,-26.8284,-13.1716>, <-8,-28.2426,-11.7574> }
		triangle { <-8,-26.2961,-10.4567>, <-8,-24,-10>, <-8,-24,-12> }
		triangle { <-8,-24,-12>, <-8,-25.5307,-12.3045>, <-8,-26.2961,-10.4567> }
		triangle { <-8,-24,-10>, <-8,-21.7039,-10.4567>, <-8,-22.4693,-12.3045> }
		triangle { <-8,-22.4693,-12.3045>, <-8,-24,-12>, <-8,-24,-10> }
		triangle { <-8,-21.7039,-10.4567>, <-8,-19.7574,-11.7574>, <-8,-21.1716,-13.1716> }
		triangle { <-8,-21.1716,-13.1716>, <-8,-22.4693,-12.3045>, <-8,-21.7039,-10.4567> }
		triangle { <-8,-19.7574,-11.7574>, <-8,-18.4567,-13.7039>, <-8,-20.3045,-14.4693> }
		triangle { <-8,-20.3045,-14.4693>, <-8,-21.1716,-13.1716>, <-8,-19.7574,-11.7574> }
		triangle { <-8,-18.4567,-13.7039>, <-8,-18,-16>, <-8,-20,-16> }
		triangle { <-8,-20,-16>, <-8,-20.3045,-14.4693>, <-8,-18.4567,-13.7039> }
		triangle { <-8,-18,-16>, <-8,-18.4567,-18.2961>, <-8,-20.3045,-17.5307> }
		triangle { <-8,-20.3045,-17.5307>, <-8,-20,-16>, <-8,-18,-16> }
		triangle { <-8,-18.4567,-18.2961>, <-8,-19.7574,-20.2426>, <-8,-21.1716,-18.8284> }
		triangle { <-8,-21.1716,-18.8284>, <-8,-20.3045,-17.5307>, <-8,-18.4567,-18.2961> }
		triangle { <-8,-19.7574,-20.2426>, <-8,-21.7039,-21.5433>, <-8,-22.4693,-19.6955> }
		triangle { <-8,-22.4693,-19.6955>, <-8,-21.1716,-18.8284>, <-8,-19.7574,-20.2426> }
		triangle { <-8,-21.7039,-21.5433>, <-8,-24,-22>, <-8,-24,-20> }
		triangle { <-8,-24,-20>, <-8,-22.4693,-19.6955>, <-8,-21.7039,-21.5433> }
		triangle { <-8,-24,-22>, <-8,-26.2961,-21.5433>, <-8,-25.5307,-19.6955> }
		triangle { <-8,-25.5307,-19.6955>, <-8,-24,-20>, <-8,-24,-22> }
		triangle { <-8,-26.2961,-21.5433>, <-8,-28.2426,-20.2426>, <-8,-26.8284,-18.8284> }
		triangle { <-8,-26.8284,-18.8284>, <-8,-25.5307,-19.6955>, <-8,-26.2961,-21.5433> }
		triangle { <-8,-28.2426,-20.2426>, <-8,-29.5433,-18.2961>, <-8,-27.6955,-17.5307> }
		triangle { <-8,-27.6955,-17.5307>, <-8,-26.8284,-18.8284>, <-8,-28.2426,-20.2426> }
		triangle { <-8,-29.5433,-18.2961>, <-8,-29.8011,-17>, <-8,-27.8011,-17> }
		triangle { <-8,-27.8011,-17>, <-8,-27.6955,-17.5307>, <-8,-29.5433,-18.2961> }
// Eye
	}
	object { _4_dash_4cyli_dot_dat matrix <2,0,0,0,-4.243,4.243,0,1.414,1.414,0,-212.879,-2.828> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-2.828,2.828,0,2.828,2.828,0,-213.586,-2.121> }
	object { _1_dash_4con3_dot_dat matrix <1,0,0,0,0.707,-0.707,0,0.707,0.707,0,-213.586,-2.121> }
	object { _1_dash_4con3_dot_dat matrix <1,0,0,0,0.707,-0.707,0,-0.707,-0.707,0,-213.586,-2.121> }
	object { _1_dash_4con3_dot_dat matrix <-1,0,0,0,0.707,-0.707,0,0.707,0.707,0,-213.586,-2.121> }
	object { _1_dash_4con3_dot_dat matrix <-1,0,0,0,0.707,-0.707,0,-0.707,-0.707,0,-213.586,-2.121> }
	object { ring2_dot_dat matrix <1,0,0,0,0.707,-0.707,0,0.707,0.707,0,-212.879,-2.828> }
	object { _1_dash_4con3_dot_dat matrix <1,0,0,0,-0.707,0.707,0,0.707,0.707,0,-216.414,0.707> }
	object { _1_dash_4con3_dot_dat matrix <1,0,0,0,-0.707,0.707,0,-0.707,-0.707,0,-216.414,0.707> }
	object { _1_dash_4con3_dot_dat matrix <-1,0,0,0,-0.707,0.707,0,0.707,0.707,0,-216.414,0.707> }
	object { _1_dash_4con3_dot_dat matrix <-1,0,0,0,-0.707,0.707,0,-0.707,-0.707,0,-216.414,0.707> }
	object { ring2_dot_dat matrix <1,0,0,0,0.707,-0.707,0,0.707,0.707,0,-217.121,1.414> }
}
#end
#end // ifndef (_2614_dot_dat)


//// Model item_020_fishingpole.ldr
#ifndef (item__020__fishingpole_dot_ldr)
#declare item__020__fishingpole_dot_ldr = object {
// Untitled
// Name: item_020_fishingpole.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 28  10 98 0  0 0 1  0 1 0  -1 0 0 2614.dat
	object {
		_2614_dot_dat
		matrix <1-L3SW/16,0,0,0,1-L3SW/243.949,0,0,0,1-L3SW/28.242,0,L3SW/-2.48992,L3SW/-2.85879>
		matrix <0,0,-1,0,1,0,1,0,0,10,98,0>
		material { L3Color28 }
	}
}
#end // ifndef (item__020__fishingpole_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-14,-121.949,-8>;
#declare L3ModelBBoxMax = <14.242,122,8>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0.121,0.0254974,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <28.242,243.949,16>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject item_020_fishingpole.ldr
object { item__020__fishingpole_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2             7            10
// POV Equivs:       -             6 (86%)
// Model has 2 parts (1 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
