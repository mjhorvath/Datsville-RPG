// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:39 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_003_construction.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_003_construction.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_003_construction.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 14 Yellow (from ldconfig.ldr)
#ifndef (L3Texture14)
#declare L3Texture14 = L3TextureOpaqueRGB(242,205,55)
#end
#ifndef (L3Texture14_slope)
#declare L3Texture14_slope = L3TextureSlope(L3Texture14)
#end
#ifndef (L3Color14)
#declare L3Color14 = L3Material(L3Texture14)
#end
#ifndef (L3Color14_slope)
#declare L3Color14_slope = L3Material(L3Texture14_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive stud4.dat
#ifndef (stud4_dot_dat)
#declare stud4_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 1-8cyli.dat
#ifndef (_1_dash_8cyli_dot_dat)
#declare _1_dash_8cyli_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-2-sqrt(2),0,-sqrt(2)>,-sqrt(sqrt(2)+2)/2 } }
}
#end // ifndef (_1_dash_8cyli_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 3-8cyli.dat
#ifndef (_3_dash_8cyli_dot_dat)
#declare _3_dash_8cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by {
	plane { <-sqrt(1/2),0,-1-sqrt(1/2)>,-1/sqrt(4+sqrt(8)) }
} }
#end // ifndef (_3_dash_8cyli_dot_dat)


//// Part 3833.dat
#ifndef (_3833_dot_dat)
#declare _3833_dot_dat = #if (L3Quality = 0) box { <-20.3054,-11,-26.292>, <22.211,6,22.211> } #else union {
// Minifig Construction Helmet
// Name: 3833.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !KEYWORDS hat
// !HISTORY 1998-12-15 [PTadmin] Official Update 1998-10
// !HISTORY 2007-06-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-01-06 [Steffen] BFCed, corrected underside stud
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
// !HISTORY 2012-12-24 [cwdee] Update category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,-1,0,0,0,-6,0,-6,0> }
	#if (L3Studs)
		object { stud4_dot_dat matrix <-1,0,0,0,-1.5,0,0,0,1,0,-6,0> }
	#end
	mesh {
		triangle { <9.192,2,9.192>, <5.657,-6,5.657>, <7.391,-6,3.061> }
		triangle { <7.391,-6,3.061>, <12.01,2,4.975>, <9.192,2,9.192> }
		triangle { <4.975,2,12.01>, <3.061,-6,7.391>, <5.657,-6,5.657> }
		triangle { <5.657,-6,5.657>, <9.192,2,9.192>, <4.975,2,12.01> }
		triangle { <0,2,13>, <0,-6,8>, <3.061,-6,7.391> }
		triangle { <3.061,-6,7.391>, <4.975,2,12.01>, <0,2,13> }
		triangle { <-4.975,2,12.01>, <-3.061,-6,7.391>, <0,-6,8> }
		triangle { <0,-6,8>, <0,2,13>, <-4.975,2,12.01> }
		triangle { <-9.192,2,9.192>, <-5.657,-6,5.657>, <-3.061,-6,7.391> }
		triangle { <-3.061,-6,7.391>, <-4.975,2,12.01>, <-9.192,2,9.192> }
		triangle { <-12.01,2,4.975>, <-7.391,-6,3.061>, <-5.657,-6,5.657> }
		triangle { <-5.657,-6,5.657>, <-9.192,2,9.192>, <-12.01,2,4.975> }
		triangle { <-13,2,0>, <-8,-6,0>, <-7.391,-6,3.061> }
		triangle { <-7.391,-6,3.061>, <-12.01,2,4.975>, <-13,2,0> }
		triangle { <-12.01,2,-4.975>, <-7.391,-6,-3.061>, <-8,-6,0> }
		triangle { <-8,-6,0>, <-13,2,0>, <-12.01,2,-4.975> }
		triangle { <-9.192,2,-9.192>, <-5.657,-6,-5.657>, <-7.391,-6,-3.061> }
		triangle { <-7.391,-6,-3.061>, <-12.01,2,-4.975>, <-9.192,2,-9.192> }
		triangle { <-4.975,2,-12.01>, <-3.061,-6,-7.391>, <-5.657,-6,-5.657> }
		triangle { <-5.657,-6,-5.657>, <-9.192,2,-9.192>, <-4.975,2,-12.01> }
		triangle { <0,2,-13>, <0,-6,-8>, <-3.061,-6,-7.391> }
		triangle { <-3.061,-6,-7.391>, <-4.975,2,-12.01>, <0,2,-13> }
		triangle { <4.975,2,-12.01>, <3.061,-6,-7.391>, <0,-6,-8> }
		triangle { <0,-6,-8>, <0,2,-13>, <4.975,2,-12.01> }
		triangle { <9.192,2,-9.192>, <5.657,-6,-5.657>, <3.061,-6,-7.391> }
		triangle { <3.061,-6,-7.391>, <4.975,2,-12.01>, <9.192,2,-9.192> }
		triangle { <12.01,2,-4.975>, <7.391,-6,-3.062>, <5.657,-6,-5.657> }
		triangle { <5.657,-6,-5.657>, <9.192,2,-9.192>, <12.01,2,-4.975> }
		triangle { <13,2,0>, <8,-6,0>, <7.391,-6,-3.062> }
		triangle { <7.391,-6,-3.062>, <12.01,2,-4.975>, <13,2,0> }
		triangle { <12.01,2,4.975>, <7.391,-6,3.061>, <8,-6,0> }
		triangle { <8,-6,0>, <13,2,0>, <12.01,2,4.975> }
// BFC INVERTNEXT
	}
	object { _4_dash_4cyli_dot_dat matrix <13,0,0,0,4,0,0,0,13,0,2,0> }
	mesh {
		triangle { <5.358,6,-20.934>, <0,6,-13>, <0,6,-22> }
		triangle { <9.899,6,-17.899>, <4.975,6,-12.01>, <0,6,-13> }
		triangle { <0,6,-13>, <5.358,6,-20.934>, <9.899,6,-17.899> }
		triangle { <12.934,6,-13.358>, <9.192,6,-9.192>, <4.975,6,-12.01> }
		triangle { <4.975,6,-12.01>, <9.899,6,-17.899>, <12.934,6,-13.358> }
		triangle { <15.706,6,-6.506>, <12.01,6,-4.975>, <9.192,6,-9.192> }
		triangle { <9.192,6,-9.192>, <12.934,6,-13.358>, <15.706,6,-6.506> }
		triangle { <17,6,0>, <13,6,0>, <12.01,6,-4.975> }
		triangle { <12.01,6,-4.975>, <15.706,6,-6.506>, <17,6,0> }
		triangle { <15.706,6,6.506>, <12.01,6,4.975>, <13,6,0> }
		triangle { <13,6,0>, <17,6,0>, <15.706,6,6.506> }
		triangle { <12.021,6,12.021>, <9.192,6,9.192>, <12.01,6,4.975> }
		triangle { <12.01,6,4.975>, <15.706,6,6.506>, <12.021,6,12.021> }
		triangle { <6.506,6,15.706>, <4.975,6,12.01>, <9.192,6,9.192> }
		triangle { <9.192,6,9.192>, <12.021,6,12.021>, <6.506,6,15.706> }
		triangle { <0,6,17>, <0,6,13>, <4.975,6,12.01> }
		triangle { <4.975,6,12.01>, <6.506,6,15.706>, <0,6,17> }
		triangle { <-6.506,6,15.706>, <-4.975,6,12.01>, <0,6,13> }
		triangle { <0,6,13>, <0,6,17>, <-6.506,6,15.706> }
		triangle { <-12.021,6,12.021>, <-9.192,6,9.192>, <-4.975,6,12.01> }
		triangle { <-4.975,6,12.01>, <-6.506,6,15.706>, <-12.021,6,12.021> }
		triangle { <-15.706,6,6.506>, <-12.01,6,4.975>, <-9.192,6,9.192> }
		triangle { <-9.192,6,9.192>, <-12.021,6,12.021>, <-15.706,6,6.506> }
		triangle { <-17,6,0>, <-13,6,0>, <-12.01,6,4.975> }
		triangle { <-12.01,6,4.975>, <-15.706,6,6.506>, <-17,6,0> }
		triangle { <-15.706,6,-6.506>, <-12.01,6,-4.975>, <-13,6,0> }
		triangle { <-13,6,0>, <-17,6,0>, <-15.706,6,-6.506> }
		triangle { <-12.934,6,-13.358>, <-9.192,6,-9.192>, <-12.01,6,-4.975> }
		triangle { <-12.01,6,-4.975>, <-15.706,6,-6.506>, <-12.934,6,-13.358> }
		triangle { <-9.899,6,-17.899>, <-4.975,6,-12.01>, <-9.192,6,-9.192> }
		triangle { <-9.192,6,-9.192>, <-12.934,6,-13.358>, <-9.899,6,-17.899> }
		triangle { <-5.358,6,-20.934>, <0,6,-13>, <-4.975,6,-12.01> }
		triangle { <-4.975,6,-12.01>, <-9.899,6,-17.899>, <-5.358,6,-20.934> }
		triangle { <0,6,-22>, <0,6,-13>, <-5.358,6,-20.934> }
		triangle { <12.934,6,-13.358>, <12.934,4,-13.358>, <15.706,4,-6.506> }
		triangle { <15.706,4,-6.506>, <15.706,6,-6.506>, <12.934,6,-13.358> }
	}
	object { _1_dash_8cyli_dot_dat matrix <-15.705,0,6.506,0,2,0,-6.506,0,-15.705,0,4,0> }
	object { _2_dash_4cyli_dot_dat matrix <15.705,0,-6.506,0,2,0,6.506,0,15.705,0,4,0> }
	mesh {
		triangle { <-15.706,6,-6.506>, <-15.706,4,-6.506>, <-12.934,4,-13.358> }
		triangle { <-12.934,4,-13.358>, <-12.934,6,-13.358>, <-15.706,6,-6.506> }
	}
	object { _3_dash_8cyli_dot_dat matrix <12.934,0,-5.358,0,2,0,-5.358,0,-12.934,0,4,-8> }
	mesh {
		triangle { <15.706,4,6.506>, <13.858,4,5.74>, <10.607,4,10.607> }
		triangle { <10.607,4,10.607>, <12.021,4,12.021>, <15.706,4,6.506> }
		triangle { <12.021,4,12.021>, <10.607,4,10.607>, <5.74,4,13.858> }
		triangle { <5.74,4,13.858>, <6.506,4,15.706>, <12.021,4,12.021> }
		triangle { <6.506,4,15.706>, <5.74,4,13.858>, <0,4,15> }
		triangle { <0,4,15>, <0,4,17>, <6.506,4,15.706> }
		triangle { <0,4,17>, <0,4,15>, <-5.74,4,13.858> }
		triangle { <-5.74,4,13.858>, <-6.506,4,15.706>, <0,4,17> }
		triangle { <-6.506,4,15.706>, <-5.74,4,13.858>, <-10.607,4,10.607> }
		triangle { <-10.607,4,10.607>, <-12.021,4,12.021>, <-6.506,4,15.706> }
		triangle { <-12.021,4,12.021>, <-10.607,4,10.607>, <-13.858,4,5.74> }
		triangle { <-13.858,4,5.74>, <-15.706,4,6.506>, <-12.021,4,12.021> }
		triangle { <-15.706,4,6.506>, <-13.858,4,5.74>, <-15,4,0> }
		triangle { <-15,4,0>, <-17,4,0>, <-15.706,4,6.506> }
		triangle { <-17,4,0>, <-15,4,0>, <-13.858,4,-5.74> }
		triangle { <-13.858,4,-5.74>, <-15.706,4,-6.506>, <-17,4,0> }
		triangle { <-15.706,4,-6.506>, <-13.858,4,-5.74>, <-10.607,4,-10.607> }
		triangle { <-10.607,4,-10.607>, <-12.021,4,-12.021>, <-15.706,4,-6.506> }
		triangle { <-12.021,4,-12.021>, <-10.607,4,-10.607>, <-5.74,4,-13.858> }
		triangle { <-5.74,4,-13.858>, <-6.506,4,-15.706>, <-12.021,4,-12.021> }
		triangle { <-6.506,4,-15.706>, <-5.74,4,-13.858>, <0,4,-15> }
		triangle { <0,4,-15>, <0,4,-17>, <-6.506,4,-15.706> }
		triangle { <0,4,-17>, <0,4,-15>, <5.74,4,-13.858> }
		triangle { <5.74,4,-13.858>, <6.506,4,-15.706>, <0,4,-17> }
		triangle { <6.506,4,-15.706>, <5.74,4,-13.858>, <10.607,4,-10.607> }
		triangle { <10.607,4,-10.607>, <12.021,4,-12.021>, <6.506,4,-15.706> }
		triangle { <12.021,4,-12.021>, <10.607,4,-10.607>, <13.858,4,-5.74> }
		triangle { <13.858,4,-5.74>, <15.706,4,-6.506>, <12.021,4,-12.021> }
		triangle { <15.706,4,-6.506>, <13.858,4,-5.74>, <15,4,0> }
		triangle { <15,4,0>, <17,4,0>, <15.706,4,-6.506> }
		triangle { <17,4,0>, <15,4,0>, <13.858,4,5.74> }
		triangle { <13.858,4,5.74>, <15.706,4,6.506>, <17,4,0> }
		triangle { <12.934,4,-13.358>, <12.021,4,-12.021>, <15.706,4,-6.506> }
		triangle { <9.899,4,-17.899>, <6.506,4,-15.706>, <12.021,4,-12.021> }
		triangle { <12.021,4,-12.021>, <12.934,4,-13.358>, <9.899,4,-17.899> }
		triangle { <5.358,4,-20.934>, <0,4,-17>, <6.506,4,-15.706> }
		triangle { <6.506,4,-15.706>, <9.899,4,-17.899>, <5.358,4,-20.934> }
		triangle { <0,4,-22>, <-5.358,4,-20.934>, <0,4,-17> }
		triangle { <0,4,-17>, <5.358,4,-20.934>, <0,4,-22> }
		triangle { <-9.899,4,-17.899>, <-6.506,4,-15.706>, <0,4,-17> }
		triangle { <0,4,-17>, <-5.358,4,-20.934>, <-9.899,4,-17.899> }
		triangle { <-12.934,4,-13.358>, <-12.021,4,-12.021>, <-6.506,4,-15.706> }
		triangle { <-6.506,4,-15.706>, <-9.899,4,-17.899>, <-12.934,4,-13.358> }
		triangle { <-15.706,4,-6.506>, <-12.021,4,-12.021>, <-12.934,4,-13.358> }
	}
	object { _4_dash_4disc_dot_dat matrix <4.5,0,0,0,1,0,0,0,4.5,0,-11,0> }
	mesh {
		triangle { <-1,-11,4.301>, <-1,-6.607,10.607>, <0,-7.314,11.314> }
		triangle { <0,-7.314,11.314>, <0,-11,5.5>, <-1,-11,4.301> }
		triangle { <-1,-6.607,10.607>, <-1,-1.74,13.858>, <0,-2.123,14.782> }
		triangle { <0,-2.123,14.782>, <0,-7.314,11.314>, <-1,-6.607,10.607> }
		triangle { <-1,-1.74,13.858>, <-1,4,15>, <0,4,16> }
		triangle { <0,4,16>, <0,-2.123,14.782>, <-1,-1.74,13.858> }
		triangle { <0,-11,5.5>, <0,-11,4.5>, <-1,-11,4.301> }
		triangle { <1,-11,4.301>, <0,-11,4.5>, <0,-11,5.5> }
		triangle { <0,-2.123,14.782>, <0,4,16>, <1,4,15> }
		triangle { <1,4,15>, <1,-1.74,13.858>, <0,-2.123,14.782> }
		triangle { <0,-7.314,11.314>, <0,-2.123,14.782>, <1,-1.74,13.858> }
		triangle { <1,-1.74,13.858>, <1,-6.607,10.607>, <0,-7.314,11.314> }
		triangle { <0,-11,5.5>, <0,-7.314,11.314>, <1,-6.607,10.607> }
		triangle { <1,-6.607,10.607>, <1,-11,4.301>, <0,-11,5.5> }
		triangle { <3.889,-11,3.889>, <8,-7.314,8>, <8.207,-6.607,6.793> }
		triangle { <8.207,-6.607,6.793>, <3.748,-11,2.334>, <3.889,-11,3.889> }
		triangle { <8,-7.314,8>, <10.452,-2.123,10.452>, <10.506,-1.74,9.092> }
		triangle { <10.506,-1.74,9.092>, <8.207,-6.607,6.793>, <8,-7.314,8> }
		triangle { <10.452,-2.123,10.452>, <11.314,4,11.314>, <11.314,4,9.899> }
		triangle { <11.314,4,9.899>, <10.506,-1.74,9.092>, <10.452,-2.123,10.452> }
		triangle { <3.748,-11,2.334>, <3.182,-11,3.182>, <3.889,-11,3.889> }
		triangle { <3.889,-11,3.889>, <3.182,-11,3.182>, <2.334,-11,3.748> }
		triangle { <9.092,-1.74,10.506>, <9.899,4,11.314>, <11.314,4,11.314> }
		triangle { <11.314,4,11.314>, <10.452,-2.123,10.452>, <9.092,-1.74,10.506> }
		triangle { <6.793,-6.607,8.207>, <9.092,-1.74,10.506>, <10.452,-2.123,10.452> }
		triangle { <10.452,-2.123,10.452>, <8,-7.314,8>, <6.793,-6.607,8.207> }
		triangle { <2.334,-11,3.748>, <6.793,-6.607,8.207>, <8,-7.314,8> }
		triangle { <8,-7.314,8>, <3.889,-11,3.889>, <2.334,-11,3.748> }
		triangle { <5.5,-11,0>, <11.314,-7.314,0>, <10.607,-6.607,-1> }
		triangle { <10.607,-6.607,-1>, <4.301,-11,-1>, <5.5,-11,0> }
		triangle { <11.314,-7.314,0>, <14.782,-2.123,0>, <13.858,-1.74,-1> }
		triangle { <13.858,-1.74,-1>, <10.607,-6.607,-1>, <11.314,-7.314,0> }
		triangle { <14.782,-2.123,0>, <16,4,0>, <15,4,-1> }
		triangle { <15,4,-1>, <13.858,-1.74,-1>, <14.782,-2.123,0> }
		triangle { <4.301,-11,-1>, <4.5,-11,0>, <5.5,-11,0> }
		triangle { <5.5,-11,0>, <4.5,-11,0>, <4.301,-11,1> }
		triangle { <13.858,-1.74,1>, <15,4,1>, <16,4,0> }
		triangle { <16,4,0>, <14.782,-2.123,0>, <13.858,-1.74,1> }
		triangle { <10.607,-6.607,1>, <13.858,-1.74,1>, <14.782,-2.123,0> }
		triangle { <14.782,-2.123,0>, <11.314,-7.314,0>, <10.607,-6.607,1> }
		triangle { <4.301,-11,1>, <10.607,-6.607,1>, <11.314,-7.314,0> }
		triangle { <11.314,-7.314,0>, <5.5,-11,0>, <4.301,-11,1> }
		triangle { <3.748,-11,-2.334>, <8.207,-6.607,-6.793>, <8,-7.314,-8> }
		triangle { <8,-7.314,-8>, <3.889,-11,-3.889>, <3.748,-11,-2.334> }
		triangle { <8.207,-6.607,-6.793>, <10.506,-1.74,-9.092>, <10.452,-2.123,-10.452> }
		triangle { <10.452,-2.123,-10.452>, <8,-7.314,-8>, <8.207,-6.607,-6.793> }
		triangle { <10.506,-1.74,-9.092>, <11.314,4,-9.899>, <11.314,4,-11.314> }
		triangle { <11.314,4,-11.314>, <10.452,-2.123,-10.452>, <10.506,-1.74,-9.092> }
		triangle { <3.889,-11,-3.889>, <3.182,-11,-3.182>, <3.748,-11,-2.334> }
		triangle { <2.334,-11,-3.748>, <3.182,-11,-3.182>, <3.889,-11,-3.889> }
		triangle { <10.452,-2.123,-10.452>, <11.314,4,-11.314>, <9.899,4,-11.314> }
		triangle { <9.899,4,-11.314>, <9.092,-1.74,-10.506>, <10.452,-2.123,-10.452> }
		triangle { <8,-7.314,-8>, <10.452,-2.123,-10.452>, <9.092,-1.74,-10.506> }
		triangle { <9.092,-1.74,-10.506>, <6.793,-6.607,-8.207>, <8,-7.314,-8> }
		triangle { <3.889,-11,-3.889>, <8,-7.314,-8>, <6.793,-6.607,-8.207> }
		triangle { <6.793,-6.607,-8.207>, <2.334,-11,-3.748>, <3.889,-11,-3.889> }
		triangle { <0,-11,-5.5>, <0,-7.314,-11.314>, <-1,-6.607,-10.607> }
		triangle { <-1,-6.607,-10.607>, <-1,-11,-4.301>, <0,-11,-5.5> }
		triangle { <0,-7.314,-11.314>, <0,-2.123,-14.782>, <-1,-1.74,-13.858> }
		triangle { <-1,-1.74,-13.858>, <-1,-6.607,-10.607>, <0,-7.314,-11.314> }
		triangle { <0,-2.123,-14.782>, <0,4,-16>, <-1,4,-15> }
		triangle { <-1,4,-15>, <-1,-1.74,-13.858>, <0,-2.123,-14.782> }
		triangle { <-1,-11,-4.301>, <0,-11,-4.5>, <0,-11,-5.5> }
		triangle { <0,-11,-5.5>, <0,-11,-4.5>, <1,-11,-4.301> }
		triangle { <1,-1.74,-13.858>, <1,4,-15>, <0,4,-16> }
		triangle { <0,4,-16>, <0,-2.123,-14.782>, <1,-1.74,-13.858> }
		triangle { <1,-6.607,-10.607>, <1,-1.74,-13.858>, <0,-2.123,-14.782> }
		triangle { <0,-2.123,-14.782>, <0,-7.314,-11.314>, <1,-6.607,-10.607> }
		triangle { <1,-11,-4.301>, <1,-6.607,-10.607>, <0,-7.314,-11.314> }
		triangle { <0,-7.314,-11.314>, <0,-11,-5.5>, <1,-11,-4.301> }
		triangle { <-3.889,-11,-3.889>, <-8,-7.314,-8>, <-8.207,-6.607,-6.793> }
		triangle { <-8.207,-6.607,-6.793>, <-3.748,-11,-2.334>, <-3.889,-11,-3.889> }
		triangle { <-8,-7.314,-8>, <-10.452,-2.123,-10.452>, <-10.506,-1.74,-9.092> }
		triangle { <-10.506,-1.74,-9.092>, <-8.207,-6.607,-6.793>, <-8,-7.314,-8> }
		triangle { <-10.452,-2.123,-10.452>, <-11.314,4,-11.314>, <-11.314,4,-9.899> }
		triangle { <-11.314,4,-9.899>, <-10.506,-1.74,-9.092>, <-10.452,-2.123,-10.452> }
		triangle { <-3.748,-11,-2.334>, <-3.182,-11,-3.182>, <-3.889,-11,-3.889> }
		triangle { <-3.889,-11,-3.889>, <-3.182,-11,-3.182>, <-2.334,-11,-3.748> }
		triangle { <-9.092,-1.74,-10.506>, <-9.899,4,-11.314>, <-11.314,4,-11.314> }
		triangle { <-11.314,4,-11.314>, <-10.452,-2.123,-10.452>, <-9.092,-1.74,-10.506> }
		triangle { <-6.793,-6.607,-8.207>, <-9.092,-1.74,-10.506>, <-10.452,-2.123,-10.452> }
		triangle { <-10.452,-2.123,-10.452>, <-8,-7.314,-8>, <-6.793,-6.607,-8.207> }
		triangle { <-2.334,-11,-3.748>, <-6.793,-6.607,-8.207>, <-8,-7.314,-8> }
		triangle { <-8,-7.314,-8>, <-3.889,-11,-3.889>, <-2.334,-11,-3.748> }
		triangle { <-4.301,-11,-1>, <-10.607,-6.607,-1>, <-11.314,-7.314,0> }
		triangle { <-11.314,-7.314,0>, <-5.5,-11,0>, <-4.301,-11,-1> }
		triangle { <-10.607,-6.607,-1>, <-13.858,-1.74,-1>, <-14.782,-2.123,0> }
		triangle { <-14.782,-2.123,0>, <-11.314,-7.314,0>, <-10.607,-6.607,-1> }
		triangle { <-13.858,-1.74,-1>, <-15,4,-1>, <-16,4,0> }
		triangle { <-16,4,0>, <-14.782,-2.123,0>, <-13.858,-1.74,-1> }
		triangle { <-5.5,-11,0>, <-4.5,-11,0>, <-4.301,-11,-1> }
		triangle { <-4.301,-11,1>, <-4.5,-11,0>, <-5.5,-11,0> }
		triangle { <-14.782,-2.123,0>, <-16,4,0>, <-15,4,1> }
		triangle { <-15,4,1>, <-13.858,-1.74,1>, <-14.782,-2.123,0> }
		triangle { <-11.314,-7.314,0>, <-14.782,-2.123,0>, <-13.858,-1.74,1> }
		triangle { <-13.858,-1.74,1>, <-10.607,-6.607,1>, <-11.314,-7.314,0> }
		triangle { <-5.5,-11,0>, <-11.314,-7.314,0>, <-10.607,-6.607,1> }
		triangle { <-10.607,-6.607,1>, <-4.301,-11,1>, <-5.5,-11,0> }
		triangle { <-3.748,-11,2.334>, <-8.207,-6.607,6.793>, <-8,-7.314,8> }
		triangle { <-8,-7.314,8>, <-3.889,-11,3.889>, <-3.748,-11,2.334> }
		triangle { <-8.207,-6.607,6.793>, <-10.506,-1.74,9.092>, <-10.452,-2.123,10.452> }
		triangle { <-10.452,-2.123,10.452>, <-8,-7.314,8>, <-8.207,-6.607,6.793> }
		triangle { <-10.506,-1.74,9.092>, <-11.314,4,9.899>, <-11.314,4,11.314> }
		triangle { <-11.314,4,11.314>, <-10.452,-2.123,10.452>, <-10.506,-1.74,9.092> }
		triangle { <-3.889,-11,3.889>, <-3.182,-11,3.182>, <-3.748,-11,2.334> }
		triangle { <-2.334,-11,3.748>, <-3.182,-11,3.182>, <-3.889,-11,3.889> }
		triangle { <-10.452,-2.123,10.452>, <-11.314,4,11.314>, <-9.899,4,11.314> }
		triangle { <-9.899,4,11.314>, <-9.092,-1.74,10.506>, <-10.452,-2.123,10.452> }
		triangle { <-8,-7.314,8>, <-10.452,-2.123,10.452>, <-9.092,-1.74,10.506> }
		triangle { <-9.092,-1.74,10.506>, <-6.793,-6.607,8.207>, <-8,-7.314,8> }
		triangle { <-3.889,-11,3.889>, <-8,-7.314,8>, <-6.793,-6.607,8.207> }
		triangle { <-6.793,-6.607,8.207>, <-2.334,-11,3.748>, <-3.889,-11,3.889> }
		triangle { <1.722,-11,4.157>, <1,-11,4.301>, <1,-6.607,10.607> }
		triangle { <1,-6.607,10.607>, <4.077,-6.607,9.843>, <1.722,-11,4.157> }
		triangle { <4.077,-6.607,9.843>, <1,-6.607,10.607>, <1,-1.74,13.858> }
		triangle { <1,-1.74,13.858>, <5.317,-1.74,12.836>, <4.077,-6.607,9.843> }
		triangle { <5.317,-1.74,12.836>, <1,-1.74,13.858>, <1,4,15> }
		triangle { <1,4,15>, <5.74,4,13.858>, <5.317,-1.74,12.836> }
		triangle { <5.74,4,13.858>, <9.899,4,11.314>, <9.092,-1.74,10.506> }
		triangle { <9.092,-1.74,10.506>, <5.317,-1.74,12.836>, <5.74,4,13.858> }
		triangle { <5.317,-1.74,12.836>, <9.092,-1.74,10.506>, <6.793,-6.607,8.207> }
		triangle { <6.793,-6.607,8.207>, <4.077,-6.607,9.843>, <5.317,-1.74,12.836> }
		triangle { <4.077,-6.607,9.843>, <6.793,-6.607,8.207>, <2.334,-11,3.748> }
		triangle { <2.334,-11,3.748>, <1.722,-11,4.157>, <4.077,-6.607,9.843> }
		triangle { <-4.077,-6.607,9.843>, <-1,-6.607,10.607>, <-1,-11,4.301> }
		triangle { <-1,-11,4.301>, <-1.722,-11,4.157>, <-4.077,-6.607,9.843> }
		triangle { <-5.317,-1.74,12.836>, <-1,-1.74,13.858>, <-1,-6.607,10.607> }
		triangle { <-1,-6.607,10.607>, <-4.077,-6.607,9.843>, <-5.317,-1.74,12.836> }
		triangle { <-5.74,4,13.858>, <-1,4,15>, <-1,-1.74,13.858> }
		triangle { <-1,-1.74,13.858>, <-5.317,-1.74,12.836>, <-5.74,4,13.858> }
		triangle { <-5.317,-1.74,12.836>, <-9.092,-1.74,10.506>, <-9.899,4,11.314> }
		triangle { <-9.899,4,11.314>, <-5.74,4,13.858>, <-5.317,-1.74,12.836> }
		triangle { <-4.077,-6.607,9.843>, <-6.793,-6.607,8.207>, <-9.092,-1.74,10.506> }
		triangle { <-9.092,-1.74,10.506>, <-5.317,-1.74,12.836>, <-4.077,-6.607,9.843> }
		triangle { <-1.722,-11,4.157>, <-2.334,-11,3.748>, <-6.793,-6.607,8.207> }
		triangle { <-6.793,-6.607,8.207>, <-4.077,-6.607,9.843>, <-1.722,-11,4.157> }
		triangle { <4.077,-6.607,-9.843>, <1,-6.607,-10.607>, <1,-11,-4.301> }
		triangle { <1,-11,-4.301>, <1.722,-11,-4.157>, <4.077,-6.607,-9.843> }
		triangle { <5.317,-1.74,-12.836>, <1,-1.74,-13.858>, <1,-6.607,-10.607> }
		triangle { <1,-6.607,-10.607>, <4.077,-6.607,-9.843>, <5.317,-1.74,-12.836> }
		triangle { <5.74,4,-13.858>, <1,4,-15>, <1,-1.74,-13.858> }
		triangle { <1,-1.74,-13.858>, <5.317,-1.74,-12.836>, <5.74,4,-13.858> }
		triangle { <5.317,-1.74,-12.836>, <9.092,-1.74,-10.506>, <9.899,4,-11.314> }
		triangle { <9.899,4,-11.314>, <5.74,4,-13.858>, <5.317,-1.74,-12.836> }
		triangle { <4.077,-6.607,-9.843>, <6.793,-6.607,-8.207>, <9.092,-1.74,-10.506> }
		triangle { <9.092,-1.74,-10.506>, <5.317,-1.74,-12.836>, <4.077,-6.607,-9.843> }
		triangle { <1.722,-11,-4.157>, <2.334,-11,-3.748>, <6.793,-6.607,-8.207> }
		triangle { <6.793,-6.607,-8.207>, <4.077,-6.607,-9.843>, <1.722,-11,-4.157> }
		triangle { <-1.722,-11,-4.157>, <-1,-11,-4.301>, <-1,-6.607,-10.607> }
		triangle { <-1,-6.607,-10.607>, <-4.077,-6.607,-9.843>, <-1.722,-11,-4.157> }
		triangle { <-4.077,-6.607,-9.843>, <-1,-6.607,-10.607>, <-1,-1.74,-13.858> }
		triangle { <-1,-1.74,-13.858>, <-5.317,-1.74,-12.836>, <-4.077,-6.607,-9.843> }
		triangle { <-5.317,-1.74,-12.836>, <-1,-1.74,-13.858>, <-1,4,-15> }
		triangle { <-1,4,-15>, <-5.74,4,-13.858>, <-5.317,-1.74,-12.836> }
		triangle { <-5.74,4,-13.858>, <-9.899,4,-11.314>, <-9.092,-1.74,-10.506> }
		triangle { <-9.092,-1.74,-10.506>, <-5.317,-1.74,-12.836>, <-5.74,4,-13.858> }
		triangle { <-5.317,-1.74,-12.836>, <-9.092,-1.74,-10.506>, <-6.793,-6.607,-8.207> }
		triangle { <-6.793,-6.607,-8.207>, <-4.077,-6.607,-9.843>, <-5.317,-1.74,-12.836> }
		triangle { <-4.077,-6.607,-9.843>, <-6.793,-6.607,-8.207>, <-2.334,-11,-3.748> }
		triangle { <-2.334,-11,-3.748>, <-1.722,-11,-4.157>, <-4.077,-6.607,-9.843> }
		triangle { <9.843,-6.607,4.077>, <10.607,-6.607,1>, <4.301,-11,1> }
		triangle { <4.301,-11,1>, <4.157,-11,1.722>, <9.843,-6.607,4.077> }
		triangle { <12.836,-1.74,5.317>, <13.858,-1.74,1>, <10.607,-6.607,1> }
		triangle { <10.607,-6.607,1>, <9.843,-6.607,4.077>, <12.836,-1.74,5.317> }
		triangle { <13.858,4,5.74>, <15,4,1>, <13.858,-1.74,1> }
		triangle { <13.858,-1.74,1>, <12.836,-1.74,5.317>, <13.858,4,5.74> }
		triangle { <12.836,-1.74,5.317>, <10.506,-1.74,9.092>, <11.314,4,9.899> }
		triangle { <11.314,4,9.899>, <13.858,4,5.74>, <12.836,-1.74,5.317> }
		triangle { <9.843,-6.607,4.077>, <8.207,-6.607,6.793>, <10.506,-1.74,9.092> }
		triangle { <10.506,-1.74,9.092>, <12.836,-1.74,5.317>, <9.843,-6.607,4.077> }
		triangle { <4.157,-11,1.722>, <3.748,-11,2.334>, <8.207,-6.607,6.793> }
		triangle { <8.207,-6.607,6.793>, <9.843,-6.607,4.077>, <4.157,-11,1.722> }
		triangle { <-4.157,-11,1.722>, <-4.301,-11,1>, <-10.607,-6.607,1> }
		triangle { <-10.607,-6.607,1>, <-9.843,-6.607,4.077>, <-4.157,-11,1.722> }
		triangle { <-9.843,-6.607,4.077>, <-10.607,-6.607,1>, <-13.858,-1.74,1> }
		triangle { <-13.858,-1.74,1>, <-12.836,-1.74,5.317>, <-9.843,-6.607,4.077> }
		triangle { <-12.836,-1.74,5.317>, <-13.858,-1.74,1>, <-15,4,1> }
		triangle { <-15,4,1>, <-13.858,4,5.74>, <-12.836,-1.74,5.317> }
		triangle { <-13.858,4,5.74>, <-11.314,4,9.899>, <-10.506,-1.74,9.092> }
		triangle { <-10.506,-1.74,9.092>, <-12.836,-1.74,5.317>, <-13.858,4,5.74> }
		triangle { <-12.836,-1.74,5.317>, <-10.506,-1.74,9.092>, <-8.207,-6.607,6.793> }
		triangle { <-8.207,-6.607,6.793>, <-9.843,-6.607,4.077>, <-12.836,-1.74,5.317> }
		triangle { <-9.843,-6.607,4.077>, <-8.207,-6.607,6.793>, <-3.748,-11,2.334> }
		triangle { <-3.748,-11,2.334>, <-4.157,-11,1.722>, <-9.843,-6.607,4.077> }
		triangle { <4.157,-11,-1.722>, <4.301,-11,-1>, <10.607,-6.607,-1> }
		triangle { <10.607,-6.607,-1>, <9.843,-6.607,-4.077>, <4.157,-11,-1.722> }
		triangle { <9.843,-6.607,-4.077>, <10.607,-6.607,-1>, <13.858,-1.74,-1> }
		triangle { <13.858,-1.74,-1>, <12.836,-1.74,-5.317>, <9.843,-6.607,-4.077> }
		triangle { <12.836,-1.74,-5.317>, <13.858,-1.74,-1>, <15,4,-1> }
		triangle { <15,4,-1>, <13.858,4,-5.74>, <12.836,-1.74,-5.317> }
		triangle { <13.858,4,-5.74>, <11.314,4,-9.899>, <10.506,-1.74,-9.092> }
		triangle { <10.506,-1.74,-9.092>, <12.836,-1.74,-5.317>, <13.858,4,-5.74> }
		triangle { <12.836,-1.74,-5.317>, <10.506,-1.74,-9.092>, <8.207,-6.607,-6.793> }
		triangle { <8.207,-6.607,-6.793>, <9.843,-6.607,-4.077>, <12.836,-1.74,-5.317> }
		triangle { <9.843,-6.607,-4.077>, <8.207,-6.607,-6.793>, <3.748,-11,-2.334> }
		triangle { <3.748,-11,-2.334>, <4.157,-11,-1.722>, <9.843,-6.607,-4.077> }
		triangle { <-9.843,-6.607,-4.077>, <-10.607,-6.607,-1>, <-4.301,-11,-1> }
		triangle { <-4.301,-11,-1>, <-4.157,-11,-1.722>, <-9.843,-6.607,-4.077> }
		triangle { <-12.836,-1.74,-5.317>, <-13.858,-1.74,-1>, <-10.607,-6.607,-1> }
		triangle { <-10.607,-6.607,-1>, <-9.843,-6.607,-4.077>, <-12.836,-1.74,-5.317> }
		triangle { <-13.858,4,-5.74>, <-15,4,-1>, <-13.858,-1.74,-1> }
		triangle { <-13.858,-1.74,-1>, <-12.836,-1.74,-5.317>, <-13.858,4,-5.74> }
		triangle { <-12.836,-1.74,-5.317>, <-10.506,-1.74,-9.092>, <-11.314,4,-9.899> }
		triangle { <-11.314,4,-9.899>, <-13.858,4,-5.74>, <-12.836,-1.74,-5.317> }
		triangle { <-9.843,-6.607,-4.077>, <-8.207,-6.607,-6.793>, <-10.506,-1.74,-9.092> }
		triangle { <-10.506,-1.74,-9.092>, <-12.836,-1.74,-5.317>, <-9.843,-6.607,-4.077> }
		triangle { <-4.157,-11,-1.722>, <-3.748,-11,-2.334>, <-8.207,-6.607,-6.793> }
		triangle { <-8.207,-6.607,-6.793>, <-9.843,-6.607,-4.077>, <-4.157,-11,-1.722> }
	}
}
#end
#end // ifndef (_3833_dot_dat)


//// Model helmet_003_construction.ldr
#ifndef (helmet__003__construction_dot_ldr)
#declare helmet__003__construction_dot_ldr = object {
// Untitled
// Name: helmet_003_construction.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 14  0 2 2  1 0 0  0 1 0  0 0 1 3833.dat
	object {
		_3833_dot_dat
		matrix <1-L3SW/42.5164,0,0,0,1-L3SW/17,0,0,0,1-L3SW/48.503,L3SW/44.6224,L3SW/-6.8,L3SW/-23.7702>
		matrix <1,0,0,0,1,0,0,0,1,0,2,2>
		material { L3Color14 }
	}
}
#end // ifndef (helmet__003__construction_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-20.3054,-9,-24.292>;
#declare L3ModelBBoxMax = <22.211,8,24.211>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0.952804,-0.5,-0.0404997>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <42.5164,17,48.503>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject helmet_003_construction.ldr
object { helmet__003__construction_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            10            13
// POV Equivs:       -             6 (60%)
// Model has 2 parts (1 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
