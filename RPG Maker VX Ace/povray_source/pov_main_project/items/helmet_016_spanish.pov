// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:40 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_016_spanish.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_016_spanish.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_016_spanish.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4ring1.dat
#ifndef (_4_dash_4ring1_dot_dat)
#declare _4_dash_4ring1_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 }
#end // ifndef (_4_dash_4ring1_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 2-8sphe.dat
#ifndef (_2_dash_8sphe_dot_dat)
#declare _2_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <-1,0,0>, <2,2,2> } } }
#end // ifndef (_2_dash_8sphe_dot_dat)


//// Primitive 4-8sphe.dat
#ifndef (_4_dash_8sphe_dot_dat)
#declare _4_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <-1,0,-1>, <2,2,2> } } }
#end // ifndef (_4_dash_8sphe_dot_dat)


//// Primitive 4-4con1.dat
#ifndef (_4_dash_4con1_dot_dat)
#declare _4_dash_4con1_dot_dat = cone { <0,0,0>, 2, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4con1_dot_dat)


//// Primitive stud4a.dat
#ifndef (stud4a_dot_dat)
#declare stud4a_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4a_dot_dat)


//// Primitive 2-4ring3.dat
#ifndef (_2_dash_4ring3_dot_dat)
#declare _2_dash_4ring3_dot_dat = disc {
	<0,0,0>, <0,1,0>, 4, 3
	clipped_by { plane { -z, 0 } }
}
#end // ifndef (_2_dash_4ring3_dot_dat)


//// Part 30048.dat
#ifndef (_30048_dot_dat)
#declare _30048_dot_dat = #if (L3Quality = 0) box { <-20.3253,-20.5229,-23.2196>, <20.3253,17.7984,21.5773> } #else union {
// Minifig Helmet Morion
// Name: 30048.dat
// Author: Andy Westrate [westrate]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !KEYWORDS Pirates, Imperial Armada, Spanish Main, conquistador
// !HISTORY 2004-04-22 [PTadmin] Official Update 2004-02
// !HISTORY 2007-05-25 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-12-24 [cwdee] Update category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
// Feather Hole
	mesh {
		triangle { <-3,-12,7>, <-3.3044,-12,8.5308>, <-3.3044,-8.75,8.5308> }
		triangle { <-3.3044,-8.75,8.5308>, <-3,-9.5,7>, <-3,-12,7> }
		triangle { <-3.3044,-12,8.5308>, <-4.1716,-12,9.8284>, <-4.1716,-7,9.8284> }
		triangle { <-4.1716,-7,9.8284>, <-3.3044,-8.75,8.5308>, <-3.3044,-12,8.5308> }
		triangle { <-4.1716,-12,9.8284>, <-5.4692,-12,10.6956>, <-5.4692,-5.75,10.6956> }
		triangle { <-5.4692,-5.75,10.6956>, <-4.1716,-7,9.8284>, <-4.1716,-12,9.8284> }
		triangle { <-5.4692,-12,10.6956>, <-7,-12,11>, <-7,-4.75,11> }
		triangle { <-7,-4.75,11>, <-5.4692,-5.75,10.6956>, <-5.4692,-12,10.6956> }
		triangle { <-7,-12,11>, <-8.5308,-12,10.6956>, <-8.5308,-3,10.6956> }
		triangle { <-8.5308,-3,10.6956>, <-7,-4.75,11>, <-7,-12,11> }
		triangle { <-8.5308,-12,10.6956>, <-9.8284,-12,9.8284>, <-9.8284,-2.5,9.8284> }
		triangle { <-9.8284,-2.5,9.8284>, <-8.5308,-3,10.6956>, <-8.5308,-12,10.6956> }
		triangle { <-9.8284,-12,9.8284>, <-10.6956,-12,8.5308>, <-10.6956,-2.5,8.5308> }
		triangle { <-10.6956,-2.5,8.5308>, <-9.8284,-2.5,9.8284>, <-9.8284,-12,9.8284> }
		triangle { <-10.6956,-12,8.5308>, <-11,-12,7>, <-11,-4,7> }
		triangle { <-11,-4,7>, <-10.6956,-2.5,8.5308>, <-10.6956,-12,8.5308> }
		triangle { <-11,-12,7>, <-10.6956,-12,5.4692>, <-10.6956,-5.25,5.4692> }
		triangle { <-10.6956,-5.25,5.4692>, <-11,-4,7>, <-11,-12,7> }
		triangle { <-10.6956,-12,5.4692>, <-9.8284,-12,4.1716>, <-9.8284,-7.25,4.1716> }
		triangle { <-9.8284,-7.25,4.1716>, <-10.6956,-5.25,5.4692>, <-10.6956,-12,5.4692> }
		triangle { <-9.8284,-12,4.1716>, <-8.5308,-12,3.3044>, <-8.5308,-8.75,3.3044> }
		triangle { <-8.5308,-8.75,3.3044>, <-9.8284,-7.25,4.1716>, <-9.8284,-12,4.1716> }
		triangle { <-8.5308,-12,3.3044>, <-7,-12,3>, <-7,-10,3> }
		triangle { <-7,-10,3>, <-8.5308,-8.75,3.3044>, <-8.5308,-12,3.3044> }
		triangle { <-7,-12,3>, <-5.4692,-12,3.3044>, <-5.4692,-10.5,3.3044> }
		triangle { <-5.4692,-10.5,3.3044>, <-7,-10,3>, <-7,-12,3> }
		triangle { <-5.4692,-12,3.3044>, <-4.1716,-12,4.1716>, <-4.1716,-10.5,4.1716> }
		triangle { <-4.1716,-10.5,4.1716>, <-5.4692,-10.5,3.3044>, <-5.4692,-12,3.3044> }
		triangle { <-4.1716,-12,4.1716>, <-3.3044,-12,5.4692>, <-3.3044,-10,5.4692> }
		triangle { <-3.3044,-10,5.4692>, <-4.1716,-10.5,4.1716>, <-4.1716,-12,4.1716> }
		triangle { <-3.3044,-12,5.4692>, <-3,-12,7>, <-3,-9.5,7> }
		triangle { <-3,-9.5,7>, <-3.3044,-10,5.4692>, <-3.3044,-12,5.4692> }
// BFC INVERTNEXT
	}
	object { _4_dash_4cyli_dot_dat matrix <2,0,0,0,5,0,0,0,2,-7,-12,7> }
	object { _4_dash_4disc_dot_dat matrix <2,0,0,0,1,0,0,0,2,-7,-7,7> }
	object { _4_dash_4ring1_dot_dat matrix <2,0,0,0,1,0,0,0,2,-7,-12,7> }
// Crop
	object { _2_dash_4cyli_dot_dat matrix <0,-2.92635,-14.7118,3,0,0,0,-20.5965,4.0969,-1.5,3,0> }
	mesh {
		triangle { <-1.5,0.0736,-14.7118>, <1.5,0.0736,-14.7118>, <0,-0.219,-16.183> }
		triangle { <0,6.219,16.183>, <1.5,5.9264,14.7118>, <-1.5,5.9264,14.7118> }
		triangle { <1.5,0.0736,-14.7118>, <1.5,-7.5859,-12.0243>, <1.5,-5.3339,-12.4723> }
		triangle { <1.5,-7.5859,-12.0243>, <1.5,-13.633,-7.5058>, <1.5,-9.4719,-8.3335> }
		triangle { <1.5,-9.4719,-8.3335>, <1.5,-5.3339,-12.4723>, <1.5,-7.5859,-12.0243> }
		triangle { <1.5,-13.633,-7.5058>, <1.5,-17.149,-1.8451>, <1.5,-11.7121,-2.9266> }
		triangle { <1.5,-11.7121,-2.9266>, <1.5,-9.4719,-8.3335>, <1.5,-13.633,-7.5058> }
		triangle { <1.5,-17.149,-1.8451>, <1.5,-17.5965,4.0969>, <1.5,-11.7118,2.9264> }
		triangle { <1.5,-11.7118,2.9264>, <1.5,-11.7121,-2.9266>, <1.5,-17.149,-1.8451> }
		triangle { <1.5,-17.5965,4.0969>, <1.5,-14.9092,9.4153>, <1.5,-9.4723,8.3339> }
		triangle { <1.5,-9.4723,8.3339>, <1.5,-11.7118,2.9264>, <1.5,-17.5965,4.0969> }
		triangle { <1.5,-14.9092,9.4153>, <1.5,-9.4946,13.2996>, <1.5,-5.3335,12.4719> }
		triangle { <1.5,-5.3335,12.4719>, <1.5,-9.4723,8.3339>, <1.5,-14.9092,9.4153> }
		triangle { <1.5,-9.4946,13.2996>, <1.5,-2.1786,15.1601>, <1.5,0.0734,14.7121> }
		triangle { <1.5,0.0734,14.7121>, <1.5,-5.3335,12.4719>, <1.5,-9.4946,13.2996> }
		triangle { <1.5,-2.1786,15.1601>, <1.5,5.9264,14.7118>, <1.5,0.0734,14.7121> }
		triangle { <-1.5,-5.3339,-12.4723>, <-1.5,-7.5859,-12.0243>, <-1.5,0.0736,-14.7118> }
		triangle { <-1.5,-9.4719,-8.3335>, <-1.5,-13.633,-7.5058>, <-1.5,-7.5859,-12.0243> }
		triangle { <-1.5,-7.5859,-12.0243>, <-1.5,-5.3339,-12.4723>, <-1.5,-9.4719,-8.3335> }
		triangle { <-1.5,-11.7121,-2.9266>, <-1.5,-17.149,-1.8451>, <-1.5,-13.633,-7.5058> }
		triangle { <-1.5,-13.633,-7.5058>, <-1.5,-9.4719,-8.3335>, <-1.5,-11.7121,-2.9266> }
		triangle { <-1.5,-11.7118,2.9264>, <-1.5,-17.5965,4.0969>, <-1.5,-17.149,-1.8451> }
		triangle { <-1.5,-17.149,-1.8451>, <-1.5,-11.7121,-2.9266>, <-1.5,-11.7118,2.9264> }
		triangle { <-1.5,-9.4723,8.3339>, <-1.5,-14.9092,9.4153>, <-1.5,-17.5965,4.0969> }
		triangle { <-1.5,-17.5965,4.0969>, <-1.5,-11.7118,2.9264>, <-1.5,-9.4723,8.3339> }
		triangle { <-1.5,-5.3335,12.4719>, <-1.5,-9.4946,13.2996>, <-1.5,-14.9092,9.4153> }
		triangle { <-1.5,-14.9092,9.4153>, <-1.5,-9.4723,8.3339>, <-1.5,-5.3335,12.4719> }
		triangle { <-1.5,0.0734,14.7121>, <-1.5,-2.1786,15.1601>, <-1.5,-9.4946,13.2996> }
		triangle { <-1.5,-9.4946,13.2996>, <-1.5,-5.3335,12.4719>, <-1.5,0.0734,14.7121> }
		triangle { <-1.5,0.0734,14.7121>, <-1.5,5.9264,14.7118>, <-1.5,-2.1786,15.1601> }
// Left Side
	}
	object { _2_dash_8sphe_dot_dat matrix <0,-2.9264,-14.7118,13,0,0,0,-14.7118,2.9264,1.5,3,0> }
	mesh {
		triangle { <1.5,0.0736,-14.7118>, <5.8339,2.396,-15.4229>, <0,-0.219,-16.183> }
		triangle { <6.4751,0.2963,-13.5922>, <10.779,5.1029,-12.314>, <5.8339,2.396,-15.4229> }
		triangle { <10.6923,0.9308,-10.4027>, <14.0839,7.4898,-7.3313>, <10.779,5.1029,-12.314> }
		triangle { <13.5107,1.8801,-5.6302>, <15.244,9.1929,-1.2319>, <14.0839,7.4898,-7.3313> }
		triangle { <14.5,3,0>, <14.0839,9.9536,5.0551>, <15.244,9.1929,-1.2319> }
		triangle { <13.5107,4.1199,5.6302>, <10.779,9.6552,10.572>, <14.0839,9.9536,5.0551> }
		triangle { <10.6923,5.0692,10.4027>, <5.8339,8.3441,14.48>, <10.779,9.6552,10.572> }
		triangle { <1.5,5.9264,14.7118>, <0,6.219,16.183>, <5.8339,8.3441,14.48> }
		triangle { <1.5,0.0736,-14.7118>, <6.4751,0.2963,-13.5922>, <5.8339,2.396,-15.4229> }
		triangle { <6.4751,0.2963,-13.5922>, <10.6923,0.9308,-10.4027>, <10.779,5.1029,-12.314> }
		triangle { <10.6923,0.9308,-10.4027>, <13.5107,1.8801,-5.6302>, <14.0839,7.4898,-7.3313> }
		triangle { <13.5107,1.8801,-5.6302>, <14.5,3,0>, <15.244,9.1929,-1.2319> }
		triangle { <14.5,3,0>, <13.5107,4.1199,5.6302>, <14.0839,9.9536,5.0551> }
		triangle { <13.5107,4.1199,5.6302>, <10.6923,5.0692,10.4027>, <10.779,9.6552,10.572> }
		triangle { <10.6923,5.0692,10.4027>, <6.4751,5.7037,13.5922>, <5.8339,8.3441,14.48> }
		triangle { <6.4751,5.7037,13.5922>, <1.5,5.9264,14.7118>, <5.8339,8.3441,14.48> }
// Right Side
	}
	object { _2_dash_8sphe_dot_dat matrix <0,-2.9264,-14.7118,-13,0,0,0,-14.7118,2.9264,-1.5,3,0> }
	mesh {
		triangle { <0,-0.219,-16.183>, <-5.8339,2.396,-15.4229>, <-1.5,0.0736,-14.7118> }
		triangle { <-5.8339,2.396,-15.4229>, <-10.779,5.1029,-12.314>, <-6.4751,0.2963,-13.5922> }
		triangle { <-10.779,5.1029,-12.314>, <-14.0839,7.4898,-7.3313>, <-10.6923,0.9308,-10.4027> }
		triangle { <-14.0839,7.4898,-7.3313>, <-15.244,9.1929,-1.2319>, <-13.5107,1.8801,-5.6302> }
		triangle { <-15.244,9.1929,-1.2319>, <-14.0839,9.9536,5.0551>, <-14.5,3,0> }
		triangle { <-14.0839,9.9536,5.0551>, <-10.779,9.6552,10.572>, <-13.5107,4.1199,5.6302> }
		triangle { <-10.779,9.6552,10.572>, <-5.8339,8.3441,14.48>, <-10.6923,5.0692,10.4027> }
		triangle { <-5.8339,8.3441,14.48>, <0,6.219,16.183>, <-1.5,5.9264,14.7118> }
		triangle { <-5.8339,2.396,-15.4229>, <-6.4751,0.2963,-13.5922>, <-1.5,0.0736,-14.7118> }
		triangle { <-10.779,5.1029,-12.314>, <-10.6923,0.9308,-10.4027>, <-6.4751,0.2963,-13.5922> }
		triangle { <-14.0839,7.4898,-7.3313>, <-13.5107,1.8801,-5.6302>, <-10.6923,0.9308,-10.4027> }
		triangle { <-15.244,9.1929,-1.2319>, <-14.5,3,0>, <-13.5107,1.8801,-5.6302> }
		triangle { <-14.0839,9.9536,5.0551>, <-13.5107,4.1199,5.6302>, <-14.5,3,0> }
		triangle { <-10.779,9.6552,10.572>, <-10.6923,5.0692,10.4027>, <-13.5107,4.1199,5.6302> }
		triangle { <-5.8339,8.3441,14.48>, <-6.4751,5.7037,13.5922>, <-10.6923,5.0692,10.4027> }
		triangle { <-5.8339,8.3441,14.48>, <-1.5,5.9264,14.7118>, <-6.4751,5.7037,13.5922> }
// Interior
// BFC INVERTNEXT
	}
	object { _4_dash_8sphe_dot_dat matrix <6.5,0,0,0,-2,0,0,0,6.5,0,-6,0> }
// BFC INVERTNEXT
	object { _4_dash_4con1_dot_dat matrix <0,0,-6.5,0,-8,0,6.5,0,0,0,2,0> }
	#if (L3Studs)
		object { stud4a_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,-4,0> }
// BFC INVERTNEXT
	#end
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,-2.5,0,0,0,6,0,-4,0> }
	mesh {
		triangle { <0,2,13>, <4.9751,2,12.0107>, <0,8.6337,13.2406> }
		triangle { <4.9751,2,12.0107>, <9.1923,2,9.1923>, <5.3035,10.5879,11.8044> }
		triangle { <9.1923,2,9.1923>, <12.0107,2,4.9751>, <9.7991,11.8432,8.5706> }
		triangle { <12.0107,2,4.9751>, <13,2,0>, <12.8036,12.2094,4.0325> }
		triangle { <13,2,0>, <12.0107,2,-4.9751>, <13.8582,11.6299,-1.1199> }
		triangle { <12.0107,2,-4.9751>, <9.1923,2,-9.1923>, <12.8036,10.1936,-6.1018> }
		triangle { <9.1923,2,-9.1923>, <4.9751,2,-12.0107>, <9.7991,8.1186,-10.1543> }
		triangle { <4.9751,2,-12.0107>, <0,2,-13>, <5.3035,5.7213,-12.6616> }
		triangle { <0,3.3663,-13.2406>, <5.3035,5.7213,-12.6616>, <0,2,-13> }
		triangle { <5.3035,5.7213,-12.6616>, <9.7991,8.1186,-10.1543>, <4.9751,2,-12.0107> }
		triangle { <9.7991,8.1186,-10.1543>, <12.8036,10.1936,-6.1018>, <9.1923,2,-9.1923> }
		triangle { <12.8036,10.1936,-6.1018>, <13.8582,11.6299,-1.1199>, <12.0107,2,-4.9751> }
		triangle { <13.8582,11.6299,-1.1199>, <12.8036,12.2094,4.0325>, <13,2,0> }
		triangle { <12.8036,12.2094,4.0325>, <9.7991,11.8432,8.5706>, <12.0107,2,4.9751> }
		triangle { <9.7991,11.8432,8.5706>, <5.3035,10.5879,11.8044>, <9.1923,2,9.1923> }
		triangle { <5.3035,10.5879,11.8044>, <0,8.6337,13.2406>, <4.9751,2,12.0107> }
		triangle { <0,8.6337,13.2406>, <-4.9751,2,12.0107>, <0,2,13> }
		triangle { <-5.3035,10.5879,11.8044>, <-9.1923,2,9.1923>, <-4.9751,2,12.0107> }
		triangle { <-9.7991,11.8432,8.5706>, <-12.0107,2,4.9751>, <-9.1923,2,9.1923> }
		triangle { <-12.8036,12.2094,4.0325>, <-13,2,0>, <-12.0107,2,4.9751> }
		triangle { <-13.8582,11.6299,-1.1199>, <-12.0107,2,-4.9751>, <-13,2,0> }
		triangle { <-12.8036,10.1936,-6.1018>, <-9.1923,2,-9.1923>, <-12.0107,2,-4.9751> }
		triangle { <-9.7991,8.1186,-10.1543>, <-4.9751,2,-12.0107>, <-9.1923,2,-9.1923> }
		triangle { <-5.3035,5.7213,-12.6616>, <0,2,-13>, <-4.9751,2,-12.0107> }
		triangle { <0,2,-13>, <-5.3035,5.7213,-12.6616>, <0,3.3663,-13.2406> }
		triangle { <-4.9751,2,-12.0107>, <-9.7991,8.1186,-10.1543>, <-5.3035,5.7213,-12.6616> }
		triangle { <-9.1923,2,-9.1923>, <-12.8036,10.1936,-6.1018>, <-9.7991,8.1186,-10.1543> }
		triangle { <-12.0107,2,-4.9751>, <-13.8582,11.6299,-1.1199>, <-12.8036,10.1936,-6.1018> }
		triangle { <-13,2,0>, <-12.8036,12.2094,4.0325>, <-13.8582,11.6299,-1.1199> }
		triangle { <-12.0107,2,4.9751>, <-9.7991,11.8432,8.5706>, <-12.8036,12.2094,4.0325> }
		triangle { <-9.1923,2,9.1923>, <-5.3035,10.5879,11.8044>, <-9.7991,11.8432,8.5706> }
		triangle { <-4.9751,2,12.0107>, <0,8.6337,13.2406>, <-5.3035,10.5879,11.8044> }
// Brim
// BFC INVERTNEXT
	}
	object { _2_dash_4ring3_dot_dat matrix <0,-0.8779,-4.4135,-0.3827,0.9061,-0.1802,4.6194,1.8766,-0.3733,0,6,0> }
// BFC INVERTNEXT
	object { _2_dash_4ring3_dot_dat matrix <0,-1.073,-5.3943,-0.3827,0.9061,-0.1802,4.6194,1.8766,-0.3733,0,6,0> }
	object { _2_dash_4ring3_dot_dat matrix <0,-1.073,-5.3943,-0.3827,0.9061,-0.1802,5.0813,2.0643,-0.4106,0,3,0> }
	mesh {
		triangle { <0,-1.292,-21.5773>, <7.7785,2.1947,-20.5638>, <0,1.708,-21.5773> }
		triangle { <7.7785,2.1947,-20.5638>, <7.0714,4.9074,-20.5067>, <0,1.708,-21.5773> }
		triangle { <7.7785,2.1947,-20.5638>, <14.372,5.8038,-16.4187>, <7.0714,4.9074,-20.5067> }
		triangle { <14.372,5.8038,-16.4187>, <13.0655,8.2731,-16.3131>, <7.0714,4.9074,-20.5067> }
		triangle { <14.372,5.8038,-16.4187>, <18.7785,8.9863,-9.7751>, <13.0655,8.2731,-16.3131> }
		triangle { <18.7785,8.9863,-9.7751>, <17.0715,11.2928,-9.6372>, <13.0655,8.2731,-16.3131> }
		triangle { <18.7785,12.2714,6.7402>, <17.0715,14.5779,6.8781>, <18.4776,13.5066,-1.4932> }
		triangle { <18.7785,8.9863,-9.7751>, <20.3253,11.2573,-1.6425>, <17.0715,11.2928,-9.6372> }
		triangle { <20.3253,11.2573,-1.6425>, <18.4776,13.5066,-1.4932>, <17.0715,11.2928,-9.6372> }
		triangle { <20.3253,11.2573,-1.6425>, <18.7785,12.2714,6.7402>, <18.4776,13.5066,-1.4932> }
		triangle { <18.7785,12.2714,6.7402>, <13.0655,14.3428,14.2015>, <17.0715,14.5779,6.8781> }
		triangle { <18.7785,12.2714,6.7402>, <14.372,11.8736,14.0959>, <13.0655,14.3428,14.2015> }
		triangle { <14.372,11.8736,14.0959>, <7.0714,12.8381,19.3638>, <13.0655,14.3428,14.2015> }
		triangle { <14.372,11.8736,14.0959>, <7.7785,10.1254,19.3067>, <7.0714,12.8381,19.3638> }
		triangle { <7.7785,10.1254,19.3067>, <0,10.292,21.5773>, <7.0714,12.8381,19.3638> }
		triangle { <7.7785,10.1254,19.3067>, <0,7.292,21.5773>, <0,10.292,21.5773> }
// BFC INVERTNEXT
	}
	object { _2_dash_4ring3_dot_dat matrix <0,-0.8779,-4.4135,0.3827,0.9061,-0.1802,-4.6194,1.8766,-0.3733,0,6,0> }
// BFC INVERTNEXT
	object { _2_dash_4ring3_dot_dat matrix <0,-1.073,-5.3943,0.3827,0.9061,-0.1802,-4.6194,1.8766,-0.3733,0,6,0> }
	object { _2_dash_4ring3_dot_dat matrix <0,-1.073,-5.3943,0.3827,0.9061,-0.1802,-5.0813,2.0643,-0.4106,0,3,0> }
	mesh {
		triangle { <0,1.708,-21.5773>, <-7.7785,2.1947,-20.5638>, <0,-1.292,-21.5773> }
		triangle { <0,1.708,-21.5773>, <-7.0714,4.9074,-20.5067>, <-7.7785,2.1947,-20.5638> }
		triangle { <-7.0714,4.9074,-20.5067>, <-14.372,5.8038,-16.4187>, <-7.7785,2.1947,-20.5638> }
		triangle { <-7.0714,4.9074,-20.5067>, <-13.0655,8.2731,-16.3131>, <-14.372,5.8038,-16.4187> }
		triangle { <-13.0655,8.2731,-16.3131>, <-18.7785,8.9863,-9.7751>, <-14.372,5.8038,-16.4187> }
		triangle { <-13.0655,8.2731,-16.3131>, <-17.0715,11.2928,-9.6372>, <-18.7785,8.9863,-9.7751> }
		triangle { <-18.4776,13.5066,-1.4932>, <-17.0715,14.5779,6.8781>, <-18.7785,12.2714,6.7402> }
		triangle { <-17.0715,11.2928,-9.6372>, <-20.3253,11.2573,-1.6425>, <-18.7785,8.9863,-9.7751> }
		triangle { <-17.0715,11.2928,-9.6372>, <-18.4776,13.5066,-1.4932>, <-20.3253,11.2573,-1.6425> }
		triangle { <-18.4776,13.5066,-1.4932>, <-18.7785,12.2714,6.7402>, <-20.3253,11.2573,-1.6425> }
		triangle { <-17.0715,14.5779,6.8781>, <-13.0655,14.3428,14.2015>, <-18.7785,12.2714,6.7402> }
		triangle { <-13.0655,14.3428,14.2015>, <-14.372,11.8736,14.0959>, <-18.7785,12.2714,6.7402> }
		triangle { <-13.0655,14.3428,14.2015>, <-7.0714,12.8381,19.3638>, <-14.372,11.8736,14.0959> }
		triangle { <-7.0714,12.8381,19.3638>, <-7.7785,10.1254,19.3067>, <-14.372,11.8736,14.0959> }
		triangle { <-7.0714,12.8381,19.3638>, <0,10.292,21.5773>, <-7.7785,10.1254,19.3067> }
		triangle { <0,10.292,21.5773>, <0,7.292,21.5773>, <-7.7785,10.1254,19.3067> }
	}
}
#end
#end // ifndef (_30048_dot_dat)


//// Model helmet_016_spanish.ldr
#ifndef (helmet__016__spanish_dot_ldr)
#declare helmet__016__spanish_dot_ldr = object {
// Untitled
// Name: helmet_016_spanish.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 7  0 2 0  1 0 0  0 1 0  0 0 1 30048.dat
	object {
		_30048_dot_dat
		matrix <1-L3SW/40.6506,0,0,0,1-L3SW/38.3213,0,0,0,1-L3SW/44.7969,0,L3SW/-28.1314,L3SW/-54.5538>
		matrix <1,0,0,0,1,0,0,0,1,0,2,0>
		material { L3Color7 }
	}
}
#end // ifndef (helmet__016__spanish_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-20.3253,-18.5229,-23.2196>;
#declare L3ModelBBoxMax = <20.3253,19.7984,21.5773>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,0.637775,-0.821151>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <40.6506,38.3213,44.7969>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject helmet_016_spanish.ldr
object { helmet__016__spanish_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            11            14
// POV Equivs:       -             9 (82%)
// Model has 2 parts (1 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
