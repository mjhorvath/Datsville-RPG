// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:39 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\armor_001_samurai.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\armor_001_samurai.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\armor_001_samurai.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 8 Dark_Gray (from ldconfig.ldr)
#ifndef (L3Texture8)
#declare L3Texture8 = L3TextureOpaqueRGB(109,110,92)
#end
#ifndef (L3Texture8_slope)
#declare L3Texture8_slope = L3TextureSlope(L3Texture8)
#end
#ifndef (L3Color8)
#declare L3Color8 = L3Material(L3Texture8)
#end
#ifndef (L3Color8_slope)
#declare L3Color8_slope = L3Material(L3Texture8_slope)
#end


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4ndis.dat
#ifndef (_4_dash_4ndis_dot_dat)
#declare _4_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <-1,-1,-1>, <1,1,1> } } }
#end // ifndef (_4_dash_4ndis_dot_dat)


//// Primitive 1-8ndis.dat
#ifndef (_1_dash_8ndis_dot_dat)
#declare _1_dash_8ndis_dot_dat = disc {
	<0,0,0>, <0,1,0>, 2, 1
	clipped_by { plane { x, 1 } plane { -z, 0 } plane { <-1,0,1>, 0 } }
}
#end // ifndef (_1_dash_8ndis_dot_dat)


//// Primitive 1-8cyli.dat
#ifndef (_1_dash_8cyli_dot_dat)
#declare _1_dash_8cyli_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-2-sqrt(2),0,-sqrt(2)>,-sqrt(sqrt(2)+2)/2 } }
}
#end // ifndef (_1_dash_8cyli_dot_dat)


//// Primitive 1-4disc.dat
#ifndef (_1_dash_4disc_dot_dat)
#declare _1_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { plane { -x, 0 } plane { -z, 0 } } }
#end // ifndef (_1_dash_4disc_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4con0.dat
#ifndef (_1_dash_4con0_dot_dat)
#declare _1_dash_4con0_dot_dat = cone {
	<0,0,0>, 1, <0,1,0>, 0 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con0_dot_dat)


//// Primitive rect.dat
#ifndef (rect_dot_dat)
#declare rect_dot_dat = object {
// Rectangle
// Name: rect.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-05 [hafhead] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect_dot_dat)


//// Primitive box5.dat
#ifndef (box5_dot_dat)
#declare box5_dot_dat = object {
// Box with 5 Faces and All Edges
// Name: box5.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-03 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box5_dot_dat)


//// Primitive 2-4disc.dat
#ifndef (_2_dash_4disc_dot_dat)
#declare _2_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { box { <-2,-1,0>, <2,1,2> } } }
#end // ifndef (_2_dash_4disc_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 1-4ring9.dat
#ifndef (_1_dash_4ring9_dot_dat)
#declare _1_dash_4ring9_dot_dat = disc {
	<0,0,0>, <0,1,0>, 10, 9
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring9_dot_dat)


//// Part 30174.dat
#ifndef (_30174_dot_dat)
#declare _30174_dot_dat = #if (L3Quality = 0) box { <-34,-3,-16>, <34,32,15> } #else union {
// Minifig Armor Samurai
// Name: 30174.dat
// Author: Paul Easter [pneaster]
// !LDRAW_ORG Part UPDATE 2013-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Neckwear
// !KEYWORDS breast, plate, ninja, warrior, shoulderpads
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-06 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-10-02 [Steffen] BFC rationalisation
// !HISTORY 2012-10-28 [MagFors] Moved back plate into position, added some cond-lines
// !HISTORY 2012-10-28 [MagFors] Reduced width of shoulder details to fit front and back plate
// !HISTORY 2013-07-21 [PTadmin] Official Update 2013-01
// around neck
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <6.5,0,0,0,3,0,0,0,6.5,0,-3,0> }
	object { _4_dash_4ndis_dot_dat matrix <6.5,0,0,0,3,0,0,0,6.5,0,-3,0> }
	object { _4_dash_4ndis_dot_dat matrix <6.5,0,0,0,-3,0,0,0,-6.5,0,0,0> }
	mesh {
		triangle { <13,-3,10>, <6.5,-3,6.5>, <-6.5,-3,6.5> }
		triangle { <-6.5,-3,6.5>, <-13,-3,10>, <13,-3,10> }
		triangle { <6.5,-3,-6.5>, <6.5,-3,6.5>, <13,-3,10> }
		triangle { <13,-3,10>, <13,-3,-10>, <6.5,-3,-6.5> }
		triangle { <-6.5,-3,-6.5>, <6.5,-3,-6.5>, <13,-3,-10> }
		triangle { <13,-3,-10>, <-13,-3,-10>, <-6.5,-3,-6.5> }
		triangle { <-6.5,-3,6.5>, <-6.5,-3,-6.5>, <-13,-3,-10> }
		triangle { <-13,-3,-10>, <-13,-3,10>, <-6.5,-3,6.5> }
		triangle { <-13,0,10>, <-6.5,0,6.5>, <6.5,0,6.5> }
		triangle { <6.5,0,6.5>, <13,0,10>, <-13,0,10> }
		triangle { <-6.5,0,-6.5>, <-6.5,0,6.5>, <-13,0,10> }
		triangle { <-13,0,10>, <-13,0,-10>, <-6.5,0,-6.5> }
		triangle { <6.5,0,-6.5>, <-6.5,0,-6.5>, <-13,0,-10> }
		triangle { <-13,0,-10>, <13,0,-10>, <6.5,0,-6.5> }
		triangle { <6.5,0,6.5>, <6.5,0,-6.5>, <13,0,-10> }
		triangle { <13,0,-10>, <13,0,10>, <6.5,0,6.5> }
// front plate
		triangle { <9,-3,-12>, <-9,-3,-12>, <-13,-3,-10> }
		triangle { <-13,-3,-10>, <13,-3,-10>, <9,-3,-12> }
		triangle { <9,-3,-12>, <9,0,-12>, <-9,0,-12> }
		triangle { <-9,0,-12>, <-9,-3,-12>, <9,-3,-12> }
		triangle { <9,0,-12>, <9,0,-10>, <-9,0,-10> }
		triangle { <-9,0,-10>, <-9,0,-12>, <9,0,-12> }
// left
		triangle { <0,29,-10>, <3,29,-10>, <0,9.3,-10> }
		triangle { <0,9.3,-10>, <3,29,-10>, <15.5,32,-10> }
		triangle { <15.5,32,-10>, <15.5,29,-10>, <0,9.3,-10> }
		triangle { <3,29,-10>, <2.121,29.879,-10>, <4,32,-10> }
		triangle { <4,32,-10>, <15.5,32,-10>, <3,29,-10> }
		triangle { <15.5,32,-12>, <15.5,32,-10>, <4,32,-10> }
		triangle { <4,32,-10>, <4,32,-12.5>, <15.5,32,-12> }
		triangle { <3,29,-13>, <15.5,29,-12.5>, <15.5,32,-12> }
		triangle { <15.5,32,-12>, <4,32,-12.5>, <3,29,-13> }
		triangle { <4,32,-12.5>, <2.121,29.879,-13>, <3,29,-13> }
		triangle { <2.121,29.879,-10>, <2.121,29.879,-13>, <4,32,-12.5> }
		triangle { <4,32,-12.5>, <4,32,-10>, <2.121,29.879,-10> }
	}
	object { _1_dash_8ndis_dot_dat matrix <0,-3,0,0,0,-1,3,0,0,0,32,-10> }
// BFC INVERTNEXT
	object { _1_dash_8cyli_dot_dat matrix <0,-3,0,0,0,-3,3,0,0,0,32,-10> }
	object { _1_dash_8ndis_dot_dat matrix <0,-3,0,0,0,1,3,0,0,0,32,-13> }
	object { _1_dash_4disc_dot_dat matrix <3,0,0,0,0,-1,0,3,0,15.5,29,-10> }
	mesh {
		triangle { <0,9.3,-10>, <15.5,29,-10>, <18.5,29,-10> }
		triangle { <18.5,29,-10>, <2.5,7,-10>, <0,9.3,-10> }
		triangle { <18.5,29,-10>, <8,8,-10>, <2.5,7,-10> }
		triangle { <8,8,-10>, <18.5,29,-10>, <13.516,0,-10> }
		triangle { <13.516,0,-10>, <9,0,-10>, <8,8,-10> }
		triangle { <9,-3,-12>, <13,-3,-10>, <13,-3,-12.5> }
		triangle { <13,-3,-12.5>, <9,-3,-13>, <9,-3,-12> }
		triangle { <15.114,9.3,-12.5>, <13,-3,-12.5>, <13,-3,-10> }
		triangle { <13,-3,-10>, <15.114,9.3,-12>, <15.114,9.3,-12.5> }
		triangle { <13,-3,-10>, <18.5,29,-10>, <18.5,29,-12> }
		triangle { <18.5,29,-12>, <15.114,9.3,-12>, <13,-3,-10> }
	}
	object { _1_dash_4cyli_dot_dat matrix <3,0,0,0,0,-2,0,3,0,15.5,29,-10> }
	mesh {
		triangle { <9,-3,-12>, <9,-3,-13>, <9,0,-13.511> }
		triangle { <9,0,-13.511>, <9,0,-12>, <9,-3,-12> }
		triangle { <9,0,-10>, <9,0,-13.511>, <8,8,-15> }
		triangle { <8,8,-15>, <8,8,-10>, <9,0,-10> }
		triangle { <8,8,-10>, <8,8,-14.5>, <2.5,7,-15.582> }
		triangle { <2.5,7,-15.582>, <2.5,7,-10>, <8,8,-10> }
		triangle { <2.5,7,-10>, <2.5,7,-15.582>, <0,9.3,-16> }
		triangle { <0,9.3,-16>, <0,9.3,-10>, <2.5,7,-10> }
		triangle { <13,-3,-12.5>, <9,0,-13.511>, <9,-3,-13> }
		triangle { <8,8,-15>, <9,0,-13.511>, <13,-3,-12.5> }
		triangle { <15.114,9.3,-12.5>, <8,8,-15>, <13,-3,-12.5> }
		triangle { <8,8,-14.5>, <8,8,-15>, <15.114,9.3,-12.5> }
		triangle { <15.114,9.3,-12.5>, <15.114,9.3,-12>, <8,8,-14.5> }
	}
	object { _1_dash_4con0_dot_dat matrix <3,0,0,0,0,-0.5,0,3,0,15.5,29,-12> }
	mesh {
		triangle { <18.5,29,-12>, <15.5,29,-12.5>, <15.114,9.3,-12> }
		triangle { <15.5,29,-12.5>, <8,8,-14.5>, <15.114,9.3,-12> }
		triangle { <2.5,7,-15.582>, <8,8,-14.5>, <15.5,29,-12.5> }
		triangle { <15.5,29,-12.5>, <0,9.3,-16>, <2.5,7,-15.582> }
		triangle { <15.5,29,-12.5>, <3,29,-13>, <0,9.3,-16> }
		triangle { <3,29,-13>, <0,29,-13>, <0,9.3,-16> }
// right
		triangle { <0,29,-10>, <0,9.3,-10>, <-3,29,-10> }
		triangle { <-15.5,29,-10>, <-15.5,32,-10>, <-3,29,-10> }
		triangle { <-3,29,-10>, <0,9.3,-10>, <-15.5,29,-10> }
		triangle { <-15.5,32,-10>, <-4,32,-10>, <-2.121,29.879,-10> }
		triangle { <-2.121,29.879,-10>, <-3,29,-10>, <-15.5,32,-10> }
		triangle { <-4,32,-12.5>, <-4,32,-10>, <-15.5,32,-10> }
		triangle { <-15.5,32,-10>, <-15.5,32,-12>, <-4,32,-12.5> }
		triangle { <-15.5,32,-12>, <-15.5,29,-12.5>, <-3,29,-13> }
		triangle { <-3,29,-13>, <-4,32,-12.5>, <-15.5,32,-12> }
		triangle { <-4,32,-12.5>, <-3,29,-13>, <-2.121,29.879,-13> }
		triangle { <-4,32,-10>, <-4,32,-12.5>, <-2.121,29.879,-13> }
		triangle { <-2.121,29.879,-13>, <-2.121,29.879,-10>, <-4,32,-10> }
	}
	object { _1_dash_8ndis_dot_dat matrix <0,-3,0,0,0,-1,-3,0,0,0,32,-10> }
// BFC INVERTNEXT
	object { _1_dash_8cyli_dot_dat matrix <0,-3,0,0,0,-3,-3,0,0,0,32,-10> }
	object { _1_dash_8ndis_dot_dat matrix <0,-3,0,0,0,1,-3,0,0,0,32,-13> }
	object { _1_dash_4disc_dot_dat matrix <-3,0,0,0,0,-1,0,3,0,-15.5,29,-10> }
	mesh {
		triangle { <-2.5,7,-10>, <-18.5,29,-10>, <-15.5,29,-10> }
		triangle { <-15.5,29,-10>, <0,9.3,-10>, <-2.5,7,-10> }
		triangle { <-18.5,29,-10>, <-2.5,7,-10>, <-8,8,-10> }
		triangle { <-9,0,-10>, <-13.516,0,-10>, <-18.5,29,-10> }
		triangle { <-18.5,29,-10>, <-8,8,-10>, <-9,0,-10> }
		triangle { <-9,-3,-13>, <-13,-3,-12.5>, <-13,-3,-10> }
		triangle { <-13,-3,-10>, <-9,-3,-12>, <-9,-3,-13> }
		triangle { <-15.114,9.3,-12>, <-13,-3,-10>, <-13,-3,-12.5> }
		triangle { <-13,-3,-12.5>, <-15.114,9.3,-12.5>, <-15.114,9.3,-12> }
		triangle { <-15.114,9.3,-12>, <-18.5,29,-12>, <-18.5,29,-10> }
		triangle { <-18.5,29,-10>, <-13,-3,-10>, <-15.114,9.3,-12> }
	}
	object { _1_dash_4cyli_dot_dat matrix <-3,0,0,0,0,-2,0,3,0,-15.5,29,-10> }
	mesh {
		triangle { <-9,0,-12>, <-9,0,-13.511>, <-9,-3,-13> }
		triangle { <-9,-3,-13>, <-9,-3,-12>, <-9,0,-12> }
		triangle { <-8,8,-10>, <-8,8,-15>, <-9,0,-13.511> }
		triangle { <-9,0,-13.511>, <-9,0,-10>, <-8,8,-10> }
		triangle { <-2.5,7,-10>, <-2.5,7,-15.582>, <-8,8,-14.5> }
		triangle { <-8,8,-14.5>, <-8,8,-10>, <-2.5,7,-10> }
		triangle { <0,9.3,-10>, <0,9.3,-16>, <-2.5,7,-15.582> }
		triangle { <-2.5,7,-15.582>, <-2.5,7,-10>, <0,9.3,-10> }
		triangle { <-13,-3,-12.5>, <-9,-3,-13>, <-9,0,-13.511> }
		triangle { <-8,8,-15>, <-13,-3,-12.5>, <-9,0,-13.511> }
		triangle { <-15.114,9.3,-12.5>, <-13,-3,-12.5>, <-8,8,-15> }
		triangle { <-15.114,9.3,-12>, <-15.114,9.3,-12.5>, <-8,8,-15> }
		triangle { <-8,8,-15>, <-8,8,-14.5>, <-15.114,9.3,-12> }
	}
	object { _1_dash_4con0_dot_dat matrix <-3,0,0,0,0,-0.5,0,3,0,-15.5,29,-12> }
	mesh {
		triangle { <-18.5,29,-12>, <-15.114,9.3,-12>, <-15.5,29,-12.5> }
		triangle { <-15.5,29,-12.5>, <-15.114,9.3,-12>, <-8,8,-14.5> }
		triangle { <-15.5,29,-12.5>, <-8,8,-14.5>, <-2.5,7,-15.582> }
		triangle { <-2.5,7,-15.582>, <0,9.3,-16>, <-15.5,29,-12.5> }
		triangle { <-15.5,29,-12.5>, <0,9.3,-16>, <-3,29,-13> }
		triangle { <-3,29,-13>, <0,9.3,-16>, <0,29,-13> }
// back plate
		triangle { <-13,-3,12.5>, <13,-3,12.5>, <13,-3,10> }
		triangle { <13,-3,10>, <-13,-3,10>, <-13,-3,12.5> }
		triangle { <-10.5,-3,13.5>, <10.5,-3,13.5>, <13,-3,12.5> }
		triangle { <13,-3,12.5>, <-13,-3,12.5>, <-10.5,-3,13.5> }
		triangle { <13,-3,10>, <13,-3,12.5>, <18.5,29,12.5> }
		triangle { <18.5,29,12.5>, <18.5,29,10>, <13,-3,10> }
		triangle { <-16,32,10>, <16,32,10>, <16,32,12.5> }
		triangle { <16,32,12.5>, <-16,32,12.5>, <-16,32,10> }
		triangle { <-13,-3,12.5>, <-13,-3,10>, <-18.5,29,10> }
		triangle { <-18.5,29,10>, <-18.5,29,12.5>, <-13,-3,12.5> }
	}
	object { _1_dash_4cyli_dot_dat matrix <2.5,0,0,0,0,2.5,0,3,0,16,29,10> }
	object { _1_dash_4disc_dot_dat matrix <2.5,0,0,0,0,1,0,3,0,16,29,10> }
	object { _1_dash_4disc_dot_dat matrix <2.5,0,0,0,0,-1,0,3,0,16,29,12.5> }
	object { _1_dash_4cyli_dot_dat matrix <-2.5,0,0,0,0,2.5,0,3,0,-16,29,10> }
	object { _1_dash_4disc_dot_dat matrix <-2.5,0,0,0,0,1,0,3,0,-16,29,10> }
	object { _1_dash_4disc_dot_dat matrix <-2.5,0,0,0,0,-1,0,3,0,-16,29,12.5> }
	mesh {
		triangle { <-13.516,0,10>, <13.516,0,10>, <18.5,29,10> }
		triangle { <18.5,29,10>, <-18.5,29,10>, <-13.516,0,10> }
		triangle { <16,32,10>, <-16,32,10>, <-16,29,10> }
		triangle { <-16,29,10>, <16,29,10>, <16,32,10> }
		triangle { <-16,32,12.5>, <16,32,12.5>, <16,29,12.5> }
		triangle { <16,29,12.5>, <-16,29,12.5>, <-16,32,12.5> }
		triangle { <12.5,20.5,15>, <-12.5,20.5,15>, <-18.5,29,12.5> }
		triangle { <-18.5,29,12.5>, <18.5,29,12.5>, <12.5,20.5,15> }
		triangle { <18.5,29,12.5>, <13,-3,12.5>, <10.5,-3,13.5> }
		triangle { <-13,-3,12.5>, <-18.5,29,12.5>, <-10.5,-3,13.5> }
		triangle { <12.5,20.5,15>, <18.5,29,12.5>, <10.5,-3,13.5> }
		triangle { <10.5,-3,13.5>, <10,7.5,15>, <12.5,20.5,15> }
		triangle { <-10.5,-3,13.5>, <-18.5,29,12.5>, <-12.5,20.5,15> }
		triangle { <-12.5,20.5,15>, <-10,7.5,15>, <-10.5,-3,13.5> }
		triangle { <10.5,-3,13.5>, <-10.5,-3,13.5>, <-10,7.5,15> }
		triangle { <-10,7.5,15>, <10,7.5,15>, <10.5,-3,13.5> }
		triangle { <-12.5,20.5,15>, <12.5,20.5,15>, <10,7.5,15> }
		triangle { <10,7.5,15>, <-10,7.5,15>, <-12.5,20.5,15> }
// shoulder detail
		triangle { <13,-3,10>, <24,-3,10>, <24,-3,5.49> }
		triangle { <24,-3,5.49>, <13,-3,5.49>, <13,-3,10> }
		triangle { <13,-3,4.118>, <24,-3,4.118>, <24,-3,0.686> }
		triangle { <24,-3,0.686>, <13,-3,0.686>, <13,-3,4.118> }
		triangle { <24,-3,-0.686>, <24,-3,-4.118>, <13,-3,-4.118> }
		triangle { <13,-3,-4.118>, <13,-3,-0.686>, <24,-3,-0.686> }
		triangle { <13,-3,-5.49>, <24,-3,-5.49>, <24,-3,-10> }
		triangle { <24,-3,-10>, <13,-3,-10>, <13,-3,-5.49> }
	}
	object { rect_dot_dat matrix <0,0.5,0,-1,0,0,0,0,0.6863,13,-2.5,0> }
	object { rect_dot_dat matrix <0,0.5,0,-1,0,0,0,0,0.6863,13,-2.5,4.804> }
	object { rect_dot_dat matrix <0,0.5,0,-1,0,0,0,0,0.6863,13,-2.5,-4.804> }
	mesh {
		triangle { <23.423,-2,-0.686>, <13,-2,-0.686>, <13,-2,0.686> }
		triangle { <13,-2,0.686>, <23.423,-2,0.686>, <23.423,-2,-0.686> }
		triangle { <23.423,-2,0.686>, <13,-2,0.686>, <13,-3,0.686> }
		triangle { <13,-3,0.686>, <24,-3,0.686>, <23.423,-2,0.686> }
		triangle { <13,-3,-0.686>, <13,-2,-0.686>, <23.423,-2,-0.686> }
		triangle { <23.423,-2,-0.686>, <24,-3,-0.686>, <13,-3,-0.686> }
		triangle { <23.423,-2,-5.49>, <13,-2,-5.49>, <13,-2,-4.118> }
		triangle { <13,-2,-4.118>, <23.423,-2,-4.118>, <23.423,-2,-5.49> }
		triangle { <23.423,-2,-4.118>, <13,-2,-4.118>, <13,-3,-4.118> }
		triangle { <13,-3,-4.118>, <24,-3,-4.118>, <23.423,-2,-4.118> }
		triangle { <13,-3,-5.49>, <13,-2,-5.49>, <23.423,-2,-5.49> }
		triangle { <23.423,-2,-5.49>, <24,-3,-5.49>, <13,-3,-5.49> }
		triangle { <23.423,-2,4.118>, <13,-2,4.118>, <13,-2,5.49> }
		triangle { <13,-2,5.49>, <23.423,-2,5.49>, <23.423,-2,4.118> }
		triangle { <13,-3,4.118>, <13,-2,4.118>, <23.423,-2,4.118> }
		triangle { <23.423,-2,4.118>, <24,-3,4.118>, <13,-3,4.118> }
		triangle { <23.423,-2,5.49>, <13,-2,5.49>, <13,-3,5.49> }
		triangle { <13,-3,5.49>, <24,-3,5.49>, <23.423,-2,5.49> }
		triangle { <22.268,0,-10>, <13.516,0,-10>, <13,-3,-10> }
		triangle { <13,-3,-10>, <24,-3,-10>, <22.268,0,-10> }
		triangle { <13,-3,10>, <13.516,0,10>, <22.268,0,10> }
		triangle { <22.268,0,10>, <24,-3,10>, <13,-3,10> }
		triangle { <22.268,0,-10>, <22.268,0,10>, <13,0,10> }
		triangle { <13,0,10>, <13,0,-10>, <22.268,0,-10> }
		triangle { <-13,-3,-10>, <-24,-3,-10>, <-24,-3,-5.49> }
		triangle { <-24,-3,-5.49>, <-13,-3,-5.49>, <-13,-3,-10> }
		triangle { <-13,-3,-4.118>, <-24,-3,-4.118>, <-24,-3,-0.686> }
		triangle { <-24,-3,-0.686>, <-13,-3,-0.686>, <-13,-3,-4.118> }
		triangle { <-24,-3,0.686>, <-24,-3,4.118>, <-13,-3,4.118> }
		triangle { <-13,-3,4.118>, <-13,-3,0.686>, <-24,-3,0.686> }
		triangle { <-13,-3,5.49>, <-24,-3,5.49>, <-24,-3,10> }
		triangle { <-24,-3,10>, <-13,-3,10>, <-13,-3,5.49> }
	}
	object { rect_dot_dat matrix <0,0.5,0,1,0,0,0,0,-0.6863,-13,-2.5,0> }
	object { rect_dot_dat matrix <0,0.5,0,1,0,0,0,0,-0.6863,-13,-2.5,-4.804> }
	object { rect_dot_dat matrix <0,0.5,0,1,0,0,0,0,-0.6863,-13,-2.5,4.804> }
	mesh {
		triangle { <-23.423,-2,0.686>, <-13,-2,0.686>, <-13,-2,-0.686> }
		triangle { <-13,-2,-0.686>, <-23.423,-2,-0.686>, <-23.423,-2,0.686> }
		triangle { <-23.423,-2,-0.686>, <-13,-2,-0.686>, <-13,-3,-0.686> }
		triangle { <-13,-3,-0.686>, <-24,-3,-0.686>, <-23.423,-2,-0.686> }
		triangle { <-13,-3,0.686>, <-13,-2,0.686>, <-23.423,-2,0.686> }
		triangle { <-23.423,-2,0.686>, <-24,-3,0.686>, <-13,-3,0.686> }
		triangle { <-23.423,-2,5.49>, <-13,-2,5.49>, <-13,-2,4.118> }
		triangle { <-13,-2,4.118>, <-23.423,-2,4.118>, <-23.423,-2,5.49> }
		triangle { <-23.423,-2,4.118>, <-13,-2,4.118>, <-13,-3,4.118> }
		triangle { <-13,-3,4.118>, <-24,-3,4.118>, <-23.423,-2,4.118> }
		triangle { <-13,-3,5.49>, <-13,-2,5.49>, <-23.423,-2,5.49> }
		triangle { <-23.423,-2,5.49>, <-24,-3,5.49>, <-13,-3,5.49> }
		triangle { <-23.423,-2,-4.118>, <-13,-2,-4.118>, <-13,-2,-5.49> }
		triangle { <-13,-2,-5.49>, <-23.423,-2,-5.49>, <-23.423,-2,-4.118> }
		triangle { <-13,-3,-4.118>, <-13,-2,-4.118>, <-23.423,-2,-4.118> }
		triangle { <-23.423,-2,-4.118>, <-24,-3,-4.118>, <-13,-3,-4.118> }
		triangle { <-23.423,-2,-5.49>, <-13,-2,-5.49>, <-13,-3,-5.49> }
		triangle { <-13,-3,-5.49>, <-24,-3,-5.49>, <-23.423,-2,-5.49> }
		triangle { <-22.268,0,10>, <-13.516,0,10>, <-13,-3,10> }
		triangle { <-13,-3,10>, <-24,-3,10>, <-22.268,0,10> }
		triangle { <-13,-3,-10>, <-13.516,0,-10>, <-22.268,0,-10> }
		triangle { <-22.268,0,-10>, <-24,-3,-10>, <-13,-3,-10> }
		triangle { <-22.268,0,10>, <-22.268,0,-10>, <-13,0,-10> }
		triangle { <-13,0,-10>, <-13,0,10>, <-22.268,0,10> }
// 
		triangle { <26,0.464,-10>, <24,-3,-10>, <24,-3,-5.49> }
		triangle { <24,-3,-5.49>, <26,0.464,-5.49>, <26,0.464,-10> }
		triangle { <26,0.464,-4.118>, <24,-3,-4.118>, <24,-3,-0.686> }
		triangle { <24,-3,-0.686>, <26,0.464,-0.686>, <26,0.464,-4.118> }
		triangle { <24,-3,0.686>, <24,-3,4.118>, <26,0.464,4.118> }
		triangle { <26,0.464,4.118>, <26,0.464,0.686>, <24,-3,0.686> }
		triangle { <26,0.464,5.49>, <24,-3,5.49>, <24,-3,10> }
		triangle { <24,-3,10>, <26,0.464,10>, <26,0.464,5.49> }
		triangle { <26.7,1.676,10>, <26.7,1.676,9.02>, <26,0.464,9.02> }
		triangle { <26,0.464,9.02>, <26,0.464,10>, <26.7,1.676,10> }
		triangle { <26.7,1.676,-9.02>, <26.7,1.676,-10>, <26,0.464,-10> }
		triangle { <26,0.464,-10>, <26,0.464,-9.02>, <26.7,1.676,-9.02> }
		triangle { <26,0.464,9.02>, <26.7,1.676,9.02>, <25.834,2.176,9.02> }
		triangle { <25.834,2.176,9.02>, <25.134,0.964,9.02>, <26,0.464,9.02> }
		triangle { <25.134,0.964,-9.02>, <25.834,2.176,-9.02>, <26.7,1.676,-9.02> }
		triangle { <26.7,1.676,-9.02>, <26,0.464,-9.02>, <25.134,0.964,-9.02> }
		triangle { <23.423,-2,0.686>, <25.134,0.964,0.686>, <25.134,0.964,-0.686> }
		triangle { <25.134,0.964,-0.686>, <23.423,-2,-0.686>, <23.423,-2,0.686> }
		triangle { <25.134,0.964,0.686>, <23.423,-2,0.686>, <24,-3,0.686> }
		triangle { <24,-3,0.686>, <26,0.464,0.686>, <25.134,0.964,0.686> }
		triangle { <23.423,-2,-0.686>, <25.134,0.964,-0.686>, <26,0.464,-0.686> }
		triangle { <26,0.464,-0.686>, <24,-3,-0.686>, <23.423,-2,-0.686> }
		triangle { <25.834,2.176,0.686>, <27.834,5.64,0.686>, <27.834,5.64,-0.686> }
		triangle { <27.834,5.64,-0.686>, <25.834,2.176,-0.686>, <25.834,2.176,0.686> }
		triangle { <28.534,6.853,0.686>, <30.534,10.317,0.686>, <30.534,10.317,-0.686> }
		triangle { <30.534,10.317,-0.686>, <28.534,6.853,-0.686>, <28.534,6.853,0.686> }
		triangle { <31.234,11.529,0.686>, <32.566,13.836,0.686>, <32.566,13.836,-0.686> }
		triangle { <32.566,13.836,-0.686>, <31.234,11.529,-0.686>, <31.234,11.529,0.686> }
		triangle { <32.1,11.029,0.686>, <33.432,13.336,0.686>, <32.566,13.836,0.686> }
		triangle { <32.566,13.836,0.686>, <31.234,11.529,0.686>, <32.1,11.029,0.686> }
		triangle { <33.432,13.336,-0.686>, <32.1,11.029,-0.686>, <31.234,11.529,-0.686> }
		triangle { <31.234,11.529,-0.686>, <32.566,13.836,-0.686>, <33.432,13.336,-0.686> }
		triangle { <32.566,13.836,-0.686>, <32.566,13.836,0.686>, <32.634,13.954,0> }
		triangle { <32.566,13.836,0.686>, <33.432,13.336,0.686>, <33.5,13.454,0> }
		triangle { <33.5,13.454,0>, <32.634,13.954,0>, <32.566,13.836,0.686> }
		triangle { <33.432,13.336,-0.686>, <32.566,13.836,-0.686>, <32.634,13.954,0> }
		triangle { <32.634,13.954,0>, <33.5,13.454,0>, <33.432,13.336,-0.686> }
		triangle { <32.1,11.029,0.686>, <32.1,11.029,4.118>, <33.158,12.861,3.444> }
		triangle { <33.158,12.861,3.444>, <33.432,13.336,0.686>, <32.1,11.029,0.686> }
		triangle { <32.933,12.471,4.118>, <33.158,12.861,3.444>, <32.1,11.029,4.118> }
		triangle { <32.1,11.029,4.118>, <31.234,11.529,4.118>, <32.067,12.971,4.118> }
		triangle { <32.067,12.971,4.118>, <32.933,12.471,4.118>, <32.1,11.029,4.118> }
		triangle { <33.158,12.861,-3.444>, <32.1,11.029,-4.118>, <32.1,11.029,-0.686> }
		triangle { <32.1,11.029,-0.686>, <33.432,13.336,-0.686>, <33.158,12.861,-3.444> }
		triangle { <33.158,12.861,-3.444>, <32.933,12.471,-4.118>, <32.1,11.029,-4.118> }
		triangle { <31.234,11.529,-4.118>, <32.1,11.029,-4.118>, <32.933,12.471,-4.118> }
		triangle { <32.933,12.471,-4.118>, <32.067,12.971,-4.118>, <31.234,11.529,-4.118> }
	}
	object { box5_dot_dat matrix <1,1.732,0,0.866,-0.5,0,0,0,1.7157,26.834,3.908,2.402> }
	object { box5_dot_dat matrix <1,1.732,0,0.866,-0.5,0,0,0,1.7157,26.834,3.908,-2.402> }
	object { box5_dot_dat matrix <1,1.732,0,0.866,-0.5,0,0,0,1.7157,29.534,8.585,2.402> }
	object { box5_dot_dat matrix <1,1.732,0,0.866,-0.5,0,0,0,1.7157,29.534,8.585,-2.402> }
	mesh {
		triangle { <23.423,-2,5.49>, <25.134,0.964,5.49>, <25.134,0.964,4.118> }
		triangle { <25.134,0.964,4.118>, <23.423,-2,4.118>, <23.423,-2,5.49> }
		triangle { <23.423,-2,5.49>, <24,-3,5.49>, <26,0.464,5.49> }
		triangle { <26,0.464,5.49>, <25.134,0.964,5.49>, <23.423,-2,5.49> }
		triangle { <23.423,-2,4.118>, <25.134,0.964,4.118>, <26,0.464,4.118> }
		triangle { <26,0.464,4.118>, <24,-3,4.118>, <23.423,-2,4.118> }
		triangle { <25.834,2.176,5.49>, <27.834,5.64,5.49>, <27.834,5.64,4.118> }
		triangle { <27.834,5.64,4.118>, <25.834,2.176,4.118>, <25.834,2.176,5.49> }
		triangle { <28.534,6.853,5.49>, <30.534,10.317,5.49>, <30.534,10.317,4.118> }
		triangle { <30.534,10.317,4.118>, <28.534,6.853,4.118>, <28.534,6.853,5.49> }
		triangle { <25.134,0.964,-4.118>, <25.134,0.964,-5.49>, <23.423,-2,-5.49> }
		triangle { <23.423,-2,-5.49>, <23.423,-2,-4.118>, <25.134,0.964,-4.118> }
		triangle { <26,0.464,-5.49>, <24,-3,-5.49>, <23.423,-2,-5.49> }
		triangle { <23.423,-2,-5.49>, <25.134,0.964,-5.49>, <26,0.464,-5.49> }
		triangle { <23.423,-2,-4.118>, <24,-3,-4.118>, <26,0.464,-4.118> }
		triangle { <26,0.464,-4.118>, <25.134,0.964,-4.118>, <23.423,-2,-4.118> }
	}
	object { rect_dot_dat matrix <1,1.732,0,0,0,0.9804,0.433,-0.25,0,27.267,3.658,5.49> }
	object { rect_dot_dat matrix <1,1.732,0,0,0,0.9804,0.433,-0.25,0,29.967,8.335,5.49> }
	mesh {
		triangle { <25.834,2.176,-4.118>, <27.834,5.64,-4.118>, <27.834,5.64,-5.49> }
		triangle { <27.834,5.64,-5.49>, <25.834,2.176,-5.49>, <25.834,2.176,-4.118> }
		triangle { <28.534,6.853,-4.118>, <30.534,10.317,-4.118>, <30.534,10.317,-5.49> }
		triangle { <30.534,10.317,-5.49>, <28.534,6.853,-5.49>, <28.534,6.853,-4.118> }
	}
	object { rect_dot_dat matrix <1,1.732,0,0,0,-0.9804,0.433,-0.25,0,27.267,3.658,-5.49> }
	object { rect_dot_dat matrix <1,1.732,0,0,0,-0.9804,0.433,-0.25,0,29.967,8.335,-5.49> }
	mesh {
		triangle { <22.268,0,10>, <26.402,7.16,10>, <29,5.66,10> }
		triangle { <29,5.66,10>, <24,-3,10>, <22.268,0,10> }
		triangle { <29,5.66,-10>, <26.402,7.16,-10>, <22.268,0,-10> }
		triangle { <22.268,0,-10>, <24,-3,-10>, <29,5.66,-10> }
		triangle { <22.268,0,10>, <22.268,0,-10>, <26.402,7.16,-10> }
		triangle { <26.402,7.16,-10>, <26.402,7.16,10>, <22.268,0,10> }
	}
	object { _2_dash_4disc_dot_dat matrix <0,0,-10,0.866,-0.5,0,5,8.66,0,26.402,7.16,0> }
	object { _2_dash_4cyli_dot_dat matrix <0,0,-10,-2.598,1.5,0,5,8.66,0,29,5.66,0> }
	object { _1_dash_4ring9_dot_dat matrix <0,0,-1,-0.866,0.5,0,0.5,0.866,0,29,5.66,0> }
	object { _1_dash_4ring9_dot_dat matrix <0,0,1,-0.866,0.5,0,0.5,0.866,0,29,5.66,0> }
	mesh {
		triangle { <25.834,2.176,9.02>, <25.834,2.176,-9.02>, <25.134,0.964,-9.02> }
		triangle { <25.134,0.964,-9.02>, <25.134,0.964,9.02>, <25.834,2.176,9.02> }
	}
	object { rect_dot_dat matrix <0,0,1.7157,-0.5,-0.866,0,-0.433,0.25,0,25.567,0.714,2.402> }
	object { rect_dot_dat matrix <0,0,1.7157,-0.5,-0.866,0,-0.433,0.25,0,25.567,0.714,-2.402> }
	object { rect_dot_dat matrix <0,0,1.7647,-0.5,-0.866,0,-0.433,0.25,0,25.567,0.714,7.255> }
	object { rect_dot_dat matrix <0,0,1.7647,-0.5,-0.866,0,-0.433,0.25,0,25.567,0.714,-7.255> }
	object { rect_dot_dat matrix <0,0,1.7647,0.5,0.866,0,-0.433,0.25,0,26.267,1.926,7.255> }
	object { rect_dot_dat matrix <0,0,1.7647,0.5,0.866,0,-0.433,0.25,0,26.267,1.926,-7.255> }
	mesh {
		triangle { <28.7,5.14,-10>, <26.7,1.676,-10>, <26.7,1.676,-5.49> }
		triangle { <26.7,1.676,-5.49>, <28.7,5.14,-5.49>, <28.7,5.14,-10> }
		triangle { <28.7,5.14,5.49>, <26.7,1.676,5.49>, <26.7,1.676,10> }
		triangle { <26.7,1.676,10>, <28.7,5.14,10>, <28.7,5.14,5.49> }
		triangle { <28.7,5.14,9.02>, <29,5.66,9.02>, <28.134,6.16,9.02> }
		triangle { <28.134,6.16,9.02>, <27.834,5.64,9.02>, <28.7,5.14,9.02> }
		triangle { <29,5.66,-9.02>, <28.7,5.14,-9.02>, <27.834,5.64,-9.02> }
		triangle { <27.834,5.64,-9.02>, <28.134,6.16,-9.02>, <29,5.66,-9.02> }
		triangle { <29,5.66,9.02>, <28.7,5.14,9.02>, <28.7,5.14,10> }
		triangle { <28.7,5.14,10>, <29,5.66,10>, <29,5.66,9.02> }
		triangle { <28.7,5.14,-9.02>, <29,5.66,-9.02>, <29,5.66,-10> }
		triangle { <29,5.66,-10>, <28.7,5.14,-10>, <28.7,5.14,-9.02> }
		triangle { <29,5.66,9.02>, <29.4,6.353,8.841>, <28.534,6.853,8.841> }
		triangle { <28.534,6.853,8.841>, <28.134,6.16,9.02>, <29,5.66,9.02> }
		triangle { <29.4,6.353,-8.841>, <29,5.66,-9.02>, <28.134,6.16,-9.02> }
		triangle { <28.134,6.16,-9.02>, <28.534,6.853,-8.841>, <29.4,6.353,-8.841> }
		triangle { <28.134,6.16,9.02>, <28.134,6.16,-9.02>, <27.834,5.64,-9.02> }
		triangle { <27.834,5.64,-9.02>, <27.834,5.64,9.02>, <28.134,6.16,9.02> }
		triangle { <28.534,6.853,8.841>, <28.534,6.853,-8.841>, <28.134,6.16,-9.02> }
		triangle { <28.134,6.16,-9.02>, <28.134,6.16,9.02>, <28.534,6.853,8.841> }
	}
	object { rect_dot_dat matrix <0,0,1.7647,-0.5,-0.866,0,-0.433,0.25,0,28.267,5.39,7.255> }
	object { rect_dot_dat matrix <0,0,1.7647,-0.5,-0.866,0,-0.433,0.25,0,28.267,5.39,-7.255> }
	mesh {
		triangle { <29.4,6.353,5.49>, <28.534,6.853,5.49>, <28.534,6.853,8.841> }
		triangle { <28.534,6.853,8.841>, <29.4,6.353,8.841>, <29.4,6.353,5.49> }
		triangle { <28.534,6.853,-5.49>, <29.4,6.353,-5.49>, <29.4,6.353,-8.841> }
		triangle { <29.4,6.353,-8.841>, <28.534,6.853,-8.841>, <28.534,6.853,-5.49> }
		triangle { <31.4,9.817,-7.409>, <30.722,8.643,-8.315>, <29.4,6.353,-5.49> }
		triangle { <29.4,6.353,-5.49>, <31.4,9.817,-5.49>, <31.4,9.817,-7.409> }
		triangle { <29.4,6.353,-8.841>, <29.4,6.353,-5.49>, <30.722,8.643,-8.315> }
		triangle { <31.4,9.817,5.49>, <29.4,6.353,5.49>, <30.722,8.643,8.315> }
		triangle { <30.722,8.643,8.315>, <31.4,9.817,7.409>, <31.4,9.817,5.49> }
		triangle { <29.4,6.353,5.49>, <29.4,6.353,8.841>, <30.722,8.643,8.315> }
		triangle { <31.4,9.817,5.49>, <31.4,9.817,7.409>, <30.534,10.317,7.409> }
		triangle { <30.534,10.317,7.409>, <30.534,10.317,5.49>, <31.4,9.817,5.49> }
		triangle { <31.4,9.817,-7.409>, <31.4,9.817,-5.49>, <30.534,10.317,-5.49> }
		triangle { <30.534,10.317,-5.49>, <30.534,10.317,-7.409>, <31.4,9.817,-7.409> }
		triangle { <31.234,11.529,6.473>, <31.234,11.529,-6.473>, <30.534,10.317,-7.409> }
		triangle { <30.534,10.317,-7.409>, <30.534,10.317,7.409>, <31.234,11.529,6.473> }
		triangle { <31.4,9.817,7.409>, <32.1,11.029,6.473>, <31.234,11.529,6.473> }
		triangle { <31.234,11.529,6.473>, <30.534,10.317,7.409>, <31.4,9.817,7.409> }
		triangle { <32.1,11.029,-6.473>, <31.4,9.817,-7.409>, <30.534,10.317,-7.409> }
		triangle { <30.534,10.317,-7.409>, <31.234,11.529,-6.473>, <32.1,11.029,-6.473> }
		triangle { <32.1,11.029,6.473>, <32.1,11.029,5.49>, <31.234,11.529,5.49> }
		triangle { <31.234,11.529,5.49>, <31.234,11.529,6.473>, <32.1,11.029,6.473> }
		triangle { <32.1,11.029,-6.473>, <31.234,11.529,-6.473>, <31.234,11.529,-5.49> }
		triangle { <31.234,11.529,-5.49>, <32.1,11.029,-5.49>, <32.1,11.029,-6.473> }
		triangle { <32.1,11.029,5.49>, <32.1,11.029,6.473>, <32.182,11.171,6.364> }
		triangle { <32.182,11.171,6.364>, <32.474,11.677,5.49>, <32.1,11.029,5.49> }
		triangle { <32.182,11.171,-6.364>, <32.1,11.029,-6.473>, <32.1,11.029,-5.49> }
		triangle { <32.1,11.029,-5.49>, <32.474,11.677,-5.49>, <32.182,11.171,-6.364> }
		triangle { <32.1,11.029,5.49>, <32.474,11.677,5.49>, <31.608,12.177,5.49> }
		triangle { <31.608,12.177,5.49>, <31.234,11.529,5.49>, <32.1,11.029,5.49> }
		triangle { <32.1,11.029,-5.49>, <31.234,11.529,-5.49>, <31.608,12.177,-5.49> }
		triangle { <31.608,12.177,-5.49>, <32.474,11.677,-5.49>, <32.1,11.029,-5.49> }
		triangle { <31.608,12.177,5.49>, <32.474,11.677,5.49>, <32.933,12.471,4.118> }
		triangle { <32.933,12.471,4.118>, <32.067,12.971,4.118>, <31.608,12.177,5.49> }
		triangle { <32.474,11.677,-5.49>, <31.608,12.177,-5.49>, <32.067,12.971,-4.118> }
		triangle { <32.067,12.971,-4.118>, <32.933,12.471,-4.118>, <32.474,11.677,-5.49> }
		triangle { <31.608,12.177,5.49>, <32.067,12.971,4.118>, <31.234,11.529,4.118> }
		triangle { <31.234,11.529,4.118>, <31.234,11.529,5.49>, <31.608,12.177,5.49> }
		triangle { <32.067,12.971,-4.118>, <31.608,12.177,-5.49>, <31.234,11.529,-5.49> }
		triangle { <31.234,11.529,-5.49>, <31.234,11.529,-4.118>, <32.067,12.971,-4.118> }
	}
	object { rect_dot_dat matrix <0,0,1.7157,0.5,0.866,0,-0.433,0.25,0,31.667,11.279,2.402> }
	object { rect_dot_dat matrix <0,0,1.7157,0.5,0.866,0,-0.433,0.25,0,31.667,11.279,-2.402> }
	mesh {
		triangle { <-26,0.464,10>, <-24,-3,10>, <-24,-3,5.49> }
		triangle { <-24,-3,5.49>, <-26,0.464,5.49>, <-26,0.464,10> }
		triangle { <-26,0.464,4.118>, <-24,-3,4.118>, <-24,-3,0.686> }
		triangle { <-24,-3,0.686>, <-26,0.464,0.686>, <-26,0.464,4.118> }
		triangle { <-24,-3,-0.686>, <-24,-3,-4.118>, <-26,0.464,-4.118> }
		triangle { <-26,0.464,-4.118>, <-26,0.464,-0.686>, <-24,-3,-0.686> }
		triangle { <-26,0.464,-5.49>, <-24,-3,-5.49>, <-24,-3,-10> }
		triangle { <-24,-3,-10>, <-26,0.464,-10>, <-26,0.464,-5.49> }
		triangle { <-26.7,1.676,-10>, <-26.7,1.676,-9.02>, <-26,0.464,-9.02> }
		triangle { <-26,0.464,-9.02>, <-26,0.464,-10>, <-26.7,1.676,-10> }
		triangle { <-26.7,1.676,9.02>, <-26.7,1.676,10>, <-26,0.464,10> }
		triangle { <-26,0.464,10>, <-26,0.464,9.02>, <-26.7,1.676,9.02> }
		triangle { <-26,0.464,-9.02>, <-26.7,1.676,-9.02>, <-25.834,2.176,-9.02> }
		triangle { <-25.834,2.176,-9.02>, <-25.134,0.964,-9.02>, <-26,0.464,-9.02> }
		triangle { <-25.134,0.964,9.02>, <-25.834,2.176,9.02>, <-26.7,1.676,9.02> }
		triangle { <-26.7,1.676,9.02>, <-26,0.464,9.02>, <-25.134,0.964,9.02> }
		triangle { <-23.423,-2,-0.686>, <-25.134,0.964,-0.686>, <-25.134,0.964,0.686> }
		triangle { <-25.134,0.964,0.686>, <-23.423,-2,0.686>, <-23.423,-2,-0.686> }
		triangle { <-25.134,0.964,-0.686>, <-23.423,-2,-0.686>, <-24,-3,-0.686> }
		triangle { <-24,-3,-0.686>, <-26,0.464,-0.686>, <-25.134,0.964,-0.686> }
		triangle { <-23.423,-2,0.686>, <-25.134,0.964,0.686>, <-26,0.464,0.686> }
		triangle { <-26,0.464,0.686>, <-24,-3,0.686>, <-23.423,-2,0.686> }
		triangle { <-25.834,2.176,-0.686>, <-27.834,5.64,-0.686>, <-27.834,5.64,0.686> }
		triangle { <-27.834,5.64,0.686>, <-25.834,2.176,0.686>, <-25.834,2.176,-0.686> }
		triangle { <-28.534,6.853,-0.686>, <-30.534,10.317,-0.686>, <-30.534,10.317,0.686> }
		triangle { <-30.534,10.317,0.686>, <-28.534,6.853,0.686>, <-28.534,6.853,-0.686> }
		triangle { <-31.234,11.529,-0.686>, <-32.566,13.836,-0.686>, <-32.566,13.836,0.686> }
		triangle { <-32.566,13.836,0.686>, <-31.234,11.529,0.686>, <-31.234,11.529,-0.686> }
		triangle { <-32.1,11.029,-0.686>, <-33.432,13.336,-0.686>, <-32.566,13.836,-0.686> }
		triangle { <-32.566,13.836,-0.686>, <-31.234,11.529,-0.686>, <-32.1,11.029,-0.686> }
		triangle { <-33.432,13.336,0.686>, <-32.1,11.029,0.686>, <-31.234,11.529,0.686> }
		triangle { <-31.234,11.529,0.686>, <-32.566,13.836,0.686>, <-33.432,13.336,0.686> }
		triangle { <-32.566,13.836,0.686>, <-32.566,13.836,-0.686>, <-32.634,13.954,0> }
		triangle { <-32.566,13.836,-0.686>, <-33.432,13.336,-0.686>, <-33.5,13.454,0> }
		triangle { <-33.5,13.454,0>, <-32.634,13.954,0>, <-32.566,13.836,-0.686> }
		triangle { <-33.432,13.336,0.686>, <-32.566,13.836,0.686>, <-32.634,13.954,0> }
		triangle { <-32.634,13.954,0>, <-33.5,13.454,0>, <-33.432,13.336,0.686> }
		triangle { <-32.1,11.029,-0.686>, <-32.1,11.029,-4.118>, <-33.158,12.861,-3.444> }
		triangle { <-33.158,12.861,-3.444>, <-33.432,13.336,-0.686>, <-32.1,11.029,-0.686> }
		triangle { <-32.933,12.471,-4.118>, <-33.158,12.861,-3.444>, <-32.1,11.029,-4.118> }
		triangle { <-32.1,11.029,-4.118>, <-31.234,11.529,-4.118>, <-32.067,12.971,-4.118> }
		triangle { <-32.067,12.971,-4.118>, <-32.933,12.471,-4.118>, <-32.1,11.029,-4.118> }
		triangle { <-33.158,12.861,3.444>, <-32.1,11.029,4.118>, <-32.1,11.029,0.686> }
		triangle { <-32.1,11.029,0.686>, <-33.432,13.336,0.686>, <-33.158,12.861,3.444> }
		triangle { <-33.158,12.861,3.444>, <-32.933,12.471,4.118>, <-32.1,11.029,4.118> }
		triangle { <-31.234,11.529,4.118>, <-32.1,11.029,4.118>, <-32.933,12.471,4.118> }
		triangle { <-32.933,12.471,4.118>, <-32.067,12.971,4.118>, <-31.234,11.529,4.118> }
	}
	object { box5_dot_dat matrix <-1,1.732,0,-0.866,-0.5,0,0,0,-1.7157,-26.834,3.908,-2.402> }
	object { box5_dot_dat matrix <-1,1.732,0,-0.866,-0.5,0,0,0,-1.7157,-26.834,3.908,2.402> }
	object { box5_dot_dat matrix <-1,1.732,0,-0.866,-0.5,0,0,0,-1.7157,-29.534,8.585,-2.402> }
	object { box5_dot_dat matrix <-1,1.732,0,-0.866,-0.5,0,0,0,-1.7157,-29.534,8.585,2.402> }
	mesh {
		triangle { <-23.423,-2,-5.49>, <-25.134,0.964,-5.49>, <-25.134,0.964,-4.118> }
		triangle { <-25.134,0.964,-4.118>, <-23.423,-2,-4.118>, <-23.423,-2,-5.49> }
		triangle { <-23.423,-2,-5.49>, <-24,-3,-5.49>, <-26,0.464,-5.49> }
		triangle { <-26,0.464,-5.49>, <-25.134,0.964,-5.49>, <-23.423,-2,-5.49> }
		triangle { <-23.423,-2,-4.118>, <-25.134,0.964,-4.118>, <-26,0.464,-4.118> }
		triangle { <-26,0.464,-4.118>, <-24,-3,-4.118>, <-23.423,-2,-4.118> }
		triangle { <-25.834,2.176,-5.49>, <-27.834,5.64,-5.49>, <-27.834,5.64,-4.118> }
		triangle { <-27.834,5.64,-4.118>, <-25.834,2.176,-4.118>, <-25.834,2.176,-5.49> }
		triangle { <-28.534,6.853,-5.49>, <-30.534,10.317,-5.49>, <-30.534,10.317,-4.118> }
		triangle { <-30.534,10.317,-4.118>, <-28.534,6.853,-4.118>, <-28.534,6.853,-5.49> }
		triangle { <-25.134,0.964,4.118>, <-25.134,0.964,5.49>, <-23.423,-2,5.49> }
		triangle { <-23.423,-2,5.49>, <-23.423,-2,4.118>, <-25.134,0.964,4.118> }
		triangle { <-26,0.464,5.49>, <-24,-3,5.49>, <-23.423,-2,5.49> }
		triangle { <-23.423,-2,5.49>, <-25.134,0.964,5.49>, <-26,0.464,5.49> }
		triangle { <-23.423,-2,4.118>, <-24,-3,4.118>, <-26,0.464,4.118> }
		triangle { <-26,0.464,4.118>, <-25.134,0.964,4.118>, <-23.423,-2,4.118> }
	}
	object { rect_dot_dat matrix <-1,1.732,0,0,0,-0.9804,-0.433,-0.25,0,-27.267,3.658,-5.49> }
	object { rect_dot_dat matrix <-1,1.732,0,0,0,-0.9804,-0.433,-0.25,0,-29.967,8.335,-5.49> }
	mesh {
		triangle { <-25.834,2.176,4.118>, <-27.834,5.64,4.118>, <-27.834,5.64,5.49> }
		triangle { <-27.834,5.64,5.49>, <-25.834,2.176,5.49>, <-25.834,2.176,4.118> }
		triangle { <-28.534,6.853,4.118>, <-30.534,10.317,4.118>, <-30.534,10.317,5.49> }
		triangle { <-30.534,10.317,5.49>, <-28.534,6.853,5.49>, <-28.534,6.853,4.118> }
	}
	object { rect_dot_dat matrix <-1,1.732,0,0,0,0.9804,-0.433,-0.25,0,-27.267,3.658,5.49> }
	object { rect_dot_dat matrix <-1,1.732,0,0,0,0.9804,-0.433,-0.25,0,-29.967,8.335,5.49> }
	mesh {
		triangle { <-22.268,0,-10>, <-26.402,7.16,-10>, <-29,5.66,-10> }
		triangle { <-29,5.66,-10>, <-24,-3,-10>, <-22.268,0,-10> }
		triangle { <-29,5.66,10>, <-26.402,7.16,10>, <-22.268,0,10> }
		triangle { <-22.268,0,10>, <-24,-3,10>, <-29,5.66,10> }
		triangle { <-22.268,0,-10>, <-22.268,0,10>, <-26.402,7.16,10> }
		triangle { <-26.402,7.16,10>, <-26.402,7.16,-10>, <-22.268,0,-10> }
	}
	object { _2_dash_4disc_dot_dat matrix <0,0,10,-0.866,-0.5,0,-5,8.66,0,-26.402,7.16,0> }
	object { _2_dash_4cyli_dot_dat matrix <0,0,10,2.598,1.5,0,-5,8.66,0,-29,5.66,0> }
	object { _1_dash_4ring9_dot_dat matrix <0,0,1,0.866,0.5,0,-0.5,0.866,0,-29,5.66,0> }
	object { _1_dash_4ring9_dot_dat matrix <0,0,-1,0.866,0.5,0,-0.5,0.866,0,-29,5.66,0> }
	mesh {
		triangle { <-25.834,2.176,-9.02>, <-25.834,2.176,9.02>, <-25.134,0.964,9.02> }
		triangle { <-25.134,0.964,9.02>, <-25.134,0.964,-9.02>, <-25.834,2.176,-9.02> }
	}
	object { rect_dot_dat matrix <0,0,-1.7157,0.5,-0.866,0,0.433,0.25,0,-25.567,0.714,-2.402> }
	object { rect_dot_dat matrix <0,0,-1.7157,0.5,-0.866,0,0.433,0.25,0,-25.567,0.714,2.402> }
	object { rect_dot_dat matrix <0,0,-1.7647,0.5,-0.866,0,0.433,0.25,0,-25.567,0.714,-7.255> }
	object { rect_dot_dat matrix <0,0,-1.7647,0.5,-0.866,0,0.433,0.25,0,-25.567,0.714,7.255> }
	object { rect_dot_dat matrix <0,0,-1.7647,-0.5,0.866,0,0.433,0.25,0,-26.267,1.926,-7.255> }
	object { rect_dot_dat matrix <0,0,-1.7647,-0.5,0.866,0,0.433,0.25,0,-26.267,1.926,7.255> }
	mesh {
		triangle { <-28.7,5.14,10>, <-26.7,1.676,10>, <-26.7,1.676,5.49> }
		triangle { <-26.7,1.676,5.49>, <-28.7,5.14,5.49>, <-28.7,5.14,10> }
		triangle { <-28.7,5.14,-5.49>, <-26.7,1.676,-5.49>, <-26.7,1.676,-10> }
		triangle { <-26.7,1.676,-10>, <-28.7,5.14,-10>, <-28.7,5.14,-5.49> }
		triangle { <-28.7,5.14,-9.02>, <-29,5.66,-9.02>, <-28.134,6.16,-9.02> }
		triangle { <-28.134,6.16,-9.02>, <-27.834,5.64,-9.02>, <-28.7,5.14,-9.02> }
		triangle { <-29,5.66,9.02>, <-28.7,5.14,9.02>, <-27.834,5.64,9.02> }
		triangle { <-27.834,5.64,9.02>, <-28.134,6.16,9.02>, <-29,5.66,9.02> }
		triangle { <-29,5.66,-9.02>, <-28.7,5.14,-9.02>, <-28.7,5.14,-10> }
		triangle { <-28.7,5.14,-10>, <-29,5.66,-10>, <-29,5.66,-9.02> }
		triangle { <-28.7,5.14,9.02>, <-29,5.66,9.02>, <-29,5.66,10> }
		triangle { <-29,5.66,10>, <-28.7,5.14,10>, <-28.7,5.14,9.02> }
		triangle { <-29,5.66,-9.02>, <-29.4,6.353,-8.841>, <-28.534,6.853,-8.841> }
		triangle { <-28.534,6.853,-8.841>, <-28.134,6.16,-9.02>, <-29,5.66,-9.02> }
		triangle { <-29.4,6.353,8.841>, <-29,5.66,9.02>, <-28.134,6.16,9.02> }
		triangle { <-28.134,6.16,9.02>, <-28.534,6.853,8.841>, <-29.4,6.353,8.841> }
		triangle { <-28.134,6.16,-9.02>, <-28.134,6.16,9.02>, <-27.834,5.64,9.02> }
		triangle { <-27.834,5.64,9.02>, <-27.834,5.64,-9.02>, <-28.134,6.16,-9.02> }
		triangle { <-28.534,6.853,-8.841>, <-28.534,6.853,8.841>, <-28.134,6.16,9.02> }
		triangle { <-28.134,6.16,9.02>, <-28.134,6.16,-9.02>, <-28.534,6.853,-8.841> }
	}
	object { rect_dot_dat matrix <0,0,-1.7647,0.5,-0.866,0,0.433,0.25,0,-28.267,5.39,-7.255> }
	object { rect_dot_dat matrix <0,0,-1.7647,0.5,-0.866,0,0.433,0.25,0,-28.267,5.39,7.255> }
	mesh {
		triangle { <-29.4,6.353,-5.49>, <-28.534,6.853,-5.49>, <-28.534,6.853,-8.841> }
		triangle { <-28.534,6.853,-8.841>, <-29.4,6.353,-8.841>, <-29.4,6.353,-5.49> }
		triangle { <-28.534,6.853,5.49>, <-29.4,6.353,5.49>, <-29.4,6.353,8.841> }
		triangle { <-29.4,6.353,8.841>, <-28.534,6.853,8.841>, <-28.534,6.853,5.49> }
		triangle { <-31.4,9.817,7.409>, <-30.722,8.643,8.315>, <-29.4,6.353,5.49> }
		triangle { <-29.4,6.353,5.49>, <-31.4,9.817,5.49>, <-31.4,9.817,7.409> }
		triangle { <-29.4,6.353,8.841>, <-29.4,6.353,5.49>, <-30.722,8.643,8.315> }
		triangle { <-31.4,9.817,-5.49>, <-29.4,6.353,-5.49>, <-30.722,8.643,-8.315> }
		triangle { <-30.722,8.643,-8.315>, <-31.4,9.817,-7.409>, <-31.4,9.817,-5.49> }
		triangle { <-29.4,6.353,-5.49>, <-29.4,6.353,-8.841>, <-30.722,8.643,-8.315> }
		triangle { <-31.4,9.817,-5.49>, <-31.4,9.817,-7.409>, <-30.534,10.317,-7.409> }
		triangle { <-30.534,10.317,-7.409>, <-30.534,10.317,-5.49>, <-31.4,9.817,-5.49> }
		triangle { <-31.4,9.817,7.409>, <-31.4,9.817,5.49>, <-30.534,10.317,5.49> }
		triangle { <-30.534,10.317,5.49>, <-30.534,10.317,7.409>, <-31.4,9.817,7.409> }
		triangle { <-31.234,11.529,-6.473>, <-31.234,11.529,6.473>, <-30.534,10.317,7.409> }
		triangle { <-30.534,10.317,7.409>, <-30.534,10.317,-7.409>, <-31.234,11.529,-6.473> }
		triangle { <-31.4,9.817,-7.409>, <-32.1,11.029,-6.473>, <-31.234,11.529,-6.473> }
		triangle { <-31.234,11.529,-6.473>, <-30.534,10.317,-7.409>, <-31.4,9.817,-7.409> }
		triangle { <-32.1,11.029,6.473>, <-31.4,9.817,7.409>, <-30.534,10.317,7.409> }
		triangle { <-30.534,10.317,7.409>, <-31.234,11.529,6.473>, <-32.1,11.029,6.473> }
		triangle { <-32.1,11.029,-6.473>, <-32.1,11.029,-5.49>, <-31.234,11.529,-5.49> }
		triangle { <-31.234,11.529,-5.49>, <-31.234,11.529,-6.473>, <-32.1,11.029,-6.473> }
		triangle { <-32.1,11.029,6.473>, <-31.234,11.529,6.473>, <-31.234,11.529,5.49> }
		triangle { <-31.234,11.529,5.49>, <-32.1,11.029,5.49>, <-32.1,11.029,6.473> }
		triangle { <-32.1,11.029,-5.49>, <-32.1,11.029,-6.473>, <-32.182,11.171,-6.364> }
		triangle { <-32.182,11.171,-6.364>, <-32.474,11.677,-5.49>, <-32.1,11.029,-5.49> }
		triangle { <-32.182,11.171,6.364>, <-32.1,11.029,6.473>, <-32.1,11.029,5.49> }
		triangle { <-32.1,11.029,5.49>, <-32.474,11.677,5.49>, <-32.182,11.171,6.364> }
		triangle { <-32.1,11.029,-5.49>, <-32.474,11.677,-5.49>, <-31.608,12.177,-5.49> }
		triangle { <-31.608,12.177,-5.49>, <-31.234,11.529,-5.49>, <-32.1,11.029,-5.49> }
		triangle { <-32.1,11.029,5.49>, <-31.234,11.529,5.49>, <-31.608,12.177,5.49> }
		triangle { <-31.608,12.177,5.49>, <-32.474,11.677,5.49>, <-32.1,11.029,5.49> }
		triangle { <-31.608,12.177,-5.49>, <-32.474,11.677,-5.49>, <-32.933,12.471,-4.118> }
		triangle { <-32.933,12.471,-4.118>, <-32.067,12.971,-4.118>, <-31.608,12.177,-5.49> }
		triangle { <-32.474,11.677,5.49>, <-31.608,12.177,5.49>, <-32.067,12.971,4.118> }
		triangle { <-32.067,12.971,4.118>, <-32.933,12.471,4.118>, <-32.474,11.677,5.49> }
		triangle { <-31.608,12.177,-5.49>, <-32.067,12.971,-4.118>, <-31.234,11.529,-4.118> }
		triangle { <-31.234,11.529,-4.118>, <-31.234,11.529,-5.49>, <-31.608,12.177,-5.49> }
		triangle { <-32.067,12.971,4.118>, <-31.608,12.177,5.49>, <-31.234,11.529,5.49> }
		triangle { <-31.234,11.529,5.49>, <-31.234,11.529,4.118>, <-32.067,12.971,4.118> }
	}
	object { rect_dot_dat matrix <0,0,-1.7157,-0.5,0.866,0,0.433,0.25,0,-31.667,11.279,-2.402> }
	object { rect_dot_dat matrix <0,0,-1.7157,-0.5,0.866,0,0.433,0.25,0,-31.667,11.279,2.402> }
// Added lines/Condlines
}
#end
#end // ifndef (_30174_dot_dat)


//// Model armor_001_samurai.ldr
#ifndef (armor__001__samurai_dot_ldr)
#declare armor__001__samurai_dot_ldr = object {
// Untitled
// Name: armor_001_samurai.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 8  0 -15 0  1 0 0  0 1 0  0 0 1 30174.dat
	object {
		_30174_dot_dat
		matrix <1-L3SW/68,0,0,0,1-L3SW/35,0,0,0,1-L3SW/31,0,L3SW/2.41379,L3SW/-62>
		matrix <1,0,0,0,1,0,0,0,1,0,-15,0>
		material { L3Color8 }
	}
}
#end // ifndef (armor__001__samurai_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-34,-18,-16>;
#declare L3ModelBBoxMax = <34,17,15>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-0.5,-0.5>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <68,35,31>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject armor_001_samurai.ldr
object { armor__001__samurai_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            16            19
// POV Equivs:       -            10 (63%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
