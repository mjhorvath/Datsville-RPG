// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:08 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_011_revolver.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_011_revolver.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_011_revolver.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 2-4disc.dat
#ifndef (_2_dash_4disc_dot_dat)
#declare _2_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { box { <-2,-1,0>, <2,1,2> } } }
#end // ifndef (_2_dash_4disc_dot_dat)


//// Part 30132.dat
#ifndef (_30132_dot_dat)
#declare _30132_dot_dat = #if (L3Quality = 0) box { <-6,-28.026,-25.65>, <6,6,5.464> } #else union {
// Minifig Gun Revolver
// Name: 30132.dat
// Author: Franklin W. Cain [fwcain]
// !LDRAW_ORG Part UPDATE 2000-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !CATEGORY Minifig Accessory
// !KEYWORDS weapon, firearm, pistol, western, wild west
// !KEYWORDS cowboy, six-gun, six-shooter, colt .45, equalizer, peacemaker
// !KEYWORDS cavalry, indian, injun
// !KEYWORDS adventurers
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2007-06-06 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// Please note that I measured the angle between the grip
// and the rest of the pistol as 60 (120) degrees.
// grip
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-6,0,0,0,4,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,6,0,0,0,4,0,0,0> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,-6,0> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,6,0> }
// 
// bend
// 
	mesh {
		triangle { <0,-6,-4>, <-1.531,-6,-3.696>, <-1.531,-6.152,-3.736> }
		triangle { <0,-6,-4>, <1.531,-6,-3.696>, <1.531,-6.152,-3.736> }
		triangle { <-1.531,-6,-3.696>, <-2.828,-6,-2.828>, <-2.828,-6.586,-2.985> }
		triangle { <-2.828,-6.586,-2.985>, <-1.531,-6.152,-3.736>, <-1.531,-6,-3.696> }
		triangle { <1.531,-6,-3.696>, <2.828,-6,-2.828>, <2.828,-6.586,-2.985> }
		triangle { <2.828,-6.586,-2.985>, <1.531,-6.152,-3.736>, <1.531,-6,-3.696> }
		triangle { <-2.828,-6,-2.828>, <-3.696,-6,-1.531>, <-3.696,-7.235,-1.862> }
		triangle { <-3.696,-7.235,-1.862>, <-2.828,-6.586,-2.985>, <-2.828,-6,-2.828> }
		triangle { <2.828,-6,-2.828>, <3.696,-6,-1.531>, <3.696,-7.235,-1.862> }
		triangle { <3.696,-7.235,-1.862>, <2.828,-6.586,-2.985>, <2.828,-6,-2.828> }
		triangle { <-3.696,-6,-1.531>, <-4,-6,0>, <-4,-8,-0.536> }
		triangle { <-4,-8,-0.536>, <-3.696,-7.235,-1.862>, <-3.696,-6,-1.531> }
		triangle { <3.696,-6,-1.531>, <4,-6,0>, <4,-8,-0.536> }
		triangle { <4,-8,-0.536>, <3.696,-7.235,-1.862>, <3.696,-6,-1.531> }
		triangle { <-4,-6,0>, <-3.696,-6,1.531>, <-3.696,-8.765,0.79> }
		triangle { <-3.696,-8.765,0.79>, <-4,-8,-0.536>, <-4,-6,0> }
		triangle { <4,-6,0>, <3.696,-6,1.531>, <3.696,-8.765,0.79> }
		triangle { <3.696,-8.765,0.79>, <4,-8,-0.536>, <4,-6,0> }
		triangle { <-3.696,-6,1.531>, <-2.828,-6,2.828>, <-2.828,-9.414,1.913> }
		triangle { <-2.828,-9.414,1.913>, <-3.696,-8.765,0.79>, <-3.696,-6,1.531> }
		triangle { <3.696,-6,1.531>, <2.828,-6,2.828>, <2.828,-9.414,1.913> }
		triangle { <2.828,-9.414,1.913>, <3.696,-8.765,0.79>, <3.696,-6,1.531> }
		triangle { <-2.828,-6,2.828>, <-1.531,-6,3.696>, <-1.531,-9.848,2.664> }
		triangle { <-1.531,-9.848,2.664>, <-2.828,-9.414,1.913>, <-2.828,-6,2.828> }
		triangle { <2.828,-6,2.828>, <1.531,-6,3.696>, <1.531,-9.848,2.664> }
		triangle { <1.531,-9.848,2.664>, <2.828,-9.414,1.913>, <2.828,-6,2.828> }
		triangle { <-1.531,-6,3.696>, <0,-6,4>, <0,-10,2.928> }
		triangle { <0,-10,2.928>, <-1.531,-9.848,2.664>, <-1.531,-6,3.696> }
		triangle { <1.531,-6,3.696>, <0,-6,4>, <0,-10,2.928> }
		triangle { <0,-10,2.928>, <1.531,-9.848,2.664>, <1.531,-6,3.696> }
// 
		triangle { <0,-6,-4>, <-1.531,-6.152,-3.736>, <-1.531,-6.264,-3.848> }
		triangle { <0,-6,-4>, <1.531,-6.152,-3.736>, <1.531,-6.264,-3.848> }
		triangle { <-1.531,-6.152,-3.736>, <-2.828,-6.586,-2.985>, <-2.828,-7.015,-3.414> }
		triangle { <-2.828,-7.015,-3.414>, <-1.531,-6.264,-3.848>, <-1.531,-6.152,-3.736> }
		triangle { <1.531,-6.152,-3.736>, <2.828,-6.586,-2.985>, <2.828,-7.015,-3.414> }
		triangle { <2.828,-7.015,-3.414>, <1.531,-6.264,-3.848>, <1.531,-6.152,-3.736> }
		triangle { <-2.828,-6.586,-2.985>, <-3.696,-7.235,-1.862>, <-3.696,-8.138,-2.765> }
		triangle { <-3.696,-8.138,-2.765>, <-2.828,-7.015,-3.414>, <-2.828,-6.586,-2.985> }
		triangle { <2.828,-6.586,-2.985>, <3.696,-7.235,-1.862>, <3.696,-8.138,-2.765> }
		triangle { <3.696,-8.138,-2.765>, <2.828,-7.015,-3.414>, <2.828,-6.586,-2.985> }
		triangle { <-3.696,-7.235,-1.862>, <-4,-8,-0.536>, <-4,-9.464,-2> }
		triangle { <-4,-9.464,-2>, <-3.696,-8.138,-2.765>, <-3.696,-7.235,-1.862> }
		triangle { <3.696,-7.235,-1.862>, <4,-8,-0.536>, <4,-9.464,-2> }
		triangle { <4,-9.464,-2>, <3.696,-8.138,-2.765>, <3.696,-7.235,-1.862> }
		triangle { <-4,-8,-0.536>, <-3.696,-8.765,0.79>, <-3.696,-10.79,-1.235> }
		triangle { <-3.696,-10.79,-1.235>, <-4,-9.464,-2>, <-4,-8,-0.536> }
		triangle { <4,-8,-0.536>, <3.696,-8.765,0.79>, <3.696,-10.79,-1.235> }
		triangle { <3.696,-10.79,-1.235>, <4,-9.464,-2>, <4,-8,-0.536> }
		triangle { <-3.696,-8.765,0.79>, <-2.828,-9.414,1.913>, <-2.828,-11.913,-0.586> }
		triangle { <-2.828,-11.913,-0.586>, <-3.696,-10.79,-1.235>, <-3.696,-8.765,0.79> }
		triangle { <3.696,-8.765,0.79>, <2.828,-9.414,1.913>, <2.828,-11.913,-0.586> }
		triangle { <2.828,-11.913,-0.586>, <3.696,-10.79,-1.235>, <3.696,-8.765,0.79> }
		triangle { <-2.828,-9.414,1.913>, <-1.531,-9.848,2.664>, <-1.531,-12.664,-0.152> }
		triangle { <-1.531,-12.664,-0.152>, <-2.828,-11.913,-0.586>, <-2.828,-9.414,1.913> }
		triangle { <2.828,-9.414,1.913>, <1.531,-9.848,2.664>, <1.531,-12.664,-0.152> }
		triangle { <1.531,-12.664,-0.152>, <2.828,-11.913,-0.586>, <2.828,-9.414,1.913> }
		triangle { <-1.531,-9.848,2.664>, <0,-10,2.928>, <0,-12.928,0> }
		triangle { <0,-12.928,0>, <-1.531,-12.664,-0.152>, <-1.531,-9.848,2.664> }
		triangle { <1.531,-9.848,2.664>, <0,-10,2.928>, <0,-12.928,0> }
		triangle { <0,-12.928,0>, <1.531,-12.664,-0.152>, <1.531,-9.848,2.664> }
// 
// 
// 
// cylinder/drum
// 
	}
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,0.5,0.866,0,-5.196,3,0,-9.464,-2> }
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,-0.5,-0.866,0,-5.196,3,0,-9.464,-2> }
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,0.5,0.866,0,-5.196,3,0,-9.964,-2.866> }
// 
	mesh {
		triangle { <0,-4.768,-5.866>, <-2.296,-5.164,-5.638>, <-2.296,-9.164,-12.566> }
		triangle { <-2.296,-9.164,-12.566>, <0,-8.768,-12.794>, <0,-4.768,-5.866> }
		triangle { <0,-4.768,-5.866>, <2.296,-5.164,-5.638>, <2.296,-9.164,-12.566> }
		triangle { <2.296,-9.164,-12.566>, <0,-8.768,-12.794>, <0,-4.768,-5.866> }
		triangle { <0,-15.16,0.134>, <-2.296,-14.764,-0.094>, <-2.296,-18.764,-7.023> }
		triangle { <-2.296,-18.764,-7.023>, <0,-19.16,-6.794>, <0,-15.16,0.134> }
		triangle { <0,-15.16,0.134>, <2.296,-14.764,-0.094>, <2.296,-18.764,-7.023> }
		triangle { <2.296,-18.764,-7.023>, <0,-19.16,-6.794>, <0,-15.16,0.134> }
		triangle { <-2.296,-5.164,-5.638>, <-4.243,-6.29,-4.988>, <-4.243,-10.29,-11.915> }
		triangle { <-4.243,-10.29,-11.915>, <-2.296,-9.164,-12.566>, <-2.296,-5.164,-5.638> }
		triangle { <2.296,-5.164,-5.638>, <4.243,-6.29,-4.988>, <4.243,-10.29,-11.915> }
		triangle { <4.243,-10.29,-11.915>, <2.296,-9.164,-12.566>, <2.296,-5.164,-5.638> }
		triangle { <-2.296,-14.764,-0.094>, <-4.243,-13.638,-0.744>, <-4.243,-17.638,-7.673> }
		triangle { <-4.243,-17.638,-7.673>, <-2.296,-18.764,-7.023>, <-2.296,-14.764,-0.094> }
		triangle { <2.296,-14.764,-0.094>, <4.243,-13.638,-0.744>, <4.243,-17.638,-7.673> }
		triangle { <4.243,-17.638,-7.673>, <2.296,-18.764,-7.023>, <2.296,-14.764,-0.094> }
		triangle { <-5.543,-7.976,-4.014>, <-6,-9.964,-2.866>, <-6,-13.964,-9.794> }
		triangle { <-6,-13.964,-9.794>, <-5.543,-11.976,-10.942>, <-5.543,-7.976,-4.014> }
		triangle { <5.543,-7.976,-4.014>, <6,-9.964,-2.866>, <6,-13.964,-9.794> }
		triangle { <6,-13.964,-9.794>, <5.543,-11.976,-10.942>, <5.543,-7.976,-4.014> }
		triangle { <-5.543,-11.952,-1.718>, <-6,-9.964,-2.866>, <-6,-13.964,-9.794> }
		triangle { <-6,-13.964,-9.794>, <-5.543,-15.952,-8.646>, <-5.543,-11.952,-1.718> }
		triangle { <5.543,-11.952,-1.718>, <6,-9.964,-2.866>, <6,-13.964,-9.794> }
		triangle { <6,-13.964,-9.794>, <5.543,-15.952,-8.646>, <5.543,-11.952,-1.718> }
// 
		triangle { <-4.243,-6.29,-4.988>, <-4.893,-7.132,-4.501>, <-4.243,-6.79,-5.853> }
		triangle { <4.243,-6.29,-4.988>, <4.893,-7.132,-4.501>, <4.243,-6.79,-5.853> }
		triangle { <-4.243,-13.638,-0.744>, <-4.893,-12.796,-1.231>, <-4.243,-14.138,-1.61> }
		triangle { <4.243,-13.638,-0.744>, <4.893,-12.796,-1.231>, <4.243,-14.138,-1.61> }
		triangle { <-5.543,-7.976,-4.014>, <-4.893,-7.132,-4.501>, <-5.543,-8.476,-4.88> }
		triangle { <5.543,-7.976,-4.014>, <4.893,-7.132,-4.501>, <5.543,-8.476,-4.88> }
		triangle { <-5.543,-11.952,-1.718>, <-4.893,-12.796,-1.231>, <-5.543,-12.452,-2.584> }
		triangle { <5.543,-11.952,-1.718>, <4.893,-12.796,-1.231>, <5.543,-12.452,-2.584> }
// 
		triangle { <-4.893,-7.132,-4.501>, <-4.243,-6.79,-5.853>, <-4.078,-8.105,-5.094> }
		triangle { <4.893,-7.132,-4.501>, <4.243,-6.79,-5.853>, <4.078,-8.105,-5.094> }
		triangle { <-4.893,-12.796,-1.231>, <-4.243,-14.138,-1.61>, <-4.078,-12.823,-2.37> }
		triangle { <4.893,-12.796,-1.231>, <4.243,-14.138,-1.61>, <4.078,-12.823,-2.37> }
		triangle { <-4.893,-7.132,-4.501>, <-5.543,-8.476,-4.88>, <-4.078,-8.105,-5.094> }
		triangle { <4.893,-7.132,-4.501>, <5.543,-8.476,-4.88>, <4.078,-8.105,-5.094> }
		triangle { <-4.893,-12.796,-1.231>, <-5.543,-12.452,-2.584>, <-4.078,-12.823,-2.37> }
		triangle { <4.893,-12.796,-1.231>, <5.543,-12.452,-2.584>, <4.078,-12.823,-2.37> }
// 
		triangle { <-4.243,-6.79,-5.853>, <-4.078,-8.105,-5.094>, <-4.078,-11.605,-11.156> }
		triangle { <-4.078,-11.605,-11.156>, <-4.243,-10.29,-11.915>, <-4.243,-6.79,-5.853> }
		triangle { <4.243,-6.79,-5.853>, <4.078,-8.105,-5.094>, <4.078,-11.605,-11.156> }
		triangle { <4.078,-11.605,-11.156>, <4.243,-10.29,-11.915>, <4.243,-6.79,-5.853> }
		triangle { <-4.243,-14.138,-1.61>, <-4.078,-12.823,-2.37>, <-4.078,-16.323,-8.432> }
		triangle { <-4.078,-16.323,-8.432>, <-4.243,-17.638,-7.673>, <-4.243,-14.138,-1.61> }
		triangle { <4.243,-14.138,-1.61>, <4.078,-12.823,-2.37>, <4.078,-16.323,-8.432> }
		triangle { <4.078,-16.323,-8.432>, <4.243,-17.638,-7.673>, <4.243,-14.138,-1.61> }
		triangle { <-5.543,-8.476,-4.88>, <-4.078,-8.105,-5.094>, <-4.078,-11.605,-11.156> }
		triangle { <-4.078,-11.605,-11.156>, <-5.543,-11.976,-10.942>, <-5.543,-8.476,-4.88> }
		triangle { <5.543,-8.476,-4.88>, <4.078,-8.105,-5.094>, <4.078,-11.605,-11.156> }
		triangle { <4.078,-11.605,-11.156>, <5.543,-11.976,-10.942>, <5.543,-8.476,-4.88> }
		triangle { <-5.543,-12.452,-2.584>, <-4.078,-12.823,-2.37>, <-4.078,-16.323,-8.432> }
		triangle { <-4.078,-16.323,-8.432>, <-5.543,-15.952,-8.646>, <-5.543,-12.452,-2.584> }
		triangle { <5.543,-12.452,-2.584>, <4.078,-12.823,-2.37>, <4.078,-16.323,-8.432> }
		triangle { <4.078,-16.323,-8.432>, <5.543,-15.952,-8.646>, <5.543,-12.452,-2.584> }
// 
		triangle { <0,-13.964,-9.794>, <0,-8.768,-12.794>, <-2.296,-9.164,-12.566> }
		triangle { <0,-13.964,-9.794>, <0,-8.768,-12.794>, <2.296,-9.164,-12.566> }
		triangle { <0,-13.964,-9.794>, <0,-19.16,-6.794>, <-2.296,-18.764,-7.023> }
		triangle { <0,-13.964,-9.794>, <0,-19.16,-6.794>, <2.296,-18.764,-7.023> }
		triangle { <0,-13.964,-9.794>, <-2.296,-9.164,-12.566>, <-4.243,-10.29,-11.915> }
		triangle { <0,-13.964,-9.794>, <2.296,-9.164,-12.566>, <4.243,-10.29,-11.915> }
		triangle { <0,-13.964,-9.794>, <-2.296,-18.764,-7.023>, <-4.243,-17.638,-7.673> }
		triangle { <0,-13.964,-9.794>, <2.296,-18.764,-7.023>, <4.243,-17.638,-7.673> }
		triangle { <0,-13.964,-9.794>, <-5.543,-11.976,-10.942>, <-6,-13.964,-9.794> }
		triangle { <0,-13.964,-9.794>, <5.543,-11.976,-10.942>, <6,-13.964,-9.794> }
		triangle { <0,-13.964,-9.794>, <-5.543,-15.952,-8.646>, <-6,-13.964,-9.794> }
		triangle { <0,-13.964,-9.794>, <5.543,-15.952,-8.646>, <6,-13.964,-9.794> }
// 
		triangle { <0,-13.964,-9.794>, <-4.243,-10.29,-11.915>, <-4.078,-11.605,-11.156> }
		triangle { <0,-13.964,-9.794>, <4.243,-10.29,-11.915>, <4.078,-11.605,-11.156> }
		triangle { <0,-13.964,-9.794>, <-4.243,-17.638,-7.673>, <-4.078,-16.323,-8.432> }
		triangle { <0,-13.964,-9.794>, <4.243,-17.638,-7.673>, <4.078,-16.323,-8.432> }
		triangle { <0,-13.964,-9.794>, <-5.543,-11.976,-10.942>, <-4.078,-11.605,-11.156> }
		triangle { <0,-13.964,-9.794>, <5.543,-11.976,-10.942>, <4.078,-11.605,-11.156> }
		triangle { <0,-13.964,-9.794>, <-5.543,-15.952,-8.646>, <-4.078,-16.323,-8.432> }
		triangle { <0,-13.964,-9.794>, <5.543,-15.952,-8.646>, <4.078,-16.323,-8.432> }
// 
// 
// 
// 
// 
// 
// hammer
// 
		triangle { <-1,-12.928,0>, <-1,-14.392,5.464>, <1,-14.392,5.464> }
		triangle { <1,-14.392,5.464>, <1,-12.928,0>, <-1,-12.928,0> }
// 
		triangle { <-1,-12.928,0>, <-1,-14.392,5.464>, <-1,-10,2.928> }
		triangle { <1,-12.928,0>, <1,-14.392,5.464>, <1,-10,2.928> }
// 
		triangle { <-1,-14.392,5.464>, <-1,-10,2.928>, <1,-10,2.928> }
		triangle { <1,-10,2.928>, <1,-14.392,5.464>, <-1,-14.392,5.464> }
// 
// 
// 
// 
// 
// 
// 
// trigger
// 
	}
	object { _2_dash_4cyli_dot_dat matrix <0,1.5,2.598,-1,0,0,0,2.598,-1.5,0,-5.768,-7.598> }
	object { _2_dash_4cyli_dot_dat matrix <0,1.5,2.598,1,0,0,0,2.598,-1.5,0,-5.768,-7.598> }
// 
	object { _2_dash_4disc_dot_dat matrix <0,1.5,2.598,1,0,0,0,2.598,-1.5,-1,-5.768,-7.598> }
	object { _2_dash_4disc_dot_dat matrix <0,1.5,2.598,1,0,0,0,2.598,-1.5,1,-5.768,-7.598> }
// 
// 
// 
// 
// 
// barrel
// 
// 
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-8,-13.856,0,-3.464,2,0,-13.964,-9.794> }
// 
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,0.5,0.866,0,-3.464,2,0,-21.964,-23.65> }
// 
// front sight
// 
	mesh {
		triangle { <-1,-28.026,-20.15>, <-1,-23.928,-19.052>, <1,-23.928,-19.052> }
		triangle { <1,-23.928,-19.052>, <1,-28.026,-20.15>, <-1,-28.026,-20.15> }
// 
		triangle { <-1,-28.026,-20.15>, <-1,-23.928,-19.052>, <-1,-25.428,-21.65> }
		triangle { <1,-28.026,-20.15>, <1,-23.928,-19.052>, <1,-25.428,-21.65> }
// 
		triangle { <-1,-28.026,-20.15>, <-1,-25.428,-21.65>, <1,-25.428,-21.65> }
		triangle { <1,-25.428,-21.65>, <1,-28.026,-20.15>, <-1,-28.026,-20.15> }
// 
// 
// 
// 
// 
// 
	}
}
#end
#end // ifndef (_30132_dot_dat)


//// Model weapon_011_revolver.ldr
#ifndef (weapon__011__revolver_dot_ldr)
#declare weapon__011__revolver_dot_ldr = object {
// Untitled
// Name: weapon_011_revolver.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 7  -15 5 0  0 -0.5 -0.866025  0 0.866025 -0.5  1 0 0 30132.dat
	object {
		_30132_dot_dat
		matrix <1-L3SW/12,0,0,0,1-L3SW/34.026,0,0,0,1-L3SW/31.114,0,L3SW/-3.08962,L3SW/-3.08273>
		matrix <0,0,1,-0.5,0.866025,0,-0.866025,-0.5,0,-15,5,0>
		material { L3Color7 }
	}
}
#end // ifndef (weapon__011__revolver_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-22.732,-22.0032,-6>;
#declare L3ModelBBoxMax = <21.2265,23.0211,6>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <-0.75271,0.508966,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <43.9585,45.0244,12>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_011_revolver.ldr
object { weapon__011__revolver_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2             6             9
// POV Equivs:       -             4 (67%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
