// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:10 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_039_scimitar.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_039_scimitar.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_039_scimitar.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Primitive stud2.dat
#ifndef (stud2_dot_dat)
#declare stud2_dot_dat = 
#if (L3Quality >= 4)
union {
#end
	difference {
		cylinder { <0,0,0>, <0,-4,0>, 6 }
		cylinder { <0,1,0>, <0,-5,0>, 4 }
	}
#if (L3Quality >= 4)
	object { L3Logo scale 0.75 }
}
#end
#end // ifndef (stud2_dot_dat)


//// Primitive 4-4ring3.dat
#ifndef (_4_dash_4ring3_dot_dat)
#declare _4_dash_4ring3_dot_dat = disc { <0,0,0>, <0,1,0>, 4, 3 }
#end // ifndef (_4_dash_4ring3_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4ring1.dat
#ifndef (_4_dash_4ring1_dot_dat)
#declare _4_dash_4ring1_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 }
#end // ifndef (_4_dash_4ring1_dot_dat)


//// Primitive t04o3333.dat
#ifndef (t04o3333_dot_dat)
#declare t04o3333_dot_dat = torus {
	1, 3333/9999
	clipped_by {
		difference {
			box { <0,0,0>, <2,1,2> }
			cylinder { <0,0,0>, <0,1,0>, 1 open }
		}
	}
}
#end // ifndef (t04o3333_dot_dat)


//// Primitive stud2a.dat
#ifndef (stud2a_dot_dat)
#declare stud2a_dot_dat = 
#if (L3Quality >= 4)
union {
#end
	difference {
		cylinder { <0,0,0>, <0,-4,0>, 6 }
		cylinder { <0,1,0>, <0,-5,0>, 4 }
	}
#if (L3Quality >= 4)
	object { L3Logo scale 0.75 }
}
#end
#end // ifndef (stud2a_dot_dat)


//// Primitive rect2p.dat
#ifndef (rect2p_dot_dat)
#declare rect2p_dot_dat = object {
// Rectangle with 2 Parallel Edges
// Name: rect2p.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect2p_dot_dat)


//// Primitive 1-4ndis.dat
#ifndef (_1_dash_4ndis_dot_dat)
#declare _1_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <0,-1,0>, <1,1,1> } } }
#end // ifndef (_1_dash_4ndis_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4chrd.dat
#ifndef (_1_dash_4chrd_dot_dat)
#declare _1_dash_4chrd_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4chrd_dot_dat)


//// Primitive 1-4con6.dat
#ifndef (_1_dash_4con6_dot_dat)
#declare _1_dash_4con6_dot_dat = cone {
	<0,0,0>, 7, <0,1,0>, 6 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con6_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 5-8cyli.dat
#ifndef (_5_dash_8cyli_dot_dat)
#declare _5_dash_8cyli_dot_dat = object {
// Cylinder 0.625
// Name: 5-8cyli.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2005-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2004-04-22 [PTadmin] Official Update 2004-02
// !HISTORY 2004-12-11 [nielsk] Recreated using Primitive Generator, Edge lines fixed, BFC changed to CCW
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	mesh {
		triangle { <0.9239,1,0.3827>, <0.9239,0,0.3827>, <1,0,0> }
		triangle { <1,0,0>, <1,1,0>, <0.9239,1,0.3827> }
		triangle { <0.7071,1,0.7071>, <0.7071,0,0.7071>, <0.9239,0,0.3827> }
		triangle { <0.9239,0,0.3827>, <0.9239,1,0.3827>, <0.7071,1,0.7071> }
		triangle { <0.3827,1,0.9239>, <0.3827,0,0.9239>, <0.7071,0,0.7071> }
		triangle { <0.7071,0,0.7071>, <0.7071,1,0.7071>, <0.3827,1,0.9239> }
		triangle { <0,1,1>, <0,0,1>, <0.3827,0,0.9239> }
		triangle { <0.3827,0,0.9239>, <0.3827,1,0.9239>, <0,1,1> }
		triangle { <-0.3827,1,0.9239>, <-0.3827,0,0.9239>, <0,0,1> }
		triangle { <0,0,1>, <0,1,1>, <-0.3827,1,0.9239> }
		triangle { <-0.7071,1,0.7071>, <-0.7071,0,0.7071>, <-0.3827,0,0.9239> }
		triangle { <-0.3827,0,0.9239>, <-0.3827,1,0.9239>, <-0.7071,1,0.7071> }
		triangle { <-0.9239,1,0.3827>, <-0.9239,0,0.3827>, <-0.7071,0,0.7071> }
		triangle { <-0.7071,0,0.7071>, <-0.7071,1,0.7071>, <-0.9239,1,0.3827> }
		triangle { <-1,1,0>, <-1,0,0>, <-0.9239,0,0.3827> }
		triangle { <-0.9239,0,0.3827>, <-0.9239,1,0.3827>, <-1,1,0> }
		triangle { <-0.9239,1,-0.3827>, <-0.9239,0,-0.3827>, <-1,0,0> }
		triangle { <-1,0,0>, <-1,1,0>, <-0.9239,1,-0.3827> }
		triangle { <-0.7071,1,-0.7071>, <-0.7071,0,-0.7071>, <-0.9239,0,-0.3827> }
		triangle { <-0.9239,0,-0.3827>, <-0.9239,1,-0.3827>, <-0.7071,1,-0.7071> }
// 
	}
}
#end // ifndef (_5_dash_8cyli_dot_dat)


//// Primitive 1-8ring2.dat
#ifndef (_1_dash_8ring2_dot_dat)
#declare _1_dash_8ring2_dot_dat = disc {
	<0,0,0>, <0,1,0>, 3, 2
	clipped_by { plane { -z, 0 } plane { <-1,0,1>, 0 } }
}
#end // ifndef (_1_dash_8ring2_dot_dat)


//// Primitive 2-4ring2.dat
#ifndef (_2_dash_4ring2_dot_dat)
#declare _2_dash_4ring2_dot_dat = disc {
	<0,0,0>, <0,1,0>, 3, 2
	clipped_by { plane { -z, 0 } }
}
#end // ifndef (_2_dash_4ring2_dot_dat)


//// Part 43887.dat
#ifndef (_43887_dot_dat)
#declare _43887_dot_dat = #if (L3Quality = 0) box { <-8,-72,-18.196>, <8,38,29.5> } #else union {
// Minifig Sword Scimitar
// Name: 43887.dat
// Author: Andy Westrate [westrate]
// !LDRAW_ORG Part UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !HISTORY 2006-10-15 [WilliamH] Fixed tiny, tiny line issues
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
// pommel
	#if (L3Studs)
		object { stud2_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,34,0> }
	#end
	object { _4_dash_4ring3_dot_dat matrix <2,0,0,0,-1,0,0,0,2,0,34,0> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,-1,0,0,0,4,0,34,0> }
	object { _4_dash_4cyli_dot_dat matrix <8,0,0,0,4,0,0,0,8,0,30,0> }
	object { _4_dash_4ring1_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,30,0> }
// handle
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-3.1,0,0,0,4,0,7.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,7.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,3,0,29.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,7.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,3,0,0,0,-3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <3,0,0,0,-3,0,0,0,-3,0,29.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,7.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,3,0,29.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,7.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,9.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,11.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,13.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,17.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,19.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,21.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,23.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,25.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,3,0,0,0,-3,0,27.5,0> }
	object { t04o3333_dot_dat matrix <-3,0,0,0,-3,0,0,0,-3,0,29.5,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-0.5,0,0,0,4,0,30,0> }
	#if (L3Studs)
		object { stud2a_dot_dat matrix <0,1,0,1,0,0,0,0,1,-4,0,0> }
	#end
	object { _4_dash_4disc_dot_dat matrix <0,4,0,1,0,0,0,0,4,-4,0,0> }
	#if (L3Studs)
		object { stud2a_dot_dat matrix <0,1,0,-1,0,0,0,0,1,4,0,0> }
	#end
	object { _4_dash_4disc_dot_dat matrix <0,4,0,-1,0,0,0,0,4,4,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <0,6,0,8,0,0,0,0,6,-4,0,0> }
// blade
	object { rect2p_dot_dat matrix <0,15.464,0,0,0,-1,-2,0,0,0,-16.536,6> }
	object { _1_dash_4ndis_dot_dat matrix <0,-16,0,-1,0,0,0,0,-16,2,-32,22> }
	object { _1_dash_4ndis_dot_dat matrix <0,-16,0,1,0,0,0,0,-16,-2,-32,22> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,-16,0,4,0,0,0,0,-16,-2,-32,22> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,10,-7.5,4,0,0,0,-10,-7.5,-2,-58,29.5> }
	object { _1_dash_4ndis_dot_dat matrix <0,10,-7.5,4,0,0,0,-10,-7.5,-2,-58,29.5> }
	object { _1_dash_4ndis_dot_dat matrix <0,10,-7.5,-4,0,0,0,-10,-7.5,2,-58,29.5> }
	mesh {
		triangle { <0,-72,22>, <1.5,-69,23>, <-1.5,-69,23> }
		triangle { <2,-68,22>, <1.5,-69,23>, <0,-72,22> }
		triangle { <0,-72,22>, <-1.5,-69,23>, <-2,-68,22> }
		triangle { <1.5,-69,23>, <2,-68,22>, <-2,-68,22> }
		triangle { <-2,-68,22>, <-1.5,-69,23>, <1.5,-69,23> }
	}
	object { _1_dash_4chrd_dot_dat matrix <0,-24,0,-1,0,0,0,0,-24,2,-44,22> }
	object { _1_dash_4con6_dot_dat matrix <0,-4,0,2,0,0,0,0,-4,0,-44,22> }
	object { _1_dash_4chrd_dot_dat matrix <0,-24,0,1,0,0,0,0,-24,-2,-44,22> }
	object { _1_dash_4con6_dot_dat matrix <0,-4,0,-2,0,0,0,0,-4,0,-44,22> }
	mesh {
		triangle { <2,-44,-2>, <0,-44,-6>, <0,0,-6> }
		triangle { <0,0,-6>, <2,-5.602,-2>, <2,-44,-2> }
		triangle { <0,0,-6>, <0,-44,-6>, <-2,-44,-2> }
		triangle { <-2,-44,-2>, <-2,-5.602,-2>, <0,0,-6> }
		triangle { <2,-48,6>, <2,-48,22>, <2,-58,14.5> }
		triangle { <2,-58,14.5>, <2,-68,22>, <2,-44,-2> }
		triangle { <2,-58,14.5>, <2,-44,-2>, <2,-48,6> }
		triangle { <2,-6,6>, <2,-48,6>, <2,-44,-2> }
		triangle { <2,-44,-2>, <2,-6,0>, <2,-6,6> }
		triangle { <2,-5.602,-2>, <2,-6,0>, <2,-44,-2> }
		triangle { <-2,-58,14.5>, <-2,-48,22>, <-2,-48,6> }
		triangle { <-2,-44,-2>, <-2,-68,22>, <-2,-58,14.5> }
		triangle { <-2,-48,6>, <-2,-44,-2>, <-2,-58,14.5> }
		triangle { <-2,-44,-2>, <-2,-48,6>, <-2,-6,6> }
		triangle { <-2,-6,6>, <-2,-6,0>, <-2,-44,-2> }
		triangle { <-2,-44,-2>, <-2,-6,0>, <-2,-5.602,-2> }
	}
	object { _1_dash_4ndis_dot_dat matrix <0,-6,0,1,0,0,0,0,6,-2,0,0> }
	object { _1_dash_4ndis_dot_dat matrix <0,-6,0,-1,0,0,0,0,6,2,0,0> }
// guard
	object { _2_dash_4cyli_dot_dat matrix <0,-3,-5.196,8,0,0,0,5.196,-3,-4,0,-10> }
// BFC INVERTNEXT
	object { _5_dash_8cyli_dot_dat matrix <0,-2,-3.464,8,0,0,0,3.464,-2,-4,0,-10> }
	object { _1_dash_8ring2_dot_dat matrix <0,0.5176,-1.9318,1,0,0,0,-1.9318,-0.5176,-4,0,-10> }
	object { _2_dash_4ring2_dot_dat matrix <0,-0.5176,1.9318,1,0,0,0,1.9318,0.5176,-4,0,-10> }
	object { _1_dash_8ring2_dot_dat matrix <0,0.5176,-1.9318,-1,0,0,0,-1.9318,-0.5176,4,0,-10> }
	object { _2_dash_4ring2_dot_dat matrix <0,-0.5176,1.9318,-1,0,0,0,1.9318,0.5176,4,0,-10> }
	mesh {
		triangle { <-4,-3,-15.196>, <4,-3,-15.196>, <4,-2,-13.464> }
		triangle { <4,-2,-13.464>, <-4,-2,-13.464>, <-4,-3,-15.196> }
		triangle { <-4,-1.0352,-6.1364>, <4,-1.0352,-6.1364>, <4,-1.1321,-5.7749> }
		triangle { <4,-1.1321,-5.7749>, <-4,-1.1321,-5.7749>, <-4,-1.0352,-6.1364> }
	}
	object { _2_dash_4cyli_dot_dat matrix <0,-3,5.196,-8,0,0,0,5.196,3,4,0,10> }
// BFC INVERTNEXT
	object { _5_dash_8cyli_dot_dat matrix <0,-2,3.464,-8,0,0,0,3.464,2,4,0,10> }
	object { _1_dash_8ring2_dot_dat matrix <0,0.5176,1.9318,-1,0,0,0,-1.9318,0.5176,4,0,10> }
	object { _2_dash_4ring2_dot_dat matrix <0,-0.5176,-1.9318,-1,0,0,0,1.9318,-0.5176,4,0,10> }
	object { _1_dash_8ring2_dot_dat matrix <0,0.5176,1.9318,1,0,0,0,-1.9318,0.5176,-4,0,10> }
	object { _2_dash_4ring2_dot_dat matrix <0,-0.5176,-1.9318,1,0,0,0,1.9318,-0.5176,-4,0,10> }
	mesh {
		triangle { <4,-3,15.196>, <-4,-3,15.196>, <-4,-2,13.464> }
		triangle { <-4,-2,13.464>, <4,-2,13.464>, <4,-3,15.196> }
		triangle { <4,-1.0352,6.1364>, <-4,-1.0352,6.1364>, <-4,-1.1321,5.7749> }
		triangle { <-4,-1.1321,5.7749>, <4,-1.1321,5.7749>, <4,-1.0352,6.1364> }
	}
}
#end
#end // ifndef (_43887_dot_dat)


//// Model weapon_039_scimitar.ldr
#ifndef (weapon__039__scimitar_dot_ldr)
#declare weapon__039__scimitar_dot_ldr = object {
// Untitled
// Name: weapon_039_scimitar.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 7  3 -5 0  0 0 -1  0 1 0  1 0 0 43887.dat
	object {
		_43887_dot_dat
		matrix <1-L3SW/16,0,0,0,1-L3SW/110,0,0,0,1-L3SW/47.696,0,L3SW/-6.47059,L3SW/8.43878>
		matrix <0,0,1,0,1,0,-1,0,0,3,-5,0>
		material { L3Color7 }
	}
}
#end // ifndef (weapon__039__scimitar_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-26.5,-77,-8>;
#declare L3ModelBBoxMax = <21.196,33,8>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <-2.652,-22,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <47.696,110,16>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_039_scimitar.ldr
object { weapon__039__scimitar_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            21            24
// POV Equivs:       -            14 (67%)
// Model has 2 parts (3 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
