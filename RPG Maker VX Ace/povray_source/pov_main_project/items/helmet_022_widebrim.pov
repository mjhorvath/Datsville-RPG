// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:40 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_022_widebrim.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_022_widebrim.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_022_widebrim.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 8 Dark_Gray (from ldconfig.ldr)
#ifndef (L3Texture8)
#declare L3Texture8 = L3TextureOpaqueRGB(109,110,92)
#end
#ifndef (L3Texture8_slope)
#declare L3Texture8_slope = L3TextureSlope(L3Texture8)
#end
#ifndef (L3Color8)
#declare L3Color8 = L3Material(L3Texture8)
#end
#ifndef (L3Color8_slope)
#declare L3Color8_slope = L3Material(L3Texture8_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive stud4.dat
#ifndef (stud4_dot_dat)
#declare stud4_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4_dot_dat)


//// Primitive 2-4ring4.dat
#ifndef (_2_dash_4ring4_dot_dat)
#declare _2_dash_4ring4_dot_dat = disc {
	<0,0,0>, <0,1,0>, 5, 4
	clipped_by { plane { -z, 0 } }
}
#end // ifndef (_2_dash_4ring4_dot_dat)


//// Primitive 1-4con5.dat
#ifndef (_1_dash_4con5_dot_dat)
#declare _1_dash_4con5_dot_dat = cone {
	<0,0,0>, 6, <0,1,0>, 5 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con5_dot_dat)


//// Primitive 1-4con8.dat
#ifndef (_1_dash_4con8_dot_dat)
#declare _1_dash_4con8_dot_dat = cone {
	<0,0,0>, 9, <0,1,0>, 8 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con8_dot_dat)


//// Primitive 3-4cyli.dat
#ifndef (_3_dash_4cyli_dot_dat)
#declare _3_dash_4cyli_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <1,0,-1>, sqrt(1/2) } }
}
#end // ifndef (_3_dash_4cyli_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4ring9.dat
#ifndef (_1_dash_4ring9_dot_dat)
#declare _1_dash_4ring9_dot_dat = disc {
	<0,0,0>, <0,1,0>, 10, 9
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring9_dot_dat)


//// Primitive 1-4ring7.dat
#ifndef (_1_dash_4ring7_dot_dat)
#declare _1_dash_4ring7_dot_dat = disc {
	<0,0,0>, <0,1,0>, 8, 7
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring7_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 1-4ring5.dat
#ifndef (_1_dash_4ring5_dot_dat)
#declare _1_dash_4ring5_dot_dat = disc {
	<0,0,0>, <0,1,0>, 6, 5
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring5_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4ring2.dat
#ifndef (_4_dash_4ring2_dot_dat)
#declare _4_dash_4ring2_dot_dat = disc { <0,0,0>, <0,1,0>, 3, 2 }
#end // ifndef (_4_dash_4ring2_dot_dat)


//// Primitive 1-4ring8.dat
#ifndef (_1_dash_4ring8_dot_dat)
#declare _1_dash_4ring8_dot_dat = disc {
	<0,0,0>, <0,1,0>, 9, 8
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring8_dot_dat)


//// Primitive 1-8sphe.dat
#ifndef (_1_dash_8sphe_dot_dat)
#declare _1_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <0,0,0>, <2,2,2> } } }
#end // ifndef (_1_dash_8sphe_dot_dat)


//// Primitive 1-4rin12.dat
#ifndef (_1_dash_4rin12_dot_dat)
#declare _1_dash_4rin12_dot_dat = disc {
	<0,0,0>, <0,1,0>, 13, 12
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4rin12_dot_dat)


//// Primitive 1-4con2.dat
#ifndef (_1_dash_4con2_dot_dat)
#declare _1_dash_4con2_dot_dat = cone {
	<0,0,0>, 3, <0,1,0>, 2 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con2_dot_dat)


//// Primitive 4-8sphe.dat
#ifndef (_4_dash_8sphe_dot_dat)
#declare _4_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <-1,0,-1>, <2,2,2> } } }
#end // ifndef (_4_dash_8sphe_dot_dat)


//// Primitive 1-4cyls2.dat
#ifndef (_1_dash_4cyls2_dot_dat)
#declare _1_dash_4cyls2_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,0 } }
}
#end // ifndef (_1_dash_4cyls2_dot_dat)


//// Part 30273.dat
#ifndef (_30273_dot_dat)
#declare _30273_dot_dat = #if (L3Quality = 0) box { <-27,-14.6813,-27>, <27,24,27> } #else union {
// Minifig Helmet with Chinstrap and Wide Brim
// Name: 30273.dat
// Author: Paul Easter [pneaster]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !KEYWORDS Castle, knight, tournament, Late Medieval, Lancaster, Tudor
// !HISTORY 2003-11-04 [fwcain] added CMDLINE and some KEYWORDS; fixed Title...
// !HISTORY 2010-12-31 [PTadmin] Official Update 2010-03
// !HISTORY 2012-12-24 [cwdee] Update category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
// inner stud
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,-1,0,0,0,6,0,-4,0> }
	#if (L3Studs)
		object { stud4_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,-4,0> }
	#end
	object { _2_dash_4ring4_dot_dat matrix <0,0,-2,0,-1,0,2,0,0,0,-4,0> }
	object { _2_dash_4ring4_dot_dat matrix <0,0,2,0,-1,0,-2,0,0,0,-4,0> }
// BFC INVERTNEXT
	object { _1_dash_4con5_dot_dat matrix <2,0,0,0,-2,0,0,0,2,0,-2,0> }
// BFC INVERTNEXT
	object { _1_dash_4con5_dot_dat matrix <0,0,-2,0,-2,0,2,0,0,0,-2,0> }
// BFC INVERTNEXT
	object { _1_dash_4con5_dot_dat matrix <-2,0,0,0,-2,0,0,0,-2,0,-2,0> }
// BFC INVERTNEXT
	object { _1_dash_4con5_dot_dat matrix <0,0,2,0,-2,0,-2,0,0,0,-2,0> }
// BFC INVERTNEXT
	object { _1_dash_4con8_dot_dat matrix <1.5,0,0,0,-4,0,0,0,1.5,0,2,0> }
// BFC INVERTNEXT
	object { _1_dash_4con8_dot_dat matrix <0,0,-1.5,0,-4,0,1.5,0,0,0,2,0> }
// BFC INVERTNEXT
	object { _1_dash_4con8_dot_dat matrix <-1.5,0,0,0,-4,0,0,0,-1.5,0,2,0> }
// BFC INVERTNEXT
	object { _1_dash_4con8_dot_dat matrix <0,0,1.5,0,-4,0,-1.5,0,0,0,2,0> }
// BFC INVERTNEXT
	object { _3_dash_4cyli_dot_dat matrix <9.5459,0,-9.5459,0,20,0,9.5459,0,9.5459,0,2,0> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <-9.5459,0,-9.5459,0,5,0,9.5459,0,-9.5459,0,19,0> }
	object { _1_dash_4ring9_dot_dat matrix <-1.0607,0,-1.0607,0,-1,0,1.0607,0,-1.0607,0,24,0> }
	object { _1_dash_4ring7_dot_dat matrix <-1.4142,0,-1.4142,0,-1,0,1.4142,0,-1.4142,0,24,0> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <-9.5459,0,-9.5459,0,6,0,9.5459,0,-9.5459,0,2,0> }
	object { _1_dash_4cyli_dot_dat matrix <-11.3137,0,-11.3137,0,5,0,11.3137,0,-11.3137,0,19,0> }
	object { _2_dash_4cyli_dot_dat matrix <16,0,0,0,14,0,0,0,16,0,8,0> }
	object { _1_dash_4ring5_dot_dat matrix <-1.9092,0,-1.9092,0,-1,0,1.9092,0,-1.9092,0,8,0> }
	object { _1_dash_4ring9_dot_dat matrix <-1.0607,0,-1.0607,0,1,0,1.0607,0,-1.0607,0,19,0> }
	object { _1_dash_4ring7_dot_dat matrix <-1.4142,0,-1.4142,0,1,0,1.4142,0,-1.4142,0,19,0> }
	object { _4_dash_4cyli_dot_dat matrix <27,0,0,0,2,0,0,0,27,0,6,0> }
	object { _4_dash_4ring2_dot_dat matrix <9,0,0,0,-1,0,0,0,9,0,8,0> }
	object { _1_dash_4ring8_dot_dat matrix <2,0,0,0,-1,0,0,0,2,0,8,0> }
	object { _1_dash_4ring8_dot_dat matrix <0,0,-2,0,-1,0,2,0,0,0,8,0> }
	object { _1_dash_4ring8_dot_dat matrix <-2,0,0,0,-1,0,0,0,-2,0,8,0> }
	object { _1_dash_4ring8_dot_dat matrix <0,0,2,0,-1,0,-2,0,0,0,8,0> }
	mesh {
		triangle { <2,-14,2>, <2,-14,-2>, <-2,-14,-2> }
		triangle { <-2,-14,-2>, <-2,-14,2>, <2,-14,2> }
// 
// dome
	}
	object { _1_dash_8sphe_dot_dat matrix <0,0,-12,12,0,0,0,-12,0,2,-1,-2> }
	object { _1_dash_4rin12_dot_dat matrix <1,0,0,0,0,1,0,-1,0,2,-1,-2> }
	object { _1_dash_4rin12_dot_dat matrix <1,0,0,0,1,0,0,0,-1,2,-1,-2> }
	object { _1_dash_4rin12_dot_dat matrix <0,0,-1,-1,0,0,0,-1,0,2,-1,-2> }
	object { _1_dash_4cyli_dot_dat matrix <13,0,0,0,0,4,0,-13,0,2,-1,-2> }
	mesh {
		triangle { <2,-1,-15>, <6.9751,-1,-14.0107>, <6.8886,2,-16.6302> }
		triangle { <6.8886,2,-16.6302>, <0,2,-18>, <2,-1,-15> }
		triangle { <6.9751,-1,-14.0107>, <11.1923,-1,-11.1923>, <12.7278,2,-12.7278> }
		triangle { <12.7278,2,-12.7278>, <6.8886,2,-16.6302>, <6.9751,-1,-14.0107> }
		triangle { <11.1923,-1,-11.1923>, <14.0107,-1,-6.9751>, <16.6302,2,-6.8886> }
		triangle { <16.6302,2,-6.8886>, <12.7278,2,-12.7278>, <11.1923,-1,-11.1923> }
		triangle { <14.0107,-1,-6.9751>, <15,-1,-2>, <18,2,0> }
		triangle { <18,2,0>, <16.6302,2,-6.8886>, <14.0107,-1,-6.9751> }
		triangle { <15,-1,-2>, <15,-1,2>, <18,2,0> }
	}
	object { _1_dash_4con2_dot_dat matrix <0,0,-9,0,-4,0,9,0,0,0,6,0> }
	object { _4_dash_8sphe_dot_dat matrix <0,0,-1,0.7071,-0.7071,0,-0.7071,-0.7071,0,16.5,0.5,0> }
	object { _4_dash_8sphe_dot_dat matrix <0,0,-1,0.1951,-0.9808,0,-0.9808,-0.1951,0,4.5362,-13.5054,0> }
	object { _4_dash_8sphe_dot_dat matrix <-0.7071,-0.7071,0,0.7071,-0.7071,0,0,0,1,11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <-0.7071,-0.7071,0,-0.1414,0.1414,0,0,0,1,11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <-0.7071,-0.7071,0,-0.1414,0.1414,0,0,0,-1,11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <0.7071,0.7071,0,-0.1414,0.1414,0,0,0,1,11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <0.7071,0.7071,0,-0.1414,0.1414,0,0,0,-1,11.1924,-10.1924,0> }
// dome
	object { _1_dash_8sphe_dot_dat matrix <-12,0,0,0,0,-12,0,-12,0,-2,-1,-2> }
	object { _1_dash_4rin12_dot_dat matrix <0,0,-1,1,0,0,0,-1,0,-2,-1,-2> }
	object { _1_dash_4rin12_dot_dat matrix <0,0,-1,0,1,0,-1,0,0,-2,-1,-2> }
	object { _1_dash_4rin12_dot_dat matrix <-1,0,0,0,0,1,0,-1,0,-2,-1,-2> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,-13,4,0,0,0,-13,0,-2,-1,-2> }
	mesh {
		triangle { <-15,-1,-2>, <-14.0107,-1,-6.9751>, <-16.6302,2,-6.8886> }
		triangle { <-16.6302,2,-6.8886>, <-18,2,0>, <-15,-1,-2> }
		triangle { <-14.0107,-1,-6.9751>, <-11.1923,-1,-11.1923>, <-12.7278,2,-12.7278> }
		triangle { <-12.7278,2,-12.7278>, <-16.6302,2,-6.8886>, <-14.0107,-1,-6.9751> }
		triangle { <-11.1923,-1,-11.1923>, <-6.9751,-1,-14.0107>, <-6.8886,2,-16.6302> }
		triangle { <-6.8886,2,-16.6302>, <-12.7278,2,-12.7278>, <-11.1923,-1,-11.1923> }
		triangle { <-6.9751,-1,-14.0107>, <-2,-1,-15>, <0,2,-18> }
		triangle { <0,2,-18>, <-6.8886,2,-16.6302>, <-6.9751,-1,-14.0107> }
		triangle { <-2,-1,-15>, <2,-1,-15>, <0,2,-18> }
	}
	object { _1_dash_4con2_dot_dat matrix <-9,0,0,0,-4,0,0,0,-9,0,6,0> }
	object { _4_dash_8sphe_dot_dat matrix <-1,0,0,0,-0.7071,-0.7071,0,-0.7071,0.7071,0,0.5,-16.5> }
	object { _4_dash_8sphe_dot_dat matrix <-1,0,0,0,-0.9808,-0.1951,0,-0.1951,0.9808,0,-13.5054,-4.5362> }
	object { _4_dash_8sphe_dot_dat matrix <0,-0.7071,0.7071,0,-0.7071,-0.7071,1,0,0,0,-10.1924,-11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-0.7071,0.7071,0,0.1414,0.1414,1,0,0,0,-10.1924,-11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-0.7071,0.7071,0,0.1414,0.1414,-1,0,0,0,-10.1924,-11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,0.7071,-0.7071,0,0.1414,0.1414,1,0,0,0,-10.1924,-11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,0.7071,-0.7071,0,0.1414,0.1414,-1,0,0,0,-10.1924,-11.1924> }
// dome
	object { _1_dash_8sphe_dot_dat matrix <0,0,12,-12,0,0,0,-12,0,-2,-1,2> }
	object { _1_dash_4rin12_dot_dat matrix <-1,0,0,0,0,-1,0,-1,0,-2,-1,2> }
	object { _1_dash_4rin12_dot_dat matrix <-1,0,0,0,1,0,0,0,1,-2,-1,2> }
	object { _1_dash_4rin12_dot_dat matrix <0,0,1,1,0,0,0,-1,0,-2,-1,2> }
	object { _1_dash_4cyli_dot_dat matrix <-13,0,0,0,0,-4,0,-13,0,-2,-1,2> }
	mesh {
		triangle { <-2,-1,15>, <-6.9751,-1,14.0107>, <-6.8886,2,16.6302> }
		triangle { <-6.8886,2,16.6302>, <0,2,18>, <-2,-1,15> }
		triangle { <-6.9751,-1,14.0107>, <-11.1923,-1,11.1923>, <-12.7278,2,12.7278> }
		triangle { <-12.7278,2,12.7278>, <-6.8886,2,16.6302>, <-6.9751,-1,14.0107> }
		triangle { <-11.1923,-1,11.1923>, <-14.0107,-1,6.9751>, <-16.6302,2,6.8886> }
		triangle { <-16.6302,2,6.8886>, <-12.7278,2,12.7278>, <-11.1923,-1,11.1923> }
		triangle { <-14.0107,-1,6.9751>, <-15,-1,2>, <-18,2,0> }
		triangle { <-18,2,0>, <-16.6302,2,6.8886>, <-14.0107,-1,6.9751> }
		triangle { <-15,-1,2>, <-15,-1,-2>, <-18,2,0> }
	}
	object { _1_dash_4con2_dot_dat matrix <0,0,9,0,-4,0,-9,0,0,0,6,0> }
	object { _4_dash_8sphe_dot_dat matrix <0,0,1,-0.7071,-0.7071,0,0.7071,-0.7071,0,-16.5,0.5,0> }
	object { _4_dash_8sphe_dot_dat matrix <0,0,1,-0.1951,-0.9808,0,0.9808,-0.1951,0,-4.5362,-13.5054,0> }
	object { _4_dash_8sphe_dot_dat matrix <0.7071,-0.7071,0,-0.7071,-0.7071,0,0,0,-1,-11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <0.7071,-0.7071,0,0.1414,0.1414,0,0,0,-1,-11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <0.7071,-0.7071,0,0.1414,0.1414,0,0,0,1,-11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <-0.7071,0.7071,0,0.1414,0.1414,0,0,0,-1,-11.1924,-10.1924,0> }
	object { _1_dash_4cyls2_dot_dat matrix <-0.7071,0.7071,0,0.1414,0.1414,0,0,0,1,-11.1924,-10.1924,0> }
// dome
	object { _1_dash_8sphe_dot_dat matrix <12,0,0,0,0,12,0,-12,0,2,-1,2> }
	object { _1_dash_4rin12_dot_dat matrix <0,0,1,-1,0,0,0,-1,0,2,-1,2> }
	object { _1_dash_4rin12_dot_dat matrix <0,0,1,0,1,0,1,0,0,2,-1,2> }
	object { _1_dash_4rin12_dot_dat matrix <1,0,0,0,0,-1,0,-1,0,2,-1,2> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,13,-4,0,0,0,-13,0,2,-1,2> }
	mesh {
		triangle { <15,-1,2>, <14.0107,-1,6.9751>, <16.6302,2,6.8886> }
		triangle { <16.6302,2,6.8886>, <18,2,0>, <15,-1,2> }
		triangle { <14.0107,-1,6.9751>, <11.1923,-1,11.1923>, <12.7278,2,12.7278> }
		triangle { <12.7278,2,12.7278>, <16.6302,2,6.8886>, <14.0107,-1,6.9751> }
		triangle { <11.1923,-1,11.1923>, <6.9751,-1,14.0107>, <6.8886,2,16.6302> }
		triangle { <6.8886,2,16.6302>, <12.7278,2,12.7278>, <11.1923,-1,11.1923> }
		triangle { <6.9751,-1,14.0107>, <2,-1,15>, <0,2,18> }
		triangle { <0,2,18>, <6.8886,2,16.6302>, <6.9751,-1,14.0107> }
		triangle { <2,-1,15>, <-2,-1,15>, <0,2,18> }
	}
	object { _1_dash_4con2_dot_dat matrix <9,0,0,0,-4,0,0,0,9,0,6,0> }
	object { _4_dash_8sphe_dot_dat matrix <1,0,0,0,-0.7071,0.7071,0,-0.7071,-0.7071,0,0.5,16.5> }
	object { _4_dash_8sphe_dot_dat matrix <1,0,0,0,-0.9808,0.1951,0,-0.1951,-0.9808,0,-13.5054,4.5362> }
	object { _4_dash_8sphe_dot_dat matrix <0,-0.7071,-0.7071,0,-0.7071,0.7071,-1,0,0,0,-10.1924,11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-0.7071,-0.7071,0,0.1414,-0.1414,-1,0,0,0,-10.1924,11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-0.7071,-0.7071,0,0.1414,-0.1414,1,0,0,0,-10.1924,11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,0.7071,0.7071,0,0.1414,-0.1414,-1,0,0,0,-10.1924,11.1924> }
	object { _1_dash_4cyls2_dot_dat matrix <0,0.7071,0.7071,0,0.1414,-0.1414,1,0,0,0,-10.1924,11.1924> }
// lower portion of helmet
	mesh {
		triangle { <8.8663,9.3727,-10>, <12.1915,9.3727,-10>, <12.1915,17.6274,-10> }
		triangle { <12.1915,17.6274,-10>, <8.8663,17.6274,-10>, <8.8663,9.3727,-10> }
		triangle { <6.9008,8,-11.3136>, <11.3136,8,-11.3136>, <12.1915,9.3727,-10> }
		triangle { <12.1915,9.3727,-10>, <8.8663,9.3727,-10>, <6.9008,8,-11.3136> }
		triangle { <8.8663,17.6274,-10>, <12.1915,17.6274,-10>, <11.3136,19,-11.3136> }
		triangle { <11.3136,19,-11.3136>, <6.9008,19,-11.3136>, <8.8663,17.6274,-10> }
		triangle { <14.7824,22.5198,-6.1232>, <14.7824,8,-6.1232>, <16,8,0> }
		triangle { <16,8,0>, <16,22,0>, <14.7824,22.5198,-6.1232> }
		triangle { <12.1915,9.3727,-10>, <11.3136,8,-11.3136>, <14.7824,8,-6.1232> }
		triangle { <12.1915,9.3727,-10>, <14.7824,8,-6.1232>, <14.7824,22.5198,-6.1232> }
		triangle { <14.7824,22.5198,-6.1232>, <12.1915,17.6274,-10>, <12.1915,9.3727,-10> }
		triangle { <12.1915,17.6274,-10>, <14.7824,22.5198,-6.1232>, <11.3136,24,-11.3136> }
		triangle { <11.3136,24,-11.3136>, <11.3136,19,-11.3136>, <12.1915,17.6274,-10> }
		triangle { <14.7824,22.5198,6.1232>, <14.7824,22,6.1232>, <11.3136,22,11.3136> }
		triangle { <11.3136,22,11.3136>, <11.3136,24,11.3136>, <14.7824,22.5198,6.1232> }
		triangle { <14.7824,22,6.1232>, <14.7824,22.5198,6.1232>, <16,22,0> }
		triangle { <13.5,22,0>, <12.4727,22,-5.1665>, <12.4727,23.5053,-5.1665> }
		triangle { <12.4727,23.5053,-5.1665>, <13.5,23.0669,0>, <13.5,22,0> }
		triangle { <12.4727,22,-5.1665>, <9.5458,22,-9.5458>, <9.5458,24,-9.5458> }
		triangle { <9.5458,24,-9.5458>, <11.3136,24,-6.9008>, <12.4727,22,-5.1665> }
		triangle { <12.4727,22,-5.1665>, <11.3136,24,-6.9008>, <12.4727,23.5053,-5.1665> }
		triangle { <6.9008,8,-11.3136>, <8.8663,9.3727,-10>, <9.5458,8,-9.5458> }
		triangle { <8.8663,9.3727,-10>, <8.8663,17.6274,-10>, <9.5458,19,-9.5458> }
		triangle { <9.5458,19,-9.5458>, <9.5458,8,-9.5458>, <8.8663,9.3727,-10> }
		triangle { <9.5458,19,-9.5458>, <8.8663,17.6274,-10>, <6.9008,19,-11.3136> }
		triangle { <11.3136,24,-11.3136>, <11.3136,24,-6.9008>, <9.5458,24,-9.5458> }
		triangle { <11.3136,24,-6.9008>, <11.3136,24,-11.3136>, <14.7824,22.5198,-6.1232> }
		triangle { <14.7824,22.5198,-6.1232>, <12.4727,23.5053,-5.1665>, <11.3136,24,-6.9008> }
		triangle { <13.5,23.0669,0>, <12.4727,23.5053,-5.1665>, <14.7824,22.5198,-6.1232> }
		triangle { <14.7824,22.5198,-6.1232>, <16,22,0>, <13.5,23.0669,0> }
		triangle { <9.5458,24,9.5458>, <11.3136,24,6.9008>, <11.3136,24,11.3136> }
		triangle { <11.3136,24,6.9008>, <12.4727,23.5053,5.1665>, <14.7824,22.5198,6.1232> }
		triangle { <14.7824,22.5198,6.1232>, <11.3136,24,11.3136>, <11.3136,24,6.9008> }
		triangle { <14.7824,22.5198,6.1232>, <12.4727,23.5053,5.1665>, <13.5,23.0669,0> }
		triangle { <13.5,23.0669,0>, <16,22,0>, <14.7824,22.5198,6.1232> }
		triangle { <12.4727,23.5053,5.1665>, <12.4727,22,5.1665>, <13.5,22,0> }
		triangle { <13.5,22,0>, <13.5,23.0669,0>, <12.4727,23.5053,5.1665> }
		triangle { <9.5458,24,9.5458>, <9.5458,22,9.5458>, <12.4727,22,5.1665> }
		triangle { <12.4727,22,5.1665>, <11.3136,24,6.9008>, <9.5458,24,9.5458> }
		triangle { <11.3136,24,6.9008>, <12.4727,22,5.1665>, <12.4727,23.5053,5.1665> }
		triangle { <5.5708,24,12.2025>, <5.1665,22,12.4727>, <9.5458,22,9.5458> }
		triangle { <9.5458,22,9.5458>, <9.5458,24,9.5458>, <5.5708,24,12.2025> }
		triangle { <5.5708,24,12.2025>, <5.1665,23.7636,12.4727>, <5.1665,22,12.4727> }
		triangle { <0,22,13.5>, <5.1665,22,12.4727>, <3.0616,22.5327,12.8912> }
		triangle { <3.0616,22.5327,12.8912>, <5.1665,22,12.4727>, <5.1665,23.7636,12.4727> }
		triangle { <3.0616,22.5327,12.8912>, <3.0616,22.5327,15.3912>, <0,22,16> }
		triangle { <0,22,16>, <0,22,13.5>, <3.0616,22.5327,12.8912> }
		triangle { <5.1665,23.7636,12.4727>, <5.5708,24,14.8922>, <3.0616,22.5327,15.3912> }
		triangle { <3.0616,22.5327,15.3912>, <3.0616,22.5327,12.8912>, <5.1665,23.7636,12.4727> }
		triangle { <5.1665,23.7636,12.4727>, <5.5708,24,12.2025>, <5.5708,24,14.8922> }
		triangle { <5.5708,24,12.2025>, <6.1232,24,14.7824>, <5.5708,24,14.8922> }
		triangle { <9.5458,24,9.5458>, <11.3136,24,11.3136>, <6.1232,24,14.7824> }
		triangle { <6.1232,24,14.7824>, <5.5708,24,12.2025>, <9.5458,24,9.5458> }
		triangle { <6.1232,24,14.7824>, <6.1232,22,14.7824>, <3.0616,22.5327,15.3912> }
		triangle { <3.0616,22.5327,15.3912>, <5.5708,24,14.8922>, <6.1232,24,14.7824> }
		triangle { <0,22,16>, <3.0616,22.5327,15.3912>, <6.1232,22,14.7824> }
		triangle { <11.3136,24,11.3136>, <11.3136,22,11.3136>, <6.1232,22,14.7824> }
		triangle { <6.1232,22,14.7824>, <6.1232,24,14.7824>, <11.3136,24,11.3136> }
		triangle { <-8.866,17.627,-10>, <-12.191,17.627,-10>, <-12.191,9.373,-10> }
		triangle { <-12.191,9.373,-10>, <-8.866,9.373,-10>, <-8.866,17.627,-10> }
		triangle { <-8.866,9.373,-10>, <-12.191,9.373,-10>, <-11.314,8,-11.314> }
		triangle { <-11.314,8,-11.314>, <-6.901,8,-11.314>, <-8.866,9.373,-10> }
		triangle { <-6.901,19,-11.314>, <-11.314,19,-11.314>, <-12.191,17.627,-10> }
		triangle { <-12.191,17.627,-10>, <-8.866,17.627,-10>, <-6.901,19,-11.314> }
		triangle { <-16,22,0>, <-16,8,0>, <-14.782,8,-6.123> }
		triangle { <-14.782,8,-6.123>, <-14.782,22.52,-6.123>, <-16,22,0> }
		triangle { <-14.782,8,-6.123>, <-11.314,8,-11.314>, <-12.191,9.373,-10> }
		triangle { <-12.191,17.627,-10>, <-14.782,22.52,-6.123>, <-14.782,8,-6.123> }
		triangle { <-14.782,8,-6.123>, <-12.191,9.373,-10>, <-12.191,17.627,-10> }
		triangle { <-11.314,19,-11.314>, <-11.314,24,-11.314>, <-14.782,22.52,-6.123> }
		triangle { <-14.782,22.52,-6.123>, <-12.191,17.627,-10>, <-11.314,19,-11.314> }
		triangle { <-11.314,24,11.314>, <-11.314,22,11.314>, <-14.782,22,6.123> }
		triangle { <-14.782,22,6.123>, <-14.782,22.52,6.123>, <-11.314,24,11.314> }
		triangle { <-16,22,0>, <-14.782,22.52,6.123>, <-14.782,22,6.123> }
		triangle { <-13.5,23.067,0>, <-12.473,23.505,-5.166>, <-12.473,22,-5.166> }
		triangle { <-12.473,22,-5.166>, <-13.5,22,0>, <-13.5,23.067,0> }
		triangle { <-11.314,24,-6.901>, <-9.546,24,-9.546>, <-9.546,22,-9.546> }
		triangle { <-9.546,22,-9.546>, <-12.473,22,-5.166>, <-11.314,24,-6.901> }
		triangle { <-12.473,23.505,-5.166>, <-11.314,24,-6.901>, <-12.473,22,-5.166> }
		triangle { <-9.546,8,-9.546>, <-8.866,9.373,-10>, <-6.901,8,-11.314> }
		triangle { <-9.546,8,-9.546>, <-9.546,19,-9.546>, <-8.866,17.627,-10> }
		triangle { <-8.866,17.627,-10>, <-8.866,9.373,-10>, <-9.546,8,-9.546> }
		triangle { <-6.901,19,-11.314>, <-8.866,17.627,-10>, <-9.546,19,-9.546> }
		triangle { <-9.546,24,-9.546>, <-11.314,24,-6.901>, <-11.314,24,-11.314> }
		triangle { <-12.473,23.505,-5.166>, <-14.782,22.52,-6.123>, <-11.314,24,-11.314> }
		triangle { <-11.314,24,-11.314>, <-11.314,24,-6.901>, <-12.473,23.505,-5.166> }
		triangle { <-16,22,0>, <-14.782,22.52,-6.123>, <-12.473,23.505,-5.166> }
		triangle { <-12.473,23.505,-5.166>, <-13.5,23.067,0>, <-16,22,0> }
		triangle { <-11.314,24,11.314>, <-11.314,24,6.901>, <-9.546,24,9.546> }
		triangle { <-11.314,24,11.314>, <-14.782,22.52,6.123>, <-12.473,23.505,5.166> }
		triangle { <-12.473,23.505,5.166>, <-11.314,24,6.901>, <-11.314,24,11.314> }
		triangle { <-16,22,0>, <-13.5,23.067,0>, <-12.473,23.505,5.166> }
		triangle { <-12.473,23.505,5.166>, <-14.782,22.52,6.123>, <-16,22,0> }
		triangle { <-13.5,23.067,0>, <-13.5,22,0>, <-12.473,22,5.166> }
		triangle { <-12.473,22,5.166>, <-12.473,23.505,5.166>, <-13.5,23.067,0> }
		triangle { <-11.314,24,6.901>, <-12.473,22,5.166>, <-9.546,22,9.546> }
		triangle { <-9.546,22,9.546>, <-9.546,24,9.546>, <-11.314,24,6.901> }
		triangle { <-12.473,23.505,5.166>, <-12.473,22,5.166>, <-11.314,24,6.901> }
		triangle { <-9.546,24,9.546>, <-9.546,22,9.546>, <-5.166,22,12.473> }
		triangle { <-5.166,22,12.473>, <-5.571,24,12.203>, <-9.546,24,9.546> }
		triangle { <-5.166,22,12.473>, <-5.166,23.764,12.473>, <-5.571,24,12.203> }
		triangle { <-3.062,22.533,12.891>, <-5.166,22,12.473>, <0,22,13.5> }
		triangle { <-5.166,23.764,12.473>, <-5.166,22,12.473>, <-3.062,22.533,12.891> }
		triangle { <0,22,13.5>, <0,22,16>, <-3.062,22.533,15.391> }
		triangle { <-3.062,22.533,15.391>, <-3.062,22.533,12.891>, <0,22,13.5> }
		triangle { <-3.062,22.533,12.891>, <-3.062,22.533,15.391>, <-5.571,24,14.892> }
		triangle { <-5.571,24,14.892>, <-5.166,23.764,12.473>, <-3.062,22.533,12.891> }
		triangle { <-5.571,24,14.892>, <-5.571,24,12.203>, <-5.166,23.764,12.473> }
		triangle { <-5.571,24,14.892>, <-6.123,24,14.782>, <-5.571,24,12.203> }
		triangle { <-5.571,24,12.203>, <-6.123,24,14.782>, <-11.314,24,11.314> }
		triangle { <-11.314,24,11.314>, <-9.546,24,9.546>, <-5.571,24,12.203> }
		triangle { <-5.571,24,14.892>, <-3.062,22.533,15.391>, <-6.123,22,14.782> }
		triangle { <-6.123,22,14.782>, <-6.123,24,14.782>, <-5.571,24,14.892> }
		triangle { <-6.123,22,14.782>, <-3.062,22.533,15.391>, <0,22,16> }
		triangle { <-6.123,24,14.782>, <-6.123,22,14.782>, <-11.314,22,11.314> }
		triangle { <-11.314,22,11.314>, <-11.314,24,11.314>, <-6.123,24,14.782> }
	}
}
#end
#end // ifndef (_30273_dot_dat)


//// Model helmet_022_widebrim.ldr
#ifndef (helmet__022__widebrim_dot_ldr)
#declare helmet__022__widebrim_dot_ldr = object {
// Untitled
// Name: helmet_022_widebrim.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 8  0 -5 0  1 0 0  0 1 0  0 0 1 30273.dat
	object {
		_30273_dot_dat
		matrix <1-L3SW/54,0,0,0,1-L3SW/38.6813,0,0,0,1-L3SW/54,0,L3SW/8.30186,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-5,0>
		material { L3Color8 }
	}
}
#end // ifndef (helmet__022__widebrim_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-27,-19.6813,-27>;
#declare L3ModelBBoxMax = <27,19,27>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-0.34065,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <54,38.6813,54>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject helmet_022_widebrim.ldr
object { helmet__022__widebrim_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            23            26
// POV Equivs:       -            19 (83%)
// Model has 2 parts (1 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
