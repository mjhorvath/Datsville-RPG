// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:40 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_015_modernbike.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_015_modernbike.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_015_modernbike.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 9 Light_Blue (from ldconfig.ldr)
#ifndef (L3Texture9)
#declare L3Texture9 = L3TextureOpaqueRGB(180,210,227)
#end
#ifndef (L3Texture9_slope)
#declare L3Texture9_slope = L3TextureSlope(L3Texture9)
#end
#ifndef (L3Color9)
#declare L3Color9 = L3Material(L3Texture9)
#end
#ifndef (L3Color9_slope)
#declare L3Color9_slope = L3Material(L3Texture9_slope)
#end


//// Color 40 Trans_Black (from ldconfig.ldr)
#ifndef (L3Texture40)
#declare L3Texture40 = L3TextureTransparentRGBA(99,95,82,128)
#end
#ifndef (L3Texture40_slope)
#declare L3Texture40_slope = L3TextureSlope(L3Texture40)
#end
#ifndef (L3Color40)
#declare L3Color40 = L3MaterialT(L3Texture40)
#end
#ifndef (L3Color40_slope)
#declare L3Color40_slope = L3MaterialT(L3Texture40_slope)
#end


//// Primitive stud4.dat
#ifndef (stud4_dot_dat)
#declare stud4_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 4-4cyls.dat
#ifndef (_4_dash_4cyls_dot_dat)
#declare _4_dash_4cyls_dot_dat = object {
// Cylinder Sloped 1.0
// Name: 4-4cyls.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <0.9239,0.0761,0.3827>, <0.9239,0,0.3827>, <1,0,0> }
		triangle { <0.9239,0.0761,0.3827>, <0.7071,0.2929,0.7071>, <0.7071,0,0.7071> }
		triangle { <0.7071,0,0.7071>, <0.9239,0,0.3827>, <0.9239,0.0761,0.3827> }
		triangle { <0.7071,0.2929,0.7071>, <0.3827,0.6173,0.9239>, <0.3827,0,0.9239> }
		triangle { <0.3827,0,0.9239>, <0.7071,0,0.7071>, <0.7071,0.2929,0.7071> }
		triangle { <0.3827,0.6173,0.9239>, <0,1,1>, <0,0,1> }
		triangle { <0,0,1>, <0.3827,0,0.9239>, <0.3827,0.6173,0.9239> }
		triangle { <0,1,1>, <-0.3827,1.3827,0.9239>, <-0.3827,0,0.9239> }
		triangle { <-0.3827,0,0.9239>, <0,0,1>, <0,1,1> }
		triangle { <-0.3827,1.3827,0.9239>, <-0.7071,1.7071,0.7071>, <-0.7071,0,0.7071> }
		triangle { <-0.7071,0,0.7071>, <-0.3827,0,0.9239>, <-0.3827,1.3827,0.9239> }
		triangle { <-0.7071,1.7071,0.7071>, <-0.9239,1.9239,0.3827>, <-0.9239,0,0.3827> }
		triangle { <-0.9239,0,0.3827>, <-0.7071,0,0.7071>, <-0.7071,1.7071,0.7071> }
		triangle { <-0.9239,1.9239,0.3827>, <-1,2,0>, <-1,0,0> }
		triangle { <-1,0,0>, <-0.9239,0,0.3827>, <-0.9239,1.9239,0.3827> }
		triangle { <-1,2,0>, <-0.9239,1.9239,-0.3827>, <-0.9239,0,-0.3827> }
		triangle { <-0.9239,0,-0.3827>, <-1,0,0>, <-1,2,0> }
		triangle { <-0.9239,1.9239,-0.3827>, <-0.7071,1.7071,-0.7071>, <-0.7071,0,-0.7071> }
		triangle { <-0.7071,0,-0.7071>, <-0.9239,0,-0.3827>, <-0.9239,1.9239,-0.3827> }
		triangle { <-0.7071,1.7071,-0.7071>, <-0.3827,1.3827,-0.9239>, <-0.3827,0,-0.9239> }
		triangle { <-0.3827,0,-0.9239>, <-0.7071,0,-0.7071>, <-0.7071,1.7071,-0.7071> }
		triangle { <-0.3827,1.3827,-0.9239>, <0,1,-1>, <0,0,-1> }
		triangle { <0,0,-1>, <-0.3827,0,-0.9239>, <-0.3827,1.3827,-0.9239> }
		triangle { <0,1,-1>, <0.3827,0.6173,-0.9239>, <0.3827,0,-0.9239> }
		triangle { <0.3827,0,-0.9239>, <0,0,-1>, <0,1,-1> }
		triangle { <0.3827,0.6173,-0.9239>, <0.7071,0.2929,-0.7071>, <0.7071,0,-0.7071> }
		triangle { <0.7071,0,-0.7071>, <0.3827,0,-0.9239>, <0.3827,0.6173,-0.9239> }
		triangle { <0.7071,0.2929,-0.7071>, <0.9239,0.0761,-0.3827>, <0.9239,0,-0.3827> }
		triangle { <0.9239,0,-0.3827>, <0.7071,0,-0.7071>, <0.7071,0.2929,-0.7071> }
		triangle { <0.9239,0,-0.3827>, <0.9239,0.0761,-0.3827>, <1,0,0> }
	}
}
#end // ifndef (_4_dash_4cyls_dot_dat)


//// Primitive 1-4cyls.dat
#ifndef (_1_dash_4cyls_dot_dat)
#declare _1_dash_4cyls_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,sqrt(1/2) } }
}
#end // ifndef (_1_dash_4cyls_dot_dat)


//// Primitive 4-4ndis.dat
#ifndef (_4_dash_4ndis_dot_dat)
#declare _4_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <-1,-1,-1>, <1,1,1> } } }
#end // ifndef (_4_dash_4ndis_dot_dat)


//// Primitive 4-8sphe.dat
#ifndef (_4_dash_8sphe_dot_dat)
#declare _4_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <-1,0,-1>, <2,2,2> } } }
#end // ifndef (_4_dash_8sphe_dot_dat)


//// Part 2446.dat
#ifndef (_2446_dot_dat)
#declare _2446_dot_dat = #if (L3Quality = 0) box { <-15.8,-9.5,-18.5>, <15.8,25.115,16> } #else union {
// Minifig Helmet Modern
// Name: 2446.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !KEYWORDS motorcycle helmet, police helmet, space helmet, full face, crash helmet
// !HISTORY 1998-10-15 [PTadmin] Official Update 1998-09
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2003-01-25 [technog] BFC'd, closed gaps, corrected coplanarity
// !HISTORY 2004-03-02 [PTadmin] Official Update 2004-01
// !HISTORY 2005-08-29 [DeannaEarley] Removed erroneous BFC Certifys
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-05-12 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-12-24 [cwdee] Add category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	#if (L3Studs)
		object { stud4_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,-4,0> }
	#end
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,-1,0,0,0,6,0,-4,0> }
	mesh {
		triangle { <12.01,3,4.975>, <7.391,-4,3.061>, <8,-4,0> }
		triangle { <8,-4,0>, <13,3,0>, <12.01,3,4.975> }
		triangle { <9.191,3,9.191>, <5.656,-4,5.656>, <7.391,-4,3.061> }
		triangle { <7.391,-4,3.061>, <12.01,3,4.975>, <9.191,3,9.191> }
		triangle { <4.975,3,12.01>, <3.061,-4,7.391>, <5.656,-4,5.656> }
		triangle { <5.656,-4,5.656>, <9.191,3,9.191>, <4.975,3,12.01> }
		triangle { <0,3,13>, <0,-4,8>, <3.061,-4,7.391> }
		triangle { <3.061,-4,7.391>, <4.975,3,12.01>, <0,3,13> }
		triangle { <-4.975,3,12.01>, <-3.061,-4,7.391>, <0,-4,8> }
		triangle { <0,-4,8>, <0,3,13>, <-4.975,3,12.01> }
		triangle { <-9.191,3,9.191>, <-5.656,-4,5.656>, <-3.061,-4,7.391> }
		triangle { <-3.061,-4,7.391>, <-4.975,3,12.01>, <-9.191,3,9.191> }
		triangle { <-12.01,3,4.975>, <-7.391,-4,3.061>, <-5.656,-4,5.656> }
		triangle { <-5.656,-4,5.656>, <-9.191,3,9.191>, <-12.01,3,4.975> }
		triangle { <-13,3,0>, <-8,-4,0>, <-7.391,-4,3.061> }
		triangle { <-7.391,-4,3.061>, <-12.01,3,4.975>, <-13,3,0> }
		triangle { <-12.01,3,-4.975>, <-7.391,-4,-3.061>, <-8,-4,0> }
		triangle { <-8,-4,0>, <-13,3,0>, <-12.01,3,-4.975> }
		triangle { <-9.191,3,-9.191>, <-5.656,-4,-5.656>, <-7.391,-4,-3.061> }
		triangle { <-7.391,-4,-3.061>, <-12.01,3,-4.975>, <-9.191,3,-9.191> }
		triangle { <-4.975,3,-12.01>, <-3.061,-4,-7.391>, <-5.656,-4,-5.656> }
		triangle { <-5.656,-4,-5.656>, <-9.191,3,-9.191>, <-4.975,3,-12.01> }
		triangle { <0,3,-13>, <0,-4,-8>, <-3.061,-4,-7.391> }
		triangle { <-3.061,-4,-7.391>, <-4.975,3,-12.01>, <0,3,-13> }
		triangle { <4.975,3,-12.01>, <3.061,-4,-7.391>, <0,-4,-8> }
		triangle { <0,-4,-8>, <0,3,-13>, <4.975,3,-12.01> }
		triangle { <9.191,3,-9.191>, <5.656,-4,-5.656>, <3.061,-4,-7.391> }
		triangle { <3.061,-4,-7.391>, <4.975,3,-12.01>, <9.191,3,-9.191> }
		triangle { <12.01,3,-4.975>, <7.391,-4,-3.061>, <5.656,-4,-5.656> }
		triangle { <5.656,-4,-5.656>, <9.191,3,-9.191>, <12.01,3,-4.975> }
		triangle { <13,3,0>, <8,-4,0>, <7.391,-4,-3.061> }
		triangle { <7.391,-4,-3.061>, <12.01,3,-4.975>, <13,3,0> }
// BFC INVERTNEXT
	}
	object { _4_dash_4cyli_dot_dat matrix <13,0,0,0,2.5,0,0,0,13,0,3,0> }
// BFC INVERTNEXT
	object { _2_dash_4cyli_dot_dat matrix <13,0,0,0,15,0,0,0,13,0,5.5,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyls_dot_dat matrix <0,0,13,0,2,0,-13,0,0,0,20.5,0> }
// BFC INVERTNEXT
	object { _2_dash_4cyli_dot_dat matrix <13,0,0,0,-3.52,0,0,0,-13,0,20.5,0> }
// BFC INVERTNEXT
	object { _1_dash_4cyls_dot_dat matrix <0,0,-13,0,-5.54,0,-13,0,0,0,16.976,0> }
// BFC INVERTNEXT
	object { _1_dash_4cyls_dot_dat matrix <0,0,-13,0,-5.54,0,13,0,0,0,16.976,0> }
	mesh {
		triangle { <12.01,5.5,-4.975>, <9.989,5.5,-8>, <11.268,5.881,-6.087> }
		triangle { <11.268,5.881,-6.087>, <12.01,6.623,-4.975>, <12.01,5.5,-4.975> }
		triangle { <12.01,5.5,-4.975>, <12.01,6.623,-4.975>, <12.112,6.96,-4.46> }
		triangle { <12.112,6.96,-4.46>, <13,5.5,0>, <12.01,5.5,-4.975> }
		triangle { <12.112,6.96,-4.46>, <12.324,8.59,-3.38>, <13,5.5,0> }
		triangle { <12.324,8.59,-3.38>, <12.4,10.5,-3>, <13,11.44,0> }
		triangle { <13,11.44,0>, <13,5.5,0>, <12.324,8.59,-3.38> }
		triangle { <13,11.44,0>, <12.4,10.5,-3>, <12.112,13.36,-4.5> }
		triangle { <-9.989,5.5,-8>, <-12.01,5.5,-4.975>, <-11.268,5.881,-6.087> }
		triangle { <-11.268,5.881,-6.087>, <-12.01,5.5,-4.975>, <-12.01,6.623,-4.975> }
		triangle { <-12.01,6.623,-4.975>, <-12.01,5.5,-4.975>, <-13,5.5,0> }
		triangle { <-13,5.5,0>, <-12.112,6.96,-4.46>, <-12.01,6.623,-4.975> }
		triangle { <-12.324,8.59,-3.38>, <-12.112,6.96,-4.46>, <-13,5.5,0> }
		triangle { <-12.4,10.5,-3>, <-12.324,8.59,-3.38>, <-13,5.5,0> }
		triangle { <-13,5.5,0>, <-13,11.44,0>, <-12.4,10.5,-3> }
		triangle { <-12.4,10.5,-3>, <-13,11.44,0>, <-12.112,13.36,-4.5> }
		triangle { <6.123,-8.282,0>, <0,-9.5,0>, <5.657,-8.282,2.343> }
		triangle { <5.657,-8.282,2.343>, <0,-9.5,0>, <4.33,-8.282,4.33> }
		triangle { <4.33,-8.282,4.33>, <0,-9.5,0>, <2.343,-8.282,5.657> }
		triangle { <2.343,-8.282,5.657>, <0,-9.5,0>, <0,-8.282,6.123> }
		triangle { <0,-8.282,6.123>, <0,-9.5,0>, <-2.343,-8.282,5.657> }
		triangle { <-2.343,-8.282,5.657>, <0,-9.5,0>, <-4.33,-8.282,4.33> }
		triangle { <-4.33,-8.282,4.33>, <0,-9.5,0>, <-5.657,-8.282,2.343> }
		triangle { <-5.657,-8.282,2.343>, <0,-9.5,0>, <-6.123,-8.282,0> }
		triangle { <11.314,-4.814,0>, <6.123,-8.282,0>, <5.657,-8.282,2.343> }
		triangle { <5.657,-8.282,2.343>, <10.452,-4.814,4.33>, <11.314,-4.814,0> }
		triangle { <10.452,-4.814,4.33>, <5.657,-8.282,2.343>, <4.33,-8.282,4.33> }
		triangle { <4.33,-8.282,4.33>, <8,-4.814,8>, <10.452,-4.814,4.33> }
		triangle { <8,-4.814,8>, <4.33,-8.282,4.33>, <2.343,-8.282,5.657> }
		triangle { <2.343,-8.282,5.657>, <4.33,-4.814,10.452>, <8,-4.814,8> }
		triangle { <4.33,-4.814,10.452>, <2.343,-8.282,5.657>, <0,-8.282,6.123> }
		triangle { <0,-8.282,6.123>, <0,-4.814,11.313>, <4.33,-4.814,10.452> }
		triangle { <0,-4.814,11.313>, <0,-8.282,6.123>, <-2.343,-8.282,5.657> }
		triangle { <-2.343,-8.282,5.657>, <-4.33,-4.814,10.452>, <0,-4.814,11.313> }
		triangle { <-4.33,-4.814,10.452>, <-2.343,-8.282,5.657>, <-4.33,-8.282,4.33> }
		triangle { <-4.33,-8.282,4.33>, <-8,-4.814,8>, <-4.33,-4.814,10.452> }
		triangle { <-8,-4.814,8>, <-4.33,-8.282,4.33>, <-5.657,-8.282,2.343> }
		triangle { <-5.657,-8.282,2.343>, <-10.452,-4.814,4.33>, <-8,-4.814,8> }
		triangle { <-10.452,-4.814,4.33>, <-5.657,-8.282,2.343>, <-6.123,-8.282,0> }
		triangle { <-6.123,-8.282,0>, <-11.314,-4.814,0>, <-10.452,-4.814,4.33> }
		triangle { <11.314,-4.814,0>, <13.656,0.377,5.657>, <14.5,0.377,2.5> }
		triangle { <13.656,0.377,5.657>, <11.314,-4.814,0>, <10.452,-4.814,4.33> }
		triangle { <13.656,0.377,5.657>, <10.452,-4.814,4.33>, <8,-4.814,8> }
		triangle { <8,-4.814,8>, <10.452,0.377,10.452>, <13.656,0.377,5.657> }
		triangle { <10.452,0.377,10.452>, <8,-4.814,8>, <4.33,-4.814,10.452> }
		triangle { <4.33,-4.814,10.452>, <5.657,0.377,13.656>, <10.452,0.377,10.452> }
		triangle { <5.657,0.377,13.656>, <4.33,-4.814,10.452>, <0,-4.814,11.313> }
		triangle { <0,-4.814,11.313>, <0,0.377,14.781>, <5.657,0.377,13.656> }
		triangle { <0,0.377,14.781>, <0,-4.814,11.313>, <-4.33,-4.814,10.452> }
		triangle { <-4.33,-4.814,10.452>, <-5.657,0.377,13.656>, <0,0.377,14.781> }
		triangle { <-5.657,0.377,13.656>, <-4.33,-4.814,10.452>, <-8,-4.814,8> }
		triangle { <-8,-4.814,8>, <-10.452,0.377,10.452>, <-5.657,0.377,13.656> }
		triangle { <-10.452,0.377,10.452>, <-8,-4.814,8>, <-10.452,-4.814,4.33> }
		triangle { <-10.452,-4.814,4.33>, <-13.656,0.377,5.657>, <-10.452,0.377,10.452> }
		triangle { <-11.314,-4.814,0>, <-13.656,0.377,5.657>, <-10.452,-4.814,4.33> }
		triangle { <-11.314,-4.814,0>, <-14.5,0.377,2.5>, <-13.656,0.377,5.657> }
		triangle { <13.656,0.377,5.657>, <15.1,4.778,4.157>, <14.5,0.377,2.5> }
		triangle { <14.783,6.5,6.12>, <15.4,6.5,4.5>, <15.1,4.778,4.157> }
		triangle { <13.656,0.377,5.657>, <14.783,6.5,6.12>, <15.1,4.778,4.157> }
		triangle { <14.783,6.5,6.12>, <13.656,0.377,5.657>, <10.452,0.377,10.452> }
		triangle { <10.452,0.377,10.452>, <11.313,6.5,11.313>, <14.783,6.5,6.12> }
		triangle { <11.313,6.5,11.313>, <10.452,0.377,10.452>, <5.657,0.377,13.656> }
		triangle { <5.657,0.377,13.656>, <6.12,6.5,14.783>, <11.313,6.5,11.313> }
		triangle { <6.12,6.5,14.783>, <5.657,0.377,13.656>, <0,0.377,14.781> }
		triangle { <0,0.377,14.781>, <0,6.5,16>, <6.12,6.5,14.783> }
		triangle { <0,6.5,16>, <0,0.377,14.781>, <-5.657,0.377,13.656> }
		triangle { <-5.657,0.377,13.656>, <-6.12,6.5,14.783>, <0,6.5,16> }
		triangle { <-6.12,6.5,14.783>, <-5.657,0.377,13.656>, <-10.452,0.377,10.452> }
		triangle { <-10.452,0.377,10.452>, <-11.313,6.5,11.313>, <-6.12,6.5,14.783> }
		triangle { <-11.313,6.5,11.313>, <-10.452,0.377,10.452>, <-13.656,0.377,5.657> }
		triangle { <-13.656,0.377,5.657>, <-14.783,6.5,6.12>, <-11.313,6.5,11.313> }
		triangle { <-14.783,6.5,6.12>, <-13.656,0.377,5.657>, <-15.1,4.778,4.157> }
		triangle { <-14.783,6.5,6.12>, <-15.1,4.778,4.157>, <-15.4,6.5,4.5> }
		triangle { <-13.656,0.377,5.657>, <-14.5,0.377,2.5>, <-15.1,4.778,4.157> }
		triangle { <14.119,12.623,5.848>, <15.8,10.657,1.722>, <15.7,9.682,3.182> }
		triangle { <14.119,12.623,5.848>, <15.7,9.682,3.182>, <15.6,8.222,4.157> }
		triangle { <14.783,6.5,6.12>, <15.6,8.222,4.157>, <15.4,6.5,4.5> }
		triangle { <14.783,6.5,6.12>, <14.119,12.623,5.848>, <15.6,8.222,4.157> }
		triangle { <14.783,6.5,6.12>, <11.313,6.5,11.313>, <10.806,12.623,10.806> }
		triangle { <10.806,12.623,10.806>, <14.119,12.623,5.848>, <14.783,6.5,6.12> }
		triangle { <11.313,6.5,11.313>, <6.12,6.5,14.783>, <5.848,12.623,14.119> }
		triangle { <5.848,12.623,14.119>, <10.806,12.623,10.806>, <11.313,6.5,11.313> }
		triangle { <6.12,6.5,14.783>, <0,6.5,16>, <0,12.623,15.282> }
		triangle { <0,12.623,15.282>, <5.848,12.623,14.119>, <6.12,6.5,14.783> }
		triangle { <0,6.5,16>, <-6.12,6.5,14.783>, <-5.848,12.623,14.119> }
		triangle { <-5.848,12.623,14.119>, <0,12.623,15.282>, <0,6.5,16> }
		triangle { <-6.12,6.5,14.783>, <-11.313,6.5,11.313>, <-10.806,12.623,10.806> }
		triangle { <-10.806,12.623,10.806>, <-5.848,12.623,14.119>, <-6.12,6.5,14.783> }
		triangle { <-11.313,6.5,11.313>, <-14.783,6.5,6.12>, <-14.119,12.623,5.848> }
		triangle { <-14.119,12.623,5.848>, <-10.806,12.623,10.806>, <-11.313,6.5,11.313> }
		triangle { <-14.119,12.623,5.848>, <-14.783,6.5,6.12>, <-15.6,8.222,4.157> }
		triangle { <-14.783,6.5,6.12>, <-15.4,6.5,4.5>, <-15.6,8.222,4.157> }
		triangle { <-14.119,12.623,5.848>, <-15.6,8.222,4.157>, <-15.7,9.682,3.182> }
		triangle { <-14.119,12.623,5.848>, <-15.7,9.682,3.182>, <-15.8,10.657,1.722> }
		triangle { <-6.123,-8.282,0>, <0,-9.5,0>, <-5.657,-8.282,-2.87> }
		triangle { <-5.657,-8.282,-2.87>, <0,-9.5,0>, <-4.33,-8.282,-5.3> }
		triangle { <-4.33,-8.282,-5.3>, <0,-9.5,0>, <-2.343,-8.282,-6.929> }
		triangle { <-2.343,-8.282,-6.929>, <0,-9.5,0>, <0,-8.282,-7.5> }
		triangle { <0,-8.282,-7.5>, <0,-9.5,0>, <2.343,-8.282,-6.929> }
		triangle { <2.343,-8.282,-6.929>, <0,-9.5,0>, <4.33,-8.282,-5.3> }
		triangle { <4.33,-8.282,-5.3>, <0,-9.5,0>, <5.657,-8.282,-2.87> }
		triangle { <5.657,-8.282,-2.87>, <0,-9.5,0>, <6.123,-8.282,0> }
		triangle { <-11.314,-4.814,0>, <-6.123,-8.282,0>, <-5.657,-8.282,-2.87> }
		triangle { <-5.657,-8.282,-2.87>, <-10.532,-4.814,-4.822>, <-11.314,-4.814,0> }
		triangle { <-10.532,-4.814,-4.822>, <-5.657,-8.282,-2.87>, <-4.33,-8.282,-5.3> }
		triangle { <-4.33,-8.282,-5.3>, <-8.142,-4.814,-9.2>, <-10.532,-4.814,-4.822> }
		triangle { <-8.142,-4.814,-9.2>, <-4.33,-8.282,-5.3>, <-2.343,-8.282,-6.929> }
		triangle { <-4.35,-4.814,-11.64>, <-8.142,-4.814,-9.2>, <-2.343,-8.282,-6.929> }
		triangle { <-4.35,-4.814,-11.64>, <-2.343,-8.282,-6.929>, <0,-8.282,-7.5> }
		triangle { <0,-8.282,-7.5>, <0,-4.814,-12.7>, <-4.35,-4.814,-11.64> }
		triangle { <0,-4.814,-12.7>, <0,-8.282,-7.5>, <2.343,-8.282,-6.929> }
		triangle { <2.343,-8.282,-6.929>, <4.35,-4.814,-11.64>, <0,-4.814,-12.7> }
		triangle { <4.35,-4.814,-11.64>, <2.343,-8.282,-6.929>, <8.142,-4.814,-9.2> }
		triangle { <2.343,-8.282,-6.929>, <4.33,-8.282,-5.3>, <8.142,-4.814,-9.2> }
		triangle { <8.142,-4.814,-9.2>, <4.33,-8.282,-5.3>, <5.657,-8.282,-2.87> }
		triangle { <5.657,-8.282,-2.87>, <10.532,-4.814,-4.822>, <8.142,-4.814,-9.2> }
		triangle { <10.532,-4.814,-4.822>, <5.657,-8.282,-2.87>, <6.123,-8.282,0> }
		triangle { <6.123,-8.282,0>, <11.314,-4.814,0>, <10.532,-4.814,-4.822> }
		triangle { <-11.314,-4.814,0>, <-13.566,0.377,-5.9>, <-14.5,0.377,2.5> }
		triangle { <-11.314,-4.814,0>, <-10.532,-4.814,-4.822>, <-13.566,0.377,-5.9> }
		triangle { <-13.566,0.377,-5.9>, <-10.532,-4.814,-4.822>, <-8.142,-4.814,-9.2> }
		triangle { <-8.142,-4.814,-9.2>, <-10.61,0.377,-11.315>, <-13.566,0.377,-5.9> }
		triangle { <-10.61,0.377,-11.315>, <-8.142,-4.814,-9.2>, <-4.35,-4.814,-11.64> }
		triangle { <-4.35,-4.814,-11.64>, <-5.357,0.377,-14.695>, <-10.61,0.377,-11.315> }
		triangle { <-5.357,0.377,-14.695>, <-4.35,-4.814,-11.64>, <0,-4.814,-12.7> }
		triangle { <0,-4.814,-12.7>, <0,0.377,-16>, <-5.357,0.377,-14.695> }
		triangle { <0,0.377,-16>, <0,-4.814,-12.7>, <4.35,-4.814,-11.64> }
		triangle { <4.35,-4.814,-11.64>, <5.357,0.377,-14.695>, <0,0.377,-16> }
		triangle { <5.357,0.377,-14.695>, <4.35,-4.814,-11.64>, <8.142,-4.814,-9.2> }
		triangle { <8.142,-4.814,-9.2>, <10.61,0.377,-11.315>, <5.357,0.377,-14.695> }
		triangle { <10.61,0.377,-11.315>, <8.142,-4.814,-9.2>, <10.532,-4.814,-4.822> }
		triangle { <10.532,-4.814,-4.822>, <13.566,0.377,-5.9>, <10.61,0.377,-11.315> }
		triangle { <11.314,-4.814,0>, <13.566,0.377,-5.9>, <10.532,-4.814,-4.822> }
		triangle { <11.314,-4.814,0>, <14.5,0.377,2.5>, <13.566,0.377,-5.9> }
		triangle { <-13.566,0.377,-5.9>, <-14.5,4.5,-6>, <-14.5,0.377,2.5> }
		triangle { <-13.566,0.377,-5.9>, <-13.8,5.5,-8>, <-14.5,4.5,-6> }
		triangle { <-13.8,5.5,-8>, <-14.5,5.881,-6.087>, <-14.5,4.5,-6> }
		triangle { <-13.566,0.377,-5.9>, <-11.031,5.5,-12.2>, <-13.8,5.5,-8> }
		triangle { <-10.61,0.377,-11.315>, <-11.031,5.5,-12.2>, <-13.566,0.377,-5.9> }
		triangle { <-11.031,5.5,-12.2>, <-10.61,0.377,-11.315>, <-5.357,0.377,-14.695> }
		triangle { <-5.357,0.377,-14.695>, <-5.747,5.5,-15.6>, <-11.031,5.5,-12.2> }
		triangle { <-5.747,5.5,-15.6>, <-5.357,0.377,-14.695>, <0,0.377,-16> }
		triangle { <0,0.377,-16>, <0,5.5,-17>, <-5.747,5.5,-15.6> }
		triangle { <0,5.5,-17>, <0,0.377,-16>, <5.357,0.377,-14.695> }
		triangle { <5.357,0.377,-14.695>, <5.747,5.5,-15.6>, <0,5.5,-17> }
		triangle { <5.747,5.5,-15.6>, <5.357,0.377,-14.695>, <10.61,0.377,-11.315> }
		triangle { <10.61,0.377,-11.315>, <11.031,5.5,-12.2>, <5.747,5.5,-15.6> }
		triangle { <11.031,5.5,-12.2>, <10.61,0.377,-11.315>, <13.566,0.377,-5.9> }
		triangle { <13.566,0.377,-5.9>, <13.8,5.5,-8>, <11.031,5.5,-12.2> }
		triangle { <13.566,0.377,-5.9>, <14.5,4.5,-6>, <13.8,5.5,-8> }
		triangle { <13.566,0.377,-5.9>, <14.5,0.377,2.5>, <14.5,4.5,-6> }
		triangle { <14.5,5.881,-6.087>, <13.8,5.5,-8>, <14.5,4.5,-6> }
		triangle { <9.191,21.086,9.191>, <10.607,21.176,8.607>, <5.74,20.676,11.858> }
		triangle { <5.74,20.676,11.858>, <4.975,20.652,12.01>, <9.191,21.086,9.191> }
		triangle { <12.01,21.736,4.975>, <13.858,21.925,3.74>, <10.607,21.176,8.607> }
		triangle { <10.607,21.176,8.607>, <9.191,21.086,9.191>, <12.01,21.736,4.975> }
		triangle { <13,22.5,0>, <15,22.806,-2>, <13.858,21.925,3.74> }
		triangle { <13.858,21.925,3.74>, <12.01,21.736,4.975>, <13,22.5,0> }
		triangle { <12.01,23.268,-4.975>, <13.858,23.692,-7.74>, <15,22.806,-2> }
		triangle { <15,22.806,-2>, <13,22.5,0>, <12.01,23.268,-4.975> }
		triangle { <9.191,23.915,-9.191>, <10.607,24.439,-12.606>, <13.858,23.692,-7.74> }
		triangle { <13.858,23.692,-7.74>, <12.01,23.268,-4.975>, <9.191,23.915,-9.191> }
		triangle { <4.975,24.349,-12.01>, <5.74,24.939,-15.857>, <10.607,24.439,-12.606> }
		triangle { <10.607,24.439,-12.606>, <9.191,23.915,-9.191>, <4.975,24.349,-12.01> }
		triangle { <0,24.5,-13>, <0,25.113,-17>, <5.74,24.939,-15.857> }
		triangle { <5.74,24.939,-15.857>, <4.975,24.349,-12.01>, <0,24.5,-13> }
		triangle { <0,24.5,-13>, <-4.975,24.349,-12.01>, <-5.74,24.939,-15.857> }
		triangle { <-5.74,24.939,-15.857>, <0,25.113,-17>, <0,24.5,-13> }
		triangle { <-4.975,24.349,-12.01>, <-9.191,23.915,-9.191>, <-10.607,24.439,-12.606> }
		triangle { <-10.607,24.439,-12.606>, <-5.74,24.939,-15.857>, <-4.975,24.349,-12.01> }
		triangle { <-9.191,23.915,-9.191>, <-12.01,23.268,-4.975>, <-13.858,23.692,-7.74> }
		triangle { <-13.858,23.692,-7.74>, <-10.607,24.439,-12.606>, <-9.191,23.915,-9.191> }
		triangle { <-12.01,23.268,-4.975>, <-13,22.5,0>, <-15,22.806,-2> }
		triangle { <-15,22.806,-2>, <-13.858,23.692,-7.74>, <-12.01,23.268,-4.975> }
		triangle { <-13,22.5,0>, <-12.01,21.736,4.975>, <-13.858,21.925,3.74> }
		triangle { <-13.858,21.925,3.74>, <-15,22.806,-2>, <-13,22.5,0> }
		triangle { <-12.01,21.736,4.975>, <-9.191,21.086,9.191>, <-10.607,21.176,8.607> }
		triangle { <-10.607,21.176,8.607>, <-13.858,21.925,3.74>, <-12.01,21.736,4.975> }
		triangle { <-9.191,21.086,9.191>, <-4.975,20.652,12.01>, <-5.74,20.676,11.858> }
		triangle { <-5.74,20.676,11.858>, <-10.607,21.176,8.607>, <-9.191,21.086,9.191> }
		triangle { <15,22.808,-2>, <15.5,13.996,-6.01>, <15.8,10.657,1.722> }
		triangle { <13.858,23.691,-7.74>, <15.5,13.996,-6.01>, <15,22.808,-2> }
		triangle { <11.7,16.795,-12.6>, <15.5,13.996,-6.01>, <13.858,23.691,-7.74> }
		triangle { <10.607,24.439,-12.607>, <11.7,16.795,-12.6>, <13.858,23.691,-7.74> }
		triangle { <6.31,18.663,-16.97>, <11.7,16.795,-12.6>, <10.607,24.439,-12.607> }
		triangle { <5.74,24.94,-15.857>, <6.31,18.663,-16.97>, <10.607,24.439,-12.607> }
		triangle { <0,19.322,-18.5>, <6.31,18.663,-16.97>, <5.74,24.94,-15.857> }
		triangle { <0,25.115,-17>, <0,19.322,-18.5>, <5.74,24.94,-15.857> }
		triangle { <0,19.322,-18.5>, <0,25.115,-17>, <-5.74,24.94,-15.857> }
		triangle { <0,19.322,-18.5>, <-5.74,24.94,-15.857>, <-6.31,18.663,-16.97> }
		triangle { <-5.74,24.94,-15.857>, <-10.607,24.439,-12.607>, <-6.31,18.663,-16.97> }
		triangle { <-6.31,18.663,-16.97>, <-10.607,24.439,-12.607>, <-11.7,16.795,-12.6> }
		triangle { <-10.607,24.439,-12.607>, <-13.858,23.691,-7.74>, <-11.7,16.795,-12.6> }
		triangle { <-11.7,16.795,-12.6>, <-13.858,23.691,-7.74>, <-15.5,13.996,-6.01> }
		triangle { <-13.858,23.691,-7.74>, <-15,22.808,-2>, <-15.5,13.996,-6.01> }
		triangle { <-15.5,13.996,-6.01>, <-15,22.808,-2>, <-15.8,10.657,1.722> }
		triangle { <-15.8,10.657,1.722>, <-15,22.808,-2>, <-13.858,21.925,3.74> }
		triangle { <-15.8,10.657,1.722>, <-13.858,21.925,3.74>, <-14.119,12.623,5.848> }
		triangle { <-13.858,21.925,3.74>, <-10.607,21.176,8.607>, <-14.119,12.623,5.848> }
		triangle { <-14.119,12.623,5.848>, <-10.607,21.176,8.607>, <-10.806,12.623,10.806> }
		triangle { <-10.607,21.176,8.607>, <-5.74,20.676,11.858>, <-10.806,12.623,10.806> }
		triangle { <-10.806,12.623,10.806>, <-5.74,20.676,11.858>, <-5.848,12.623,14.119> }
		triangle { <-5.848,12.623,14.119>, <-5.74,20.676,11.858>, <0,20.5,13> }
		triangle { <-5.848,12.623,14.119>, <0,20.5,13>, <0,12.623,15.282> }
		triangle { <5.848,12.623,14.119>, <0,12.623,15.282>, <0,20.5,13> }
		triangle { <5.74,20.676,11.858>, <5.848,12.623,14.119>, <0,20.5,13> }
		triangle { <10.806,12.623,10.806>, <5.848,12.623,14.119>, <5.74,20.676,11.858> }
		triangle { <10.607,21.176,8.607>, <10.806,12.623,10.806>, <5.74,20.676,11.858> }
		triangle { <14.119,12.623,5.848>, <10.806,12.623,10.806>, <10.607,21.176,8.607> }
		triangle { <13.858,21.925,3.74>, <14.119,12.623,5.848>, <10.607,21.176,8.607> }
		triangle { <15.8,10.657,1.722>, <14.119,12.623,5.848>, <13.858,21.925,3.74> }
		triangle { <15,22.808,-2>, <15.8,10.657,1.722>, <13.858,21.925,3.74> }
		triangle { <14.5,0.377,2.5>, <15.1,4.778,4.157>, <14.5,4.778,4.157> }
		triangle { <14.5,4.778,4.157>, <15.1,4.778,4.157>, <15.4,6.5,4.5> }
		triangle { <15.4,6.5,4.5>, <14.5,6.5,4.5>, <14.5,4.778,4.157> }
		triangle { <14.5,6.5,4.5>, <15.4,6.5,4.5>, <15.6,8.222,4.157> }
		triangle { <15.6,8.222,4.157>, <14.5,8.222,4.157>, <14.5,6.5,4.5> }
		triangle { <14.5,8.222,4.157>, <15.6,8.222,4.157>, <15.7,9.682,3.182> }
		triangle { <15.7,9.682,3.182>, <14.5,9.682,3.182>, <14.5,8.222,4.157> }
		triangle { <14.5,9.682,3.182>, <15.7,9.682,3.182>, <15.8,10.657,1.722> }
		triangle { <15.8,10.657,1.722>, <14.5,10.657,1.722>, <14.5,9.682,3.182> }
		triangle { <14.5,10.657,1.722>, <15.8,10.657,1.722>, <15.5,14.017,-6.01> }
		triangle { <15.5,14.017,-6.01>, <14.5,13.36,-4.5>, <14.5,10.657,1.722> }
		triangle { <-15.8,10.657,1.722>, <-14.5,10.657,1.722>, <-14.5,13.36,-4.5> }
		triangle { <-14.5,13.36,-4.5>, <-15.5,14.017,-6.01>, <-15.8,10.657,1.722> }
		triangle { <-15.7,9.682,3.182>, <-14.5,9.682,3.182>, <-14.5,10.657,1.722> }
		triangle { <-14.5,10.657,1.722>, <-15.8,10.657,1.722>, <-15.7,9.682,3.182> }
		triangle { <-15.6,8.222,4.157>, <-14.5,8.222,4.157>, <-14.5,9.682,3.182> }
		triangle { <-14.5,9.682,3.182>, <-15.7,9.682,3.182>, <-15.6,8.222,4.157> }
		triangle { <-15.4,6.5,4.5>, <-14.5,6.5,4.5>, <-14.5,8.222,4.157> }
		triangle { <-14.5,8.222,4.157>, <-15.6,8.222,4.157>, <-15.4,6.5,4.5> }
		triangle { <-15.1,4.778,4.157>, <-14.5,4.778,4.157>, <-14.5,6.5,4.5> }
		triangle { <-14.5,6.5,4.5>, <-15.4,6.5,4.5>, <-15.1,4.778,4.157> }
		triangle { <-14.5,0.377,2.5>, <-14.5,4.778,4.157>, <-15.1,4.778,4.157> }
		triangle { <14.5,10.5,-3>, <14.5,8,0>, <14.5,10.657,1.722> }
		triangle { <14.5,10.657,1.722>, <14.5,13.36,-4.5>, <14.5,10.5,-3> }
		triangle { <14.5,8.59,-3.38>, <14.5,8,-1.5>, <14.5,8,0> }
		triangle { <14.5,8,0>, <14.5,10.5,-3>, <14.5,8.59,-3.38> }
		triangle { <14.5,6.96,-4.46>, <14.5,5,-1.5>, <14.5,8,-1.5> }
		triangle { <14.5,8,-1.5>, <14.5,8.59,-3.38>, <14.5,6.96,-4.46> }
		triangle { <14.5,4.5,-6>, <14.5,0.377,2.5>, <14.5,5.881,-6.087> }
		triangle { <14.5,0.377,2.5>, <14.5,5,-1.5>, <14.5,6.96,-4.46> }
		triangle { <14.5,6.96,-4.46>, <14.5,5.881,-6.087>, <14.5,0.377,2.5> }
		triangle { <14.5,0.377,2.5>, <14.5,5,1.5>, <14.5,5,-1.5> }
		triangle { <14.5,0.377,2.5>, <14.5,4.778,4.157>, <14.5,6.5,1.5> }
		triangle { <14.5,6.5,1.5>, <14.5,5,1.5>, <14.5,0.377,2.5> }
		triangle { <14.5,6.5,1.5>, <14.5,4.778,4.157>, <14.5,6.5,4.5> }
		triangle { <14.5,6.5,4.5>, <14.5,8.222,4.157>, <14.5,6.5,1.5> }
		triangle { <14.5,6.5,1.5>, <14.5,8.222,4.157>, <14.5,9.682,3.182> }
		triangle { <14.5,9.682,3.182>, <14.5,8,1.5>, <14.5,6.5,1.5> }
		triangle { <14.5,8,1.5>, <14.5,9.682,3.182>, <14.5,10.657,1.722> }
		triangle { <14.5,10.657,1.722>, <14.5,8,0>, <14.5,8,1.5> }
		triangle { <-14.5,8,0>, <-14.5,10.657,1.722>, <-14.5,9.682,3.182> }
		triangle { <-14.5,9.682,3.182>, <-14.5,8,1.5>, <-14.5,8,0> }
		triangle { <-14.5,8,1.5>, <-14.5,9.682,3.182>, <-14.5,8.222,4.157> }
		triangle { <-14.5,8.222,4.157>, <-14.5,6.5,1.5>, <-14.5,8,1.5> }
		triangle { <-14.5,4.778,4.157>, <-14.5,6.5,1.5>, <-14.5,8.222,4.157> }
		triangle { <-14.5,8.222,4.157>, <-14.5,6.5,4.5>, <-14.5,4.778,4.157> }
		triangle { <-14.5,4.778,4.157>, <-14.5,0.377,2.5>, <-14.5,5,1.5> }
		triangle { <-14.5,5,1.5>, <-14.5,6.5,1.5>, <-14.5,4.778,4.157> }
		triangle { <-14.5,0.377,2.5>, <-14.5,5,-1.5>, <-14.5,5,1.5> }
		triangle { <-14.5,5,-1.5>, <-14.5,0.377,2.5>, <-14.5,5.881,-6.087> }
		triangle { <-14.5,5.881,-6.087>, <-14.5,6.96,-4.46>, <-14.5,5,-1.5> }
		triangle { <-14.5,4.5,-6>, <-14.5,5.881,-6.087>, <-14.5,0.377,2.5> }
		triangle { <-14.5,8.59,-3.38>, <-14.5,8,-1.5>, <-14.5,5,-1.5> }
		triangle { <-14.5,5,-1.5>, <-14.5,6.96,-4.46>, <-14.5,8.59,-3.38> }
		triangle { <-14.5,10.5,-3>, <-14.5,8,0>, <-14.5,8,-1.5> }
		triangle { <-14.5,8,-1.5>, <-14.5,8.59,-3.38>, <-14.5,10.5,-3> }
		triangle { <-14.5,8,0>, <-14.5,10.5,-3>, <-14.5,13.36,-4.5> }
		triangle { <-14.5,13.36,-4.5>, <-14.5,10.657,1.722>, <-14.5,8,0> }
		triangle { <13.8,5.5,-8>, <14.5,5.881,-6.087>, <11.267,5.881,-6.087> }
		triangle { <11.267,5.881,-6.087>, <9.989,5.5,-8>, <13.8,5.5,-8> }
		triangle { <14.5,5.881,-6.087>, <14.5,6.623,-4.975>, <12.01,6.623,-4.975> }
		triangle { <12.01,6.623,-4.975>, <11.267,5.881,-6.087>, <14.5,5.881,-6.087> }
		triangle { <12.112,6.96,-4.46>, <12.01,6.623,-4.975>, <14.5,6.623,-4.975> }
		triangle { <14.5,6.623,-4.975>, <14.5,6.96,-4.46>, <12.112,6.96,-4.46> }
		triangle { <14.5,6.96,-4.46>, <14.5,8.59,-3.38>, <12.324,8.59,-3.38> }
		triangle { <12.324,8.59,-3.38>, <12.112,6.96,-4.46>, <14.5,6.96,-4.46> }
		triangle { <14.5,8.59,-3.38>, <14.5,10.5,-3>, <12.4,10.5,-3> }
		triangle { <12.4,10.5,-3>, <12.324,8.59,-3.38>, <14.5,8.59,-3.38> }
		triangle { <14.5,10.5,-3>, <14.5,13.36,-4.5>, <12.112,13.36,-4.5> }
		triangle { <12.112,13.36,-4.5>, <12.4,10.5,-3>, <14.5,10.5,-3> }
		triangle { <-9.989,5.5,-8>, <-11.267,5.881,-6.087>, <-14.5,5.881,-6.087> }
		triangle { <-14.5,5.881,-6.087>, <-13.8,5.5,-8>, <-9.989,5.5,-8> }
		triangle { <-11.267,5.881,-6.087>, <-12.01,6.623,-4.975>, <-14.5,6.623,-4.975> }
		triangle { <-14.5,6.623,-4.975>, <-14.5,5.881,-6.087>, <-11.267,5.881,-6.087> }
		triangle { <-14.5,6.96,-4.46>, <-14.5,6.623,-4.975>, <-12.01,6.623,-4.975> }
		triangle { <-12.01,6.623,-4.975>, <-12.112,6.96,-4.46>, <-14.5,6.96,-4.46> }
		triangle { <-12.112,6.96,-4.46>, <-12.324,8.59,-3.38>, <-14.5,8.59,-3.38> }
		triangle { <-14.5,8.59,-3.38>, <-14.5,6.96,-4.46>, <-12.112,6.96,-4.46> }
		triangle { <-12.324,8.59,-3.38>, <-12.4,10.5,-3>, <-14.5,10.5,-3> }
		triangle { <-14.5,10.5,-3>, <-14.5,8.59,-3.38>, <-12.324,8.59,-3.38> }
		triangle { <-12.4,10.5,-3>, <-12.112,13.36,-4.5>, <-14.5,13.36,-4.5> }
		triangle { <-14.5,13.36,-4.5>, <-14.5,10.5,-3>, <-12.4,10.5,-3> }
		triangle { <14.5,13.36,-4.5>, <15.5,14.017,-6.01>, <12.01,13.568,-4.975> }
		triangle { <12.01,13.568,-4.975>, <12.112,13.36,-4.5>, <14.5,13.36,-4.5> }
		triangle { <15.5,14.017,-6.01>, <11.7,16.795,-12.6>, <9.191,15.344,-9.191> }
		triangle { <9.191,15.344,-9.191>, <12.01,13.568,-4.975>, <15.5,14.017,-6.01> }
		triangle { <11.7,16.795,-12.6>, <6.31,18.663,-16.97>, <4.975,16.55,-12.01> }
		triangle { <4.975,16.55,-12.01>, <9.191,15.344,-9.191>, <11.7,16.795,-12.6> }
		triangle { <6.31,18.663,-16.97>, <0,19.32,-18.5>, <0,16.976,-13> }
		triangle { <0,16.976,-13>, <4.975,16.55,-12.01>, <6.31,18.663,-16.97> }
		triangle { <-4.975,16.55,-12.01>, <0,16.976,-13>, <0,19.32,-18.5> }
		triangle { <0,19.32,-18.5>, <-6.31,18.663,-16.97>, <-4.975,16.55,-12.01> }
		triangle { <-6.31,18.663,-16.97>, <-11.7,16.795,-12.6>, <-9.191,15.344,-9.191> }
		triangle { <-9.191,15.344,-9.191>, <-4.975,16.55,-12.01>, <-6.31,18.663,-16.97> }
		triangle { <-11.7,16.795,-12.6>, <-15.5,14.017,-6.01>, <-12.01,13.568,-4.975> }
		triangle { <-12.01,13.568,-4.975>, <-9.191,15.344,-9.191>, <-11.7,16.795,-12.6> }
		triangle { <-12.112,13.36,-4.5>, <-12.01,13.568,-4.975>, <-15.5,14.017,-6.01> }
		triangle { <-15.5,14.017,-6.01>, <-14.5,13.36,-4.5>, <-12.112,13.36,-4.5> }
		triangle { <9.989,5.5,-8>, <9.191,5.5,-9.191>, <11.031,5.5,-12.2> }
		triangle { <11.031,5.5,-12.2>, <13.8,5.5,-8>, <9.989,5.5,-8> }
		triangle { <5.74,5.5,-15.6>, <11.031,5.5,-12.2>, <9.191,5.5,-9.191> }
		triangle { <9.191,5.5,-9.191>, <4.975,5.5,-12.01>, <5.74,5.5,-15.6> }
		triangle { <4.975,5.5,-12.01>, <0,5.5,-13>, <0,5.5,-17> }
		triangle { <0,5.5,-17>, <5.74,5.5,-15.6>, <4.975,5.5,-12.01> }
		triangle { <-5.74,5.5,-15.6>, <0,5.5,-17>, <0,5.5,-13> }
		triangle { <0,5.5,-13>, <-4.975,5.5,-12.01>, <-5.74,5.5,-15.6> }
		triangle { <-11.031,5.5,-12.2>, <-5.74,5.5,-15.6>, <-4.975,5.5,-12.01> }
		triangle { <-4.975,5.5,-12.01>, <-9.191,5.5,-9.191>, <-11.031,5.5,-12.2> }
		triangle { <-13.8,5.5,-8>, <-11.031,5.5,-12.2>, <-9.191,5.5,-9.191> }
		triangle { <-9.191,5.5,-9.191>, <-9.989,5.5,-8>, <-13.8,5.5,-8> }
	}
	object { _4_dash_4ndis_dot_dat matrix <0,1.5,0,-1,0,0,0,0,1.5,14.5,6.5,0> }
	object { _4_dash_4ndis_dot_dat matrix <0,-1.5,0,1,0,0,0,0,1.5,-14.5,6.5,0> }
// BFC INVERTNEXT
	object { _4_dash_8sphe_dot_dat matrix <0,1.5,0,-1,0,0,0,0,1.5,14.5,6.5,0> }
// BFC INVERTNEXT
	object { _4_dash_8sphe_dot_dat matrix <0,-1.5,0,1,0,0,0,0,1.5,-14.5,6.5,0> }
}
#end
#end // ifndef (_2446_dot_dat)


//// Primitive 1-4disc.dat
#ifndef (_1_dash_4disc_dot_dat)
#declare _1_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { plane { -x, 0 } plane { -z, 0 } } }
#end // ifndef (_1_dash_4disc_dot_dat)


//// Primitive 1-8disc.dat
#ifndef (_1_dash_8disc_dot_dat)
#declare _1_dash_8disc_dot_dat = disc {
	<0,0,0>, <0,1,0>, 1
	clipped_by { plane { -z,0 } plane { <-1,0,1>,0 } }
}
#end // ifndef (_1_dash_8disc_dot_dat)


//// Primitive 1-4rin15.dat
#ifndef (_1_dash_4rin15_dot_dat)
#declare _1_dash_4rin15_dot_dat = disc {
	<0,0,0>, <0,1,0>, 16, 15
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4rin15_dot_dat)


//// Primitive 1-4rin16.dat
#ifndef (_1_dash_4rin16_dot_dat)
#declare _1_dash_4rin16_dot_dat = disc {
	<0,0,0>, <0,1,0>, 17, 16
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4rin16_dot_dat)


//// Primitive 1-4cyls2.dat
#ifndef (_1_dash_4cyls2_dot_dat)
#declare _1_dash_4cyls2_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,0 } }
}
#end // ifndef (_1_dash_4cyls2_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 3-16cyli.dat
#ifndef (_3_dash_16cyli_dot_dat)
#declare _3_dash_16cyli_dot_dat = object {
// Cylinder 0.1875
// Name: 3-16cyli.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2005-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2004-03-02 [PTadmin] Official Update 2004-01
// !HISTORY 2004-12-11 [nielsk] Recreated using Primitive Generator, Edge lines fixed, BFC changed to CCW
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	mesh {
		triangle { <0.9239,1,0.3827>, <0.9239,0,0.3827>, <1,0,0> }
		triangle { <1,0,0>, <1,1,0>, <0.9239,1,0.3827> }
		triangle { <0.7071,1,0.7071>, <0.7071,0,0.7071>, <0.9239,0,0.3827> }
		triangle { <0.9239,0,0.3827>, <0.9239,1,0.3827>, <0.7071,1,0.7071> }
		triangle { <0.3827,1,0.9239>, <0.3827,0,0.9239>, <0.7071,0,0.7071> }
		triangle { <0.7071,0,0.7071>, <0.7071,1,0.7071>, <0.3827,1,0.9239> }
	}
}
#end // ifndef (_3_dash_16cyli_dot_dat)


//// Primitive rect2p.dat
#ifndef (rect2p_dot_dat)
#declare rect2p_dot_dat = object {
// Rectangle with 2 Parallel Edges
// Name: rect2p.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect2p_dot_dat)


//// Part 2447.dat
#ifndef (_2447_dot_dat)
#declare _2447_dot_dat = #if (L3Quality = 0) box { <-17,2.5,-20>, <17,19.5,4> } #else union {
// Minifig Helmet Visor
// Name: 2447.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !HISTORY 1998-10-15 [PTadmin] Official Update 1998-09
// !HISTORY 2000-08-30 [sbliss] Replaced polygons in lower section of visor with 2-4cyls2 and rings.
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2002-06-11 [PTadmin] Official Update 2002-03
// !HISTORY 2003-02-01 [technog] BFC'd, repositioned to match helmet
// !HISTORY 2004-03-02 [PTadmin] Official Update 2004-01
// !HISTORY 2007-05-12 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [DeannaEarley] Removed erroneous BFC Certifies (2005-11-13)
// !HISTORY 2009-05-02 [PTadmin] Official Update 2009-01
// !HISTORY 2012-12-24 [cwdee] Add category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { _1_dash_4disc_dot_dat matrix <0,-4,0,-1,0,0,0,0,4,-15,6.5,0> }
	object { _1_dash_8disc_dot_dat matrix <0,0,4,-1,0,0,0,4,0,-15,6.5,0> }
	mesh {
		triangle { <-15,6.5,0>, <-15,9.328,2.828>, <-15,10.195,1.531> }
		triangle { <-15,10.195,1.531>, <-15,10.8,0>, <-15,6.5,0> }
		triangle { <-15,2.5,-3>, <-15,2.5,0>, <-15,10.8,0> }
		triangle { <-15,10.8,0>, <-15,12.005,-3>, <-15,2.5,-3> }
	}
	object { _1_dash_4disc_dot_dat matrix <0,-4,0,1,0,0,0,0,4,15,6.5,0> }
	object { _1_dash_8disc_dot_dat matrix <0,0,4,1,0,0,0,4,0,15,6.5,0> }
	mesh {
		triangle { <15,9.328,2.828>, <15,6.5,0>, <15,10.8,0> }
		triangle { <15,10.8,0>, <15,10.195,1.531>, <15,9.328,2.828> }
		triangle { <15,2.5,0>, <15,2.5,-3>, <15,12.002,-3> }
		triangle { <15,12.002,-3>, <15,10.8,0>, <15,2.5,0> }
	}
	object { _1_dash_4disc_dot_dat matrix <0,-4,0,1,0,0,0,0,4,-17,6.5,0> }
	object { _1_dash_8disc_dot_dat matrix <0,0,4,1,0,0,0,4,0,-17,6.5,0> }
	mesh {
		triangle { <-17,9.328,2.828>, <-17,6.5,0>, <-17,10.8,0> }
		triangle { <-17,10.8,0>, <-17,10.195,1.531>, <-17,9.328,2.828> }
		triangle { <-17,2.5,0>, <-17,2.5,-3>, <-17,12.002,-3> }
		triangle { <-17,12.002,-3>, <-17,10.8,0>, <-17,2.5,0> }
	}
	object { _1_dash_4disc_dot_dat matrix <0,-4,0,-1,0,0,0,0,4,17,6.5,0> }
	object { _1_dash_8disc_dot_dat matrix <0,0,4,-1,0,0,0,4,0,17,6.5,0> }
	mesh {
		triangle { <17,6.5,0>, <17,9.328,2.828>, <17,10.195,1.531> }
		triangle { <17,10.195,1.531>, <17,10.8,0>, <17,6.5,0> }
		triangle { <17,2.5,-3>, <17,2.5,0>, <17,10.8,0> }
		triangle { <17,10.8,0>, <17,12.005,-3>, <17,2.5,-3> }
	}
	object { _1_dash_4rin15_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,2.5,-3> }
	object { _1_dash_4rin16_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,2.5,-3> }
	object { _1_dash_4rin15_dot_dat matrix <-1,0,0,0,1,0,0,0,-1,0,2.5,-3> }
	object { _1_dash_4rin16_dot_dat matrix <-1,0,0,0,1,0,0,0,-1,0,2.5,-3> }
	object { _1_dash_4rin15_dot_dat matrix <0,0.44,-1,0,-1,0,1,0,0,0,12.005,-3> }
	object { _1_dash_4rin16_dot_dat matrix <0,0.44,-1,0,-1,0,1,0,0,0,12.005,-3> }
	object { _1_dash_4rin15_dot_dat matrix <-1,0,0,0,-1,0,0,0.44,-1,0,12.005,-3> }
	object { _1_dash_4rin16_dot_dat matrix <-1,0,0,0,-1,0,0,0.44,-1,0,12.005,-3> }
// BFC INVERTNEXT
	object { _2_dash_4cyli_dot_dat matrix <15,0,0,0,9.505,0,0,0,-15,0,2.5,-3> }
// BFC INVERTNEXT
	object { _1_dash_4cyls2_dot_dat matrix <0,0,15,0,6.613,0,15,0,0,0,12.005,-3> }
// BFC INVERTNEXT
	object { _1_dash_4cyls2_dot_dat matrix <0,0,15,0,6.613,0,-15,0,0,0,12.005,-3> }
	object { _2_dash_4cyli_dot_dat matrix <17,0,0,0,9.505,0,0,0,-17,0,2.5,-3> }
	object { _1_dash_4cyls2_dot_dat matrix <0,0,17,0,7.495,0,17,0,0,0,12.005,-3> }
	object { _1_dash_4cyls2_dot_dat matrix <0,0,17,0,7.495,0,-17,0,0,0,12.005,-3> }
	object { _1_dash_4cyli_dot_dat matrix <0,-4,0,-2,0,0,0,0,4,17,6.5,0> }
	object { _3_dash_16cyli_dot_dat matrix <0,0,4,-2,0,0,0,4,0,17,6.5,0> }
	object { rect2p_dot_dat matrix <0,0,1.5,0,1,0,1,0,0,16,2.5,-1.5> }
	object { rect2p_dot_dat matrix <0,0,1.5,0,1,0,1,0,0,-16,2.5,-1.5> }
	object { rect2p_dot_dat matrix <0,-0.905,2.265,0,-1,0,1,0,0,16,11.1,-0.734> }
	object { rect2p_dot_dat matrix <0,-0.905,2.265,0,-1,0,1,0,0,-16,11.1,-0.734> }
	object { _3_dash_16cyli_dot_dat matrix <0,0,4,-2,0,0,0,4,0,-15,6.5,0> }
	object { _1_dash_4cyli_dot_dat matrix <0,-4,0,-2,0,0,0,0,4,-15,6.5,0> }
	object { _4_dash_8sphe_dot_dat matrix <0,1.5,0,-1,0,0,0,0,1.5,15,6.5,0> }
	object { _4_dash_8sphe_dot_dat matrix <0,-1.5,0,1,0,0,0,0,1.5,-15,6.5,0> }
}
#end
#end // ifndef (_2447_dot_dat)


//// Model helmet_015_modernbike.ldr
#ifndef (helmet__015__modernbike_dot_ldr)
#declare helmet__015__modernbike_dot_ldr = union {
// Untitled
// Name: helmet_015_modernbike.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 9  0 -8 2  1 0 0  0 1 0  0 0 1 2446.dat
	object {
		_2446_dot_dat
		matrix <1-L3SW/31.6,0,0,0,1-L3SW/34.615,0,0,0,1-L3SW/34.5,0,L3SW/4.43356,L3SW/-27.6>
		matrix <1,0,0,0,1,0,0,0,1,0,-8,2>
		material { L3Color9 }
	}
	// 1 40  0 -8 2  1 0 0  0 1 0  0 0 1 2447.dat
	object {
		_2447_dot_dat
		matrix <1-L3SWT/34,0,0,0,1-L3SWT/17,0,0,0,1-L3SWT/24,0,L3SWT/1.54545,L3SWT/-3>
		matrix <1,0,0,0,1,0,0,0,1,0,-8,2>
		material { L3Color40 }
	}
}
#end // ifndef (helmet__015__modernbike_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-17,-17.5,-18>;
#declare L3ModelBBoxMax = <17,17.115,18>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-0.1925,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <34,34.615,36>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject helmet_015_modernbike.ldr
object { helmet__015__modernbike_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        3            21            25
// POV Equivs:       -            13 (62%)
// Model has 3 parts (1 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
