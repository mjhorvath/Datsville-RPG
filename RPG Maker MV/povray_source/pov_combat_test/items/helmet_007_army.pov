// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:39 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_007_army.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_007_army.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_007_army.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 288 Dark_Green (from ldconfig.ldr)
#ifndef (L3Texture288)
#declare L3Texture288 = L3TextureOpaqueRGB(24,70,50)
#end
#ifndef (L3Texture288_slope)
#declare L3Texture288_slope = L3TextureSlope(L3Texture288)
#end
#ifndef (L3Color288)
#declare L3Color288 = L3Material(L3Texture288)
#end
#ifndef (L3Color288_slope)
#declare L3Color288_slope = L3Material(L3Texture288_slope)
#end


//// Primitive t04o6250.dat
#ifndef (t04o6250_dot_dat)
#declare t04o6250_dot_dat = torus {
	1, 6250/9999
	clipped_by {
		difference {
			box { <0,0,0>, <2,1,2> }
			cylinder { <0,0,0>, <0,1,0>, 1 open }
		}
	}
}
#end // ifndef (t04o6250_dot_dat)


//// Part s\87998s01.dat
#ifndef (s_slash_87998s01_dot_dat)
#declare s_slash_87998s01_dot_dat = #if (L3Quality = 0) box { <0,-10,-18.4>, <17.5,12.1,16.6> } #else union {
// ~Minifig Helmet Army Half without Front
// Name: s\87998s01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2011-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
	mesh {
		triangle { <0,4.2,-18.4>, <0,6.2,-18.4>, <3.414,6.2,-18.064> }
		triangle { <3.414,6.2,-18.064>, <3.414,4.2,-18.064>, <0,4.2,-18.4> }
		triangle { <0,6.2,-18.4>, <0,6.2,-15.7>, <2.888,6.2,-15.416> }
		triangle { <2.888,6.2,-15.416>, <3.414,6.2,-18.064>, <0,6.2,-18.4> }
		triangle { <3.414,6.5,16.264>, <3.414,8.5,16.264>, <0,8,16.6> }
		triangle { <0,8,16.6>, <0,6,16.6>, <3.414,6.5,16.264> }
		triangle { <0,8,16.6>, <3.414,8.5,16.264>, <2.888,8.5,13.616> }
		triangle { <0,8,16.6>, <2.888,8.5,13.616>, <0,8,13.9> }
		triangle { <6.697,7.5,15.268>, <6.697,9.5,15.268>, <3.414,8.5,16.264> }
		triangle { <3.414,8.5,16.264>, <3.414,6.5,16.264>, <6.697,7.5,15.268> }
		triangle { <3.414,8.5,16.264>, <6.697,9.5,15.268>, <5.664,9.5,12.774> }
		triangle { <3.414,8.5,16.264>, <5.664,9.5,12.774>, <2.888,8.5,13.616> }
		triangle { <9.723,8.7,13.651>, <9.723,10.7,13.651>, <6.697,9.5,15.268> }
		triangle { <6.697,9.5,15.268>, <6.697,7.5,15.268>, <9.723,8.7,13.651> }
		triangle { <6.697,9.5,15.268>, <9.723,10.7,13.651>, <8.223,10.7,11.406> }
		triangle { <6.697,9.5,15.268>, <8.223,10.7,11.406>, <5.664,9.5,12.774> }
		triangle { <12.374,9.3,11.474>, <12.374,11.3,11.474>, <9.723,10.7,13.651> }
		triangle { <9.723,10.7,13.651>, <9.723,8.7,13.651>, <12.374,9.3,11.474> }
		triangle { <9.723,10.7,13.651>, <12.374,11.3,11.474>, <10.465,11.3,9.565> }
		triangle { <9.723,10.7,13.651>, <10.465,11.3,9.565>, <8.223,10.7,11.406> }
		triangle { <14.551,9.6,8.823>, <14.551,11.6,8.823>, <12.374,11.3,11.474> }
		triangle { <12.374,11.3,11.474>, <12.374,9.3,11.474>, <14.551,9.6,8.823> }
		triangle { <12.374,11.3,11.474>, <14.551,11.6,8.823>, <12.306,11.6,7.323> }
		triangle { <12.374,11.3,11.474>, <12.306,11.6,7.323>, <10.465,11.3,9.565> }
		triangle { <16.168,9.9,5.797>, <16.168,11.9,5.797>, <14.551,11.6,8.823> }
		triangle { <14.551,11.6,8.823>, <14.551,9.6,8.823>, <16.168,9.9,5.797> }
		triangle { <14.551,11.6,8.823>, <16.168,11.9,5.797>, <13.674,11.9,4.764> }
		triangle { <14.551,11.6,8.823>, <13.674,11.9,4.764>, <12.306,11.6,7.323> }
		triangle { <17.164,10,2.514>, <17.164,12,2.514>, <16.168,11.9,5.797> }
		triangle { <16.168,11.9,5.797>, <16.168,9.9,5.797>, <17.164,10,2.514> }
		triangle { <16.168,11.9,5.797>, <17.164,12,2.514>, <14.516,12,1.988> }
		triangle { <14.516,12,1.988>, <13.674,11.9,4.764>, <16.168,11.9,5.797> }
		triangle { <17.5,10.1,-0.9>, <17.5,12.1,-0.9>, <17.164,12,2.514> }
		triangle { <17.164,12,2.514>, <17.164,10,2.514>, <17.5,10.1,-0.9> }
		triangle { <17.164,12,2.514>, <17.5,12.1,-0.9>, <14.8,12.1,-0.9> }
		triangle { <14.8,12.1,-0.9>, <14.516,12,1.988>, <17.164,12,2.514> }
		triangle { <17.164,9.8,-4.314>, <17.164,11.8,-4.314>, <17.5,12.1,-0.9> }
		triangle { <17.5,12.1,-0.9>, <17.5,10.1,-0.9>, <17.164,9.8,-4.314> }
		triangle { <17.5,12.1,-0.9>, <17.164,11.8,-4.314>, <14.516,11.8,-3.788> }
		triangle { <17.5,12.1,-0.9>, <14.516,11.8,-3.788>, <14.8,12.1,-0.9> }
		triangle { <16.168,9.1,-7.597>, <16.168,11.1,-7.597>, <17.164,11.8,-4.314> }
		triangle { <17.164,11.8,-4.314>, <17.164,9.8,-4.314>, <16.168,9.1,-7.597> }
		triangle { <17.164,11.8,-4.314>, <16.168,11.1,-7.597>, <13.674,11.1,-6.564> }
		triangle { <17.164,11.8,-4.314>, <13.674,11.1,-6.564>, <14.516,11.8,-3.788> }
		triangle { <14.551,7.9,-10.623>, <14.551,9.9,-10.623>, <16.168,11.1,-7.597> }
		triangle { <16.168,11.1,-7.597>, <16.168,9.1,-7.597>, <14.551,7.9,-10.623> }
		triangle { <16.168,11.1,-7.597>, <14.551,9.9,-10.623>, <12.306,9.9,-9.123> }
		triangle { <16.168,11.1,-7.597>, <12.306,9.9,-9.123>, <13.674,11.1,-6.564> }
		triangle { <12.374,6.7,-13.274>, <12.374,8.7,-13.274>, <14.551,9.9,-10.623> }
		triangle { <14.551,9.9,-10.623>, <14.551,7.9,-10.623>, <12.374,6.7,-13.274> }
		triangle { <14.551,9.9,-10.623>, <12.374,8.7,-13.274>, <10.465,8.7,-11.365> }
		triangle { <14.551,9.9,-10.623>, <10.465,8.7,-11.365>, <12.306,9.9,-9.123> }
		triangle { <9.723,5.6,-15.451>, <9.723,7.6,-15.451>, <12.374,8.7,-13.274> }
		triangle { <12.374,8.7,-13.274>, <12.374,6.7,-13.274>, <9.723,5.6,-15.451> }
		triangle { <12.374,8.7,-13.274>, <9.723,7.6,-15.451>, <8.223,7.6,-13.206> }
		triangle { <12.374,8.7,-13.274>, <8.223,7.6,-13.206>, <10.465,8.7,-11.365> }
		triangle { <6.697,4.7,-17.068>, <6.697,6.7,-17.068>, <9.723,7.6,-15.451> }
		triangle { <9.723,7.6,-15.451>, <9.723,5.6,-15.451>, <6.697,4.7,-17.068> }
		triangle { <9.723,7.6,-15.451>, <6.697,6.7,-17.068>, <5.664,6.7,-14.574> }
		triangle { <9.723,7.6,-15.451>, <5.664,6.7,-14.574>, <8.223,7.6,-13.206> }
		triangle { <3.414,4.2,-18.064>, <3.414,6.2,-18.064>, <6.697,6.7,-17.068> }
		triangle { <6.697,6.7,-17.068>, <6.697,4.7,-17.068>, <3.414,4.2,-18.064> }
		triangle { <6.697,6.7,-17.068>, <3.414,6.2,-18.064>, <2.888,6.2,-15.416> }
		triangle { <6.697,6.7,-17.068>, <2.888,6.2,-15.416>, <5.664,6.7,-14.574> }
		triangle { <3.414,4.2,-18.064>, <3.039,2.2,-15.476>, <0,2.2,-15.775> }
		triangle { <0,2.2,-15.775>, <0,4.2,-18.4>, <3.414,4.2,-18.064> }
		triangle { <0,6,16.6>, <0,4,15.375>, <3.039,4.5,15.076> }
		triangle { <3.039,4.5,15.076>, <3.414,6.5,16.264>, <0,6,16.6> }
		triangle { <5.961,5.5,14.19>, <3.414,6.5,16.264>, <3.039,4.5,15.076> }
		triangle { <6.697,7.5,15.268>, <3.414,6.5,16.264>, <5.961,5.5,14.19> }
		triangle { <8.653,6.7,12.751>, <6.697,7.5,15.268>, <5.961,5.5,14.19> }
		triangle { <9.723,8.7,13.651>, <6.697,7.5,15.268>, <8.653,6.7,12.751> }
		triangle { <11.013,7.3,10.813>, <9.723,8.7,13.651>, <8.653,6.7,12.751> }
		triangle { <12.374,9.3,11.474>, <9.723,8.7,13.651>, <11.013,7.3,10.813> }
		triangle { <12.374,9.3,11.474>, <11.013,7.3,10.813>, <12.951,7.6,8.453> }
		triangle { <12.951,7.6,8.453>, <14.551,9.6,8.823>, <12.374,9.3,11.474> }
		triangle { <14.551,9.6,8.823>, <12.951,7.6,8.453>, <14.39,7.9,5.761> }
		triangle { <14.39,7.9,5.761>, <16.168,9.9,5.797>, <14.551,9.6,8.823> }
		triangle { <16.168,9.9,5.797>, <14.39,7.9,5.761>, <15.276,8,2.839> }
		triangle { <15.276,8,2.839>, <17.164,10,2.514>, <16.168,9.9,5.797> }
		triangle { <17.164,10,2.514>, <15.276,8,2.839>, <15.575,8.1,-0.2> }
		triangle { <15.575,8.1,-0.2>, <17.5,10.1,-0.9>, <17.164,10,2.514> }
		triangle { <17.5,10.1,-0.9>, <15.575,8.1,-0.2>, <15.276,7.8,-3.239> }
		triangle { <15.276,7.8,-3.239>, <17.164,9.8,-4.314>, <17.5,10.1,-0.9> }
		triangle { <14.39,7.1,-6.161>, <17.164,9.8,-4.314>, <15.276,7.8,-3.239> }
		triangle { <16.168,9.1,-7.597>, <17.164,9.8,-4.314>, <14.39,7.1,-6.161> }
		triangle { <14.39,7.1,-6.161>, <12.951,5.9,-8.853>, <16.168,9.1,-7.597> }
		triangle { <14.551,7.9,-10.623>, <16.168,9.1,-7.597>, <12.951,5.9,-8.853> }
		triangle { <11.013,4.7,-11.213>, <14.551,7.9,-10.623>, <12.951,5.9,-8.853> }
		triangle { <12.374,6.7,-13.274>, <14.551,7.9,-10.623>, <11.013,4.7,-11.213> }
		triangle { <8.653,3.6,-13.151>, <12.374,6.7,-13.274>, <11.013,4.7,-11.213> }
		triangle { <9.723,5.6,-15.451>, <12.374,6.7,-13.274>, <8.653,3.6,-13.151> }
		triangle { <5.961,2.7,-14.59>, <9.723,5.6,-15.451>, <8.653,3.6,-13.151> }
		triangle { <6.697,4.7,-17.068>, <9.723,5.6,-15.451>, <5.961,2.7,-14.59> }
		triangle { <3.039,2.2,-15.476>, <6.697,4.7,-17.068>, <5.961,2.7,-14.59> }
		triangle { <3.414,4.2,-18.064>, <6.697,4.7,-17.068>, <3.039,2.2,-15.476> }
		triangle { <0,-2,14>, <3.039,4.5,15.076>, <0,4,15.375> }
		triangle { <0,-2,14>, <5.358,-2,12.935>, <3.039,4.5,15.076> }
		triangle { <5.358,-2,12.935>, <5.961,5.5,14.19>, <3.039,4.5,15.076> }
		triangle { <5.358,-2,12.935>, <8.653,6.7,12.751>, <5.961,5.5,14.19> }
		triangle { <5.358,-2,12.935>, <9.899,-2,9.899>, <8.653,6.7,12.751> }
		triangle { <9.899,-2,9.899>, <11.013,7.3,10.813>, <8.653,6.7,12.751> }
		triangle { <9.899,-2,9.899>, <12.951,7.6,8.453>, <11.013,7.3,10.813> }
		triangle { <9.899,-2,9.899>, <12.935,-2,5.358>, <12.951,7.6,8.453> }
		triangle { <12.935,-2,5.358>, <14.39,7.9,5.761>, <12.951,7.6,8.453> }
		triangle { <12.935,-2,5.358>, <15.276,8,2.839>, <14.39,7.9,5.761> }
		triangle { <12.935,-2,5.358>, <14,-2,0>, <15.276,8,2.839> }
		triangle { <14,-2,0>, <15.575,8.1,-0.2>, <15.276,8,2.839> }
		triangle { <14,-2,0>, <15.276,7.8,-3.239>, <15.575,8.1,-0.2> }
		triangle { <14,-2,0>, <12.935,-2,-5.358>, <15.276,7.8,-3.239> }
		triangle { <12.935,-2,-5.358>, <14.39,7.1,-6.161>, <15.276,7.8,-3.239> }
		triangle { <12.935,-2,-5.358>, <12.951,5.9,-8.853>, <14.39,7.1,-6.161> }
		triangle { <11.013,4.7,-11.213>, <12.951,5.9,-8.853>, <12.935,-2,-5.358> }
		triangle { <12.935,-2,-5.358>, <9.899,-2,-9.899>, <11.013,4.7,-11.213> }
		triangle { <9.899,-2,-9.899>, <8.653,3.6,-13.151>, <11.013,4.7,-11.213> }
		triangle { <8.653,3.6,-13.151>, <9.899,-2,-9.899>, <5.358,-2,-12.935> }
		triangle { <5.358,-2,-12.935>, <5.961,2.7,-14.59>, <8.653,3.6,-13.151> }
// BFC INVERTNEXT
	}
	object { t04o6250_dot_dat matrix <0,0,8,0,-12.8,0,8,0,0,0,4,0> }
// BFC INVERTNEXT
	object { t04o6250_dot_dat matrix <8,0,0,0,-12.8,0,0,0,-8,0,4,0> }
	mesh {
		triangle { <2.888,6.2,-15.416>, <0,6.2,-15.7>, <0,4,-13> }
		triangle { <4.975,4,-12.011>, <2.888,6.2,-15.416>, <0,4,-13> }
		triangle { <5.664,6.7,-14.574>, <2.888,6.2,-15.416>, <4.975,4,-12.011> }
		triangle { <8.223,7.6,-13.206>, <5.664,6.7,-14.574>, <4.975,4,-12.011> }
		triangle { <9.192,4,-9.192>, <8.223,7.6,-13.206>, <4.975,4,-12.011> }
		triangle { <10.465,8.7,-11.365>, <8.223,7.6,-13.206>, <9.192,4,-9.192> }
		triangle { <12.306,9.9,-9.123>, <10.465,8.7,-11.365>, <9.192,4,-9.192> }
		triangle { <12.011,4,-4.975>, <12.306,9.9,-9.123>, <9.192,4,-9.192> }
		triangle { <13.674,11.1,-6.564>, <12.306,9.9,-9.123>, <12.011,4,-4.975> }
		triangle { <14.516,11.8,-3.788>, <13.674,11.1,-6.564>, <12.011,4,-4.975> }
		triangle { <13,4,0>, <14.516,11.8,-3.788>, <12.011,4,-4.975> }
		triangle { <14.8,12.1,-0.9>, <14.516,11.8,-3.788>, <13,4,0> }
		triangle { <14.516,12,1.988>, <14.8,12.1,-0.9>, <13,4,0> }
		triangle { <12.011,4,4.975>, <14.516,12,1.988>, <13,4,0> }
		triangle { <13.674,11.9,4.764>, <14.516,12,1.988>, <12.011,4,4.975> }
		triangle { <12.306,11.6,7.323>, <13.674,11.9,4.764>, <12.011,4,4.975> }
		triangle { <9.192,4,9.192>, <12.306,11.6,7.323>, <12.011,4,4.975> }
		triangle { <10.465,11.3,9.565>, <12.306,11.6,7.323>, <9.192,4,9.192> }
		triangle { <8.223,10.7,11.406>, <10.465,11.3,9.565>, <9.192,4,9.192> }
		triangle { <4.975,4,12.011>, <8.223,10.7,11.406>, <9.192,4,9.192> }
		triangle { <5.664,9.5,12.774>, <8.223,10.7,11.406>, <4.975,4,12.011> }
		triangle { <2.888,8.5,13.616>, <5.664,9.5,12.774>, <4.975,4,12.011> }
		triangle { <0,4,13>, <2.888,8.5,13.616>, <4.975,4,12.011> }
		triangle { <0,8,13.9>, <2.888,8.5,13.616>, <0,4,13> }
		triangle { <0,-2,14>, <0,-5.062,12.935>, <4.95,-5.062,11.95> }
		triangle { <4.95,-5.062,11.95>, <5.358,-2,12.935>, <0,-2,14> }
		triangle { <0,-5.062,12.935>, <0,-7.657,9.899>, <3.789,-7.657,9.146> }
		triangle { <3.789,-7.657,9.146>, <4.95,-5.062,11.95>, <0,-5.062,12.935> }
		triangle { <0,-7.657,9.899>, <0,-9.391,5.358>, <2.05,-9.391,4.95> }
		triangle { <2.05,-9.391,4.95>, <3.789,-7.657,9.146>, <0,-7.657,9.899> }
		triangle { <2.05,-9.391,4.95>, <0,-9.391,5.358>, <0,-10,0> }
		triangle { <5.358,-2,12.935>, <4.95,-5.062,11.95>, <9.146,-5.062,9.146> }
		triangle { <9.146,-5.062,9.146>, <9.899,-2,9.899>, <5.358,-2,12.935> }
		triangle { <4.95,-5.062,11.95>, <3.789,-7.657,9.146>, <7,-7.657,7> }
		triangle { <7,-7.657,7>, <9.146,-5.062,9.146>, <4.95,-5.062,11.95> }
		triangle { <3.789,-7.657,9.146>, <2.05,-9.391,4.95>, <3.788,-9.391,3.788> }
		triangle { <3.788,-9.391,3.788>, <7,-7.657,7>, <3.789,-7.657,9.146> }
		triangle { <3.788,-9.391,3.788>, <2.05,-9.391,4.95>, <0,-10,0> }
		triangle { <9.899,-2,9.899>, <9.146,-5.062,9.146>, <11.95,-5.062,4.95> }
		triangle { <11.95,-5.062,4.95>, <12.935,-2,5.358>, <9.899,-2,9.899> }
		triangle { <9.146,-5.062,9.146>, <7,-7.657,7>, <9.146,-7.657,3.789> }
		triangle { <9.146,-7.657,3.789>, <11.95,-5.062,4.95>, <9.146,-5.062,9.146> }
		triangle { <7,-7.657,7>, <3.788,-9.391,3.788>, <4.95,-9.391,2.05> }
		triangle { <4.95,-9.391,2.05>, <9.146,-7.657,3.789>, <7,-7.657,7> }
		triangle { <4.95,-9.391,2.05>, <3.788,-9.391,3.788>, <0,-10,0> }
		triangle { <12.935,-2,5.358>, <11.95,-5.062,4.95>, <12.935,-5.062,0> }
		triangle { <12.935,-5.062,0>, <14,-2,0>, <12.935,-2,5.358> }
		triangle { <11.95,-5.062,4.95>, <9.146,-7.657,3.789>, <9.899,-7.657,0> }
		triangle { <9.899,-7.657,0>, <12.935,-5.062,0>, <11.95,-5.062,4.95> }
		triangle { <9.146,-7.657,3.789>, <4.95,-9.391,2.05>, <5.358,-9.391,0> }
		triangle { <5.358,-9.391,0>, <9.899,-7.657,0>, <9.146,-7.657,3.789> }
		triangle { <5.358,-9.391,0>, <4.95,-9.391,2.05>, <0,-10,0> }
		triangle { <14,-2,0>, <12.935,-5.062,0>, <11.95,-5.062,-4.95> }
		triangle { <11.95,-5.062,-4.95>, <12.935,-2,-5.358>, <14,-2,0> }
		triangle { <12.935,-5.062,0>, <9.899,-7.657,0>, <9.146,-7.657,-3.789> }
		triangle { <9.146,-7.657,-3.789>, <11.95,-5.062,-4.95>, <12.935,-5.062,0> }
		triangle { <9.899,-7.657,0>, <5.358,-9.391,0>, <4.95,-9.391,-2.05> }
		triangle { <4.95,-9.391,-2.05>, <9.146,-7.657,-3.789>, <9.899,-7.657,0> }
		triangle { <4.95,-9.391,-2.05>, <5.358,-9.391,0>, <0,-10,0> }
		triangle { <12.935,-2,-5.358>, <11.95,-5.062,-4.95>, <9.146,-5.062,-9.146> }
		triangle { <9.146,-5.062,-9.146>, <9.899,-2,-9.899>, <12.935,-2,-5.358> }
		triangle { <11.95,-5.062,-4.95>, <9.146,-7.657,-3.789>, <7,-7.657,-7> }
		triangle { <7,-7.657,-7>, <9.146,-5.062,-9.146>, <11.95,-5.062,-4.95> }
		triangle { <9.146,-7.657,-3.789>, <4.95,-9.391,-2.05>, <3.788,-9.391,-3.788> }
		triangle { <3.788,-9.391,-3.788>, <7,-7.657,-7>, <9.146,-7.657,-3.789> }
		triangle { <3.788,-9.391,-3.788>, <4.95,-9.391,-2.05>, <0,-10,0> }
		triangle { <9.899,-2,-9.899>, <9.146,-5.062,-9.146>, <4.95,-5.062,-11.95> }
		triangle { <4.95,-5.062,-11.95>, <5.358,-2,-12.935>, <9.899,-2,-9.899> }
		triangle { <9.146,-5.062,-9.146>, <7,-7.657,-7>, <3.789,-7.657,-9.146> }
		triangle { <3.789,-7.657,-9.146>, <4.95,-5.062,-11.95>, <9.146,-5.062,-9.146> }
		triangle { <7,-7.657,-7>, <3.788,-9.391,-3.788>, <2.05,-9.391,-4.95> }
		triangle { <2.05,-9.391,-4.95>, <3.789,-7.657,-9.146>, <7,-7.657,-7> }
		triangle { <2.05,-9.391,-4.95>, <3.788,-9.391,-3.788>, <0,-10,0> }
		triangle { <3.789,-7.657,-9.146>, <2.05,-9.391,-4.95>, <0,-9.391,-5.358> }
		triangle { <0,-9.391,-5.358>, <0,-7.657,-9.899>, <3.789,-7.657,-9.146> }
		triangle { <0,-9.391,-5.358>, <2.05,-9.391,-4.95>, <0,-10,0> }
	}
}
#end
#end // ifndef (s_slash_87998s01_dot_dat)


//// Primitive 3-8cyli.dat
#ifndef (_3_dash_8cyli_dot_dat)
#declare _3_dash_8cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by {
	plane { <-sqrt(1/2),0,-1-sqrt(1/2)>,-1/sqrt(4+sqrt(8)) }
} }
#end // ifndef (_3_dash_8cyli_dot_dat)


//// Primitive 3-8ring3.dat
#ifndef (_3_dash_8ring3_dot_dat)
#declare _3_dash_8ring3_dot_dat = disc {
	<0,0,0>, <0,1,0>, 4, 3
	clipped_by { plane { -z, 0 } plane { <-1,0,-1>, 0 } }
}
#end // ifndef (_3_dash_8ring3_dot_dat)


//// Primitive rect.dat
#ifndef (rect_dot_dat)
#declare rect_dot_dat = object {
// Rectangle
// Name: rect.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-05 [hafhead] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect_dot_dat)


//// Primitive stud16.dat
#ifndef (stud16_dot_dat)
#declare stud16_dot_dat = union {
// Stud Tube Open Split
// Name: stud16.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Primitive UPDATE 2011-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-03-03 [Philo] Creation
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
// BFC INVERTNEXT
	object { _3_dash_8cyli_dot_dat matrix <5.54328,0,2.2961,0,4,0,-2.2961,0,5.54328,0,-4,0> }
	object { _3_dash_8cyli_dot_dat matrix <7.39104,0,3.06147,0,4,0,-3.06147,0,7.39104,0,-4,0> }
	object { _3_dash_8ring3_dot_dat matrix <1.84776,0,0.76537,0,1,0,-0.76537,0,1.84776,0,-4,0> }
	mesh {
		triangle { <5.543,-4,2.296>, <5.543,0,2.296>, <5.702,0,1.5> }
		triangle { <5.702,0,1.5>, <5.702,-4,1.5>, <5.543,-4,2.296> }
		triangle { <7.702,-4,1.5>, <7.702,0,1.5>, <7.391,0,3.062> }
		triangle { <7.391,0,3.062>, <7.391,-4,3.062>, <7.702,-4,1.5> }
		triangle { <5.702,-4,1.5>, <7.702,-4,1.5>, <7.391,-4,3.062> }
		triangle { <7.391,-4,3.062>, <5.543,-4,2.296>, <5.702,-4,1.5> }
	}
	object { rect_dot_dat matrix <1,0,0,0,0,1,0,2,0,6.702,-2,1.5> }
	mesh {
		triangle { <-5.702,-4,1.5>, <-5.702,0,1.5>, <-5.543,0,2.296> }
		triangle { <-5.543,0,2.296>, <-5.543,-4,2.296>, <-5.702,-4,1.5> }
		triangle { <-7.391,-4,3.062>, <-7.391,0,3.062>, <-7.702,0,1.5> }
		triangle { <-7.702,0,1.5>, <-7.702,-4,1.5>, <-7.391,-4,3.062> }
		triangle { <-5.543,-4,2.296>, <-7.391,-4,3.062>, <-7.702,-4,1.5> }
		triangle { <-7.702,-4,1.5>, <-5.702,-4,1.5>, <-5.543,-4,2.296> }
	}
	object { rect_dot_dat matrix <-1,0,0,0,0,1,0,2,0,-6.702,-2,1.5> }
// BFC INVERTNEXT
	object { _3_dash_8cyli_dot_dat matrix <-5.54328,0,-2.2961,0,4,0,2.2961,0,-5.54328,0,-4,0> }
	object { _3_dash_8cyli_dot_dat matrix <-7.39104,0,-3.06147,0,4,0,3.06147,0,-7.39104,0,-4,0> }
	object { _3_dash_8ring3_dot_dat matrix <-1.84776,0,-0.76537,0,1,0,0.76537,0,-1.84776,0,-4,0> }
	mesh {
		triangle { <-5.543,-4,-2.296>, <-5.543,0,-2.296>, <-5.702,0,-1.5> }
		triangle { <-5.702,0,-1.5>, <-5.702,-4,-1.5>, <-5.543,-4,-2.296> }
		triangle { <-7.702,-4,-1.5>, <-7.702,0,-1.5>, <-7.391,0,-3.062> }
		triangle { <-7.391,0,-3.062>, <-7.391,-4,-3.062>, <-7.702,-4,-1.5> }
		triangle { <-5.702,-4,-1.5>, <-7.702,-4,-1.5>, <-7.391,-4,-3.062> }
		triangle { <-7.391,-4,-3.062>, <-5.543,-4,-2.296>, <-5.702,-4,-1.5> }
	}
	object { rect_dot_dat matrix <-1,0,0,0,0,-1,0,2,0,-6.702,-2,-1.5> }
	mesh {
		triangle { <5.702,-4,-1.5>, <5.702,0,-1.5>, <5.543,0,-2.296> }
		triangle { <5.543,0,-2.296>, <5.543,-4,-2.296>, <5.702,-4,-1.5> }
		triangle { <7.391,-4,-3.062>, <7.391,0,-3.062>, <7.702,0,-1.5> }
		triangle { <7.702,0,-1.5>, <7.702,-4,-1.5>, <7.391,-4,-3.062> }
		triangle { <5.543,-4,-2.296>, <7.391,-4,-3.062>, <7.702,-4,-1.5> }
		triangle { <7.702,-4,-1.5>, <5.702,-4,-1.5>, <5.543,-4,-2.296> }
	}
	object { rect_dot_dat matrix <1,0,0,0,0,-1,0,2,0,6.702,-2,-1.5> }
}
#end // ifndef (stud16_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Part 87998.dat
#ifndef (_87998_dot_dat)
#declare _87998_dot_dat = #if (L3Quality = 0) box { <-17.5,-10,-18.4>, <17.5,12.1,16.6> } #else union {
// Minifig Helmet Army
// Name: 87998.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Headwear
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
// !HISTORY 2012-12-24 [cwdee] Update category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { s_slash_87998s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_87998s01_dot_dat matrix <-1,0,0,0,1,0,0,0,1,0,0,0> }
	object { stud16_dot_dat matrix <-1,0,0,0,-1,0,0,0,-1,0,-4,0> }
	object { _4_dash_4disc_dot_dat matrix <0,0,8,0,-1,0,8,0,0,0,-4,0> }
// Front surface and middle condlines
	mesh {
		triangle { <0,2.2,-15.775>, <3.039,2.2,-15.476>, <0,-2,-14> }
		triangle { <-3.039,2.2,-15.476>, <0,2.2,-15.775>, <0,-2,-14> }
		triangle { <-5.358,-2,-12.935>, <-3.039,2.2,-15.476>, <0,-2,-14> }
		triangle { <-5.961,2.7,-14.59>, <-3.039,2.2,-15.476>, <-5.358,-2,-12.935> }
		triangle { <3.039,2.2,-15.476>, <5.961,2.7,-14.59>, <5.358,-2,-12.935> }
		triangle { <0,-2,-14>, <3.039,2.2,-15.476>, <5.358,-2,-12.935> }
		triangle { <0,-2,-14>, <0,-5.062,-12.935>, <-4.95,-5.062,-11.95> }
		triangle { <-4.95,-5.062,-11.95>, <-5.358,-2,-12.935>, <0,-2,-14> }
		triangle { <0,-5.062,-12.935>, <0,-7.657,-9.899>, <-3.789,-7.657,-9.146> }
		triangle { <-3.789,-7.657,-9.146>, <-4.95,-5.062,-11.95>, <0,-5.062,-12.935> }
		triangle { <5.358,-2,-12.935>, <4.95,-5.062,-11.95>, <0,-5.062,-12.935> }
		triangle { <0,-5.062,-12.935>, <0,-2,-14>, <5.358,-2,-12.935> }
		triangle { <4.95,-5.062,-11.95>, <3.789,-7.657,-9.146>, <0,-7.657,-9.899> }
		triangle { <0,-7.657,-9.899>, <0,-5.062,-12.935>, <4.95,-5.062,-11.95> }
	}
}
#end
#end // ifndef (_87998_dot_dat)


//// Model helmet_007_army.ldr
#ifndef (helmet__007__army_dot_ldr)
#declare helmet__007__army_dot_ldr = object {
// Untitled
// Name: helmet_007_army.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 288  0 -2 0  1 0 0  0 1 0  0 0 1 87998.dat
	object {
		_87998_dot_dat
		matrix <1-L3SW/35,0,0,0,1-L3SW/22.1,0,0,0,1-L3SW/35,0,L3SW/21.0476,L3SW/-38.8889>
		matrix <1,0,0,0,1,0,0,0,1,0,-2,0>
		material { L3Color288 }
	}
}
#end // ifndef (helmet__007__army_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-17.5,-12,-18.4>;
#declare L3ModelBBoxMax = <17.5,10.1,16.6>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-0.95,-0.9>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <35,22.1,35>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject helmet_007_army.ldr
object { helmet__007__army_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        3             8            12
// POV Equivs:       -             4 (50%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
