// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:40 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_018_samurai.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_018_samurai.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\helmet_018_samurai.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 0 Black (from ldconfig.ldr)
#ifndef (L3Texture0)
#declare L3Texture0 = L3TextureOpaqueRGB(5,19,29)
#end
#ifndef (L3Texture0_slope)
#declare L3Texture0_slope = L3TextureSlope(L3Texture0)
#end
#ifndef (L3Color0)
#declare L3Color0 = L3Material(L3Texture0)
#end
#ifndef (L3Color0_slope)
#declare L3Color0_slope = L3Material(L3Texture0_slope)
#end


//// Color 334 Chrome_Gold (from ldconfig.ldr)
#ifndef (L3Texture334)
#declare L3Texture334 = L3TextureChromeRGB(187,165,61)
#end
#ifndef (L3Texture334_slope)
#declare L3Texture334_slope = L3TextureSlope(L3Texture334)
#end
#ifndef (L3Color334)
#declare L3Color334 = L3Material(L3Texture334)
#end
#ifndef (L3Color334_slope)
#declare L3Color334_slope = L3Material(L3Texture334_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive stud4.dat
#ifndef (stud4_dot_dat)
#declare stud4_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4_dot_dat)


//// Primitive 4-4ring4.dat
#ifndef (_4_dash_4ring4_dot_dat)
#declare _4_dash_4ring4_dot_dat = disc { <0,0,0>, <0,1,0>, 5, 4 }
#end // ifndef (_4_dash_4ring4_dot_dat)


//// Primitive 4-4con5.dat
#ifndef (_4_dash_4con5_dot_dat)
#declare _4_dash_4con5_dot_dat = cone { <0,0,0>, 6, <0,1,0>, 5 open }
#end // ifndef (_4_dash_4con5_dot_dat)


//// Primitive 4-4con8.dat
#ifndef (_4_dash_4con8_dot_dat)
#declare _4_dash_4con8_dot_dat = cone { <0,0,0>, 9, <0,1,0>, 8 open }
#end // ifndef (_4_dash_4con8_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 2-4ring5.dat
#ifndef (_2_dash_4ring5_dot_dat)
#declare _2_dash_4ring5_dot_dat = disc {
	<0,0,0>, <0,1,0>, 6, 5
	clipped_by { plane { -z, 0 } }
}
#end // ifndef (_2_dash_4ring5_dot_dat)


//// Primitive rect.dat
#ifndef (rect_dot_dat)
#declare rect_dot_dat = object {
// Rectangle
// Name: rect.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-05 [hafhead] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect_dot_dat)


//// Primitive 1-4disc.dat
#ifndef (_1_dash_4disc_dot_dat)
#declare _1_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { plane { -x, 0 } plane { -z, 0 } } }
#end // ifndef (_1_dash_4disc_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4cyls2.dat
#ifndef (_1_dash_4cyls2_dot_dat)
#declare _1_dash_4cyls2_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,0 } }
}
#end // ifndef (_1_dash_4cyls2_dot_dat)


//// Primitive 1-4ndis.dat
#ifndef (_1_dash_4ndis_dot_dat)
#declare _1_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <0,-1,0>, <1,1,1> } } }
#end // ifndef (_1_dash_4ndis_dot_dat)


//// Primitive 1-4ring4.dat
#ifndef (_1_dash_4ring4_dot_dat)
#declare _1_dash_4ring4_dot_dat = disc {
	<0,0,0>, <0,1,0>, 5, 4
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring4_dot_dat)


//// Primitive 1-4rin10.dat
#ifndef (_1_dash_4rin10_dot_dat)
#declare _1_dash_4rin10_dot_dat = disc {
	<0,0,0>, <0,1,0>, 11, 10
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4rin10_dot_dat)


//// Primitive 1-4con15.dat
#ifndef (_1_dash_4con15_dot_dat)
#declare _1_dash_4con15_dot_dat = cone {
	<0,0,0>, 16, <0,1,0>, 15 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con15_dot_dat)


//// Primitive 1-4con5.dat
#ifndef (_1_dash_4con5_dot_dat)
#declare _1_dash_4con5_dot_dat = cone {
	<0,0,0>, 6, <0,1,0>, 5 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con5_dot_dat)


//// Primitive 1-4ring8.dat
#ifndef (_1_dash_4ring8_dot_dat)
#declare _1_dash_4ring8_dot_dat = disc {
	<0,0,0>, <0,1,0>, 9, 8
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring8_dot_dat)


//// Primitive 1-4con7.dat
#ifndef (_1_dash_4con7_dot_dat)
#declare _1_dash_4con7_dot_dat = cone {
	<0,0,0>, 8, <0,1,0>, 7 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con7_dot_dat)


//// Primitive 4-4ndis.dat
#ifndef (_4_dash_4ndis_dot_dat)
#declare _4_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <-1,-1,-1>, <1,1,1> } } }
#end // ifndef (_4_dash_4ndis_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 1-4ring5.dat
#ifndef (_1_dash_4ring5_dot_dat)
#declare _1_dash_4ring5_dot_dat = disc {
	<0,0,0>, <0,1,0>, 6, 5
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring5_dot_dat)


//// Primitive 2-4ring2.dat
#ifndef (_2_dash_4ring2_dot_dat)
#declare _2_dash_4ring2_dot_dat = disc {
	<0,0,0>, <0,1,0>, 3, 2
	clipped_by { plane { -z, 0 } }
}
#end // ifndef (_2_dash_4ring2_dot_dat)


//// Primitive 2-4ring4.dat
#ifndef (_2_dash_4ring4_dot_dat)
#declare _2_dash_4ring4_dot_dat = disc {
	<0,0,0>, <0,1,0>, 5, 4
	clipped_by { plane { -z, 0 } }
}
#end // ifndef (_2_dash_4ring4_dot_dat)


//// Part 30175.dat
#ifndef (_30175_dot_dat)
#declare _30175_dot_dat = #if (L3Quality = 0) box { <-22,-12.718,-24.7176>, <22,22,22> } #else union {
// Minifig Helmet Samurai
// Name: 30175.dat
// Author: Paul Easter [pneaster]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !HELP ref point for horn
// !HELP 1 16 0 -6 -18 1 0 0 0 1 0 0 0 1 529.dat
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !KEYWORDS Castle, Ninja, shogun
// !HISTORY 2003-11-04 [fwcain] added KEYWORDS; fixed Title...
// !HISTORY 2004-04-22 [PTadmin] Official Update 2004-02
// !HISTORY 2007-07-09 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-07-18 [PTadmin] Renamed from 526
// !HISTORY 2010-12-31 [PTadmin] Official Update 2010-03
// !HISTORY 2012-10-02 [Steffen] BFC rationalisation
// !HISTORY 2012-11-03 [MagFors] Added some missing cond-lines
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
// inner stud
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,-1,0,0,0,6,0,-4,0> }
	#if (L3Studs)
		object { stud4_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,-4,0> }
	#end
	object { _4_dash_4ring4_dot_dat matrix <0,0,-2,0,-1,0,2,0,0,0,-4,0> }
// BFC INVERTNEXT
	object { _4_dash_4con5_dot_dat matrix <2,0,0,0,-2,0,0,0,2,0,-2,0> }
// BFC INVERTNEXT
	object { _4_dash_4con8_dot_dat matrix <1.5,0,0,0,-4,0,0,0,1.5,0,2,0> }
// BFC INVERTNEXT
	object { _2_dash_4cyli_dot_dat matrix <13.5,0,0,0,13,0,0,0,13.5,0,2,0> }
	object { _2_dash_4ring5_dot_dat matrix <2.7,0,0,0,-1,0,0,0,2.7,0,15,0> }
// BFC INVERTNEXT
	object { _2_dash_4cyli_dot_dat matrix <16,0,0,0,-7,0,0,0,16,0,22,0> }
// BFC INVERTNEXT
	object { _2_dash_4cyli_dot_dat matrix <-13.5,0,0,0,4,0,0,0,-13.5,0,2,0> }
// top "hook" items across center
	object { rect_dot_dat matrix <4,0,0,0,0.7071,0.7071,0,-1.0606,1.0606,0,-11.657,-16.586> }
	object { rect_dot_dat matrix <4,0,0,0,0.7071,0.7071,0,-1.0606,1.0606,0,-4.586,-23.657> }
	mesh {
		triangle { <4,-11.127,-12.874>, <4,-12.718,-15.525>, <-4,-12.718,-15.525> }
		triangle { <-4,-12.718,-15.525>, <-4,-11.127,-12.874>, <4,-11.127,-12.874> }
		triangle { <-4,-10.596,-17.647>, <4,-10.596,-17.647>, <4,-8.828,-15.172> }
		triangle { <4,-8.828,-15.172>, <-4,-8.828,-15.172>, <-4,-10.596,-17.647> }
		triangle { <4,-3.172,-20.828>, <4,-5.647,-22.596>, <-4,-5.647,-22.596> }
		triangle { <-4,-5.647,-22.596>, <-4,-3.172,-20.828>, <4,-3.172,-20.828> }
		triangle { <-4,-0.874,-23.127>, <-4,-3.525,-24.717>, <4,-3.525,-24.717> }
		triangle { <4,-3.525,-24.717>, <4,-0.874,-23.127>, <-4,-0.874,-23.127> }
// left side visor connections
	}
	object { _1_dash_4disc_dot_dat matrix <0,0,-5,1,0,0,0,5,0,16,17,-3> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,-5,3.25,0,0,0,5,0,16,17,-3> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-5,0,2.75,0,0,0,0,-5,19.25,17,-3> }
	object { _1_dash_4disc_dot_dat matrix <0,0,-5,-1,0,0,2.75,5,0,19.25,17,-3> }
	mesh {
		triangle { <22,22,0>, <22,22,-3>, <19.25,17,-3> }
		triangle { <19.25,17,-3>, <19.25,17,0>, <22,22,0> }
		triangle { <22,22,0>, <16,22,0>, <16,22,-3> }
		triangle { <16,22,-3>, <22,22,-3>, <22,22,0> }
		triangle { <16,22,0>, <16,17,0>, <16,17,-3> }
		triangle { <16,17,-3>, <16,22,-3>, <16,22,0> }
		triangle { <20.25,17,0>, <19.25,17,0>, <19.25,17,-8> }
		triangle { <19.25,17,-8>, <20.25,17,-8>, <20.25,17,0> }
		triangle { <16.875,12,0>, <20.25,17,0>, <20.25,17,-8> }
		triangle { <20.25,17,-8>, <16.875,12,-8>, <16.875,12,0> }
		triangle { <17.6,12,0>, <16.875,12,0>, <16.875,12,-8> }
		triangle { <16.875,12,-8>, <17.6,12,-8>, <17.6,12,0> }
		triangle { <17.6,12,-7>, <17.6,12,-8>, <15.25,6,-8> }
		triangle { <15.25,6,-8>, <15.25,6,-7.667>, <17.6,12,-7> }
		triangle { <16,15,-8>, <16.875,12,-8>, <20.25,17,-8> }
		triangle { <20.25,17,-8>, <16,17,-8>, <16,15,-8> }
		triangle { <16,15,0>, <16,15,-8>, <16,17,-8> }
		triangle { <16,17,-8>, <16,17,0>, <16,15,0> }
		triangle { <14.75,10.5,-3.5>, <14.75,10.5,-7>, <16,15,-8> }
		triangle { <16,15,-8>, <16,15,-3.5>, <14.75,10.5,-3.5> }
		triangle { <13.5,6,-7>, <13.5,6,-8>, <16,15,-8> }
		triangle { <16,15,-8>, <14.75,10.5,-7>, <13.5,6,-7> }
		triangle { <16.875,12,-8>, <13.5,6,-8>, <15.25,6,-8> }
		triangle { <15.25,6,-8>, <17.6,12,-8>, <16.875,12,-8> }
		triangle { <16.875,12,-8>, <16,15,-8>, <13.5,6,-8> }
		triangle { <13.5,6,0>, <13.5,6,-3.5>, <13.5,10.5,-3.5> }
		triangle { <13.5,10.5,-3.5>, <13.5,10.5,0>, <13.5,6,0> }
	}
	object { _1_dash_4disc_dot_dat matrix <0,0,-3.5,1,0,0,0,4.5,0,13.5,6,-3.5> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-4.5,0,1.25,0,0,0,0,-3.5,13.5,6,-3.5> }
	object { _1_dash_4ndis_dot_dat matrix <0,0,-3.5,1,0,0,1.25,4.5,0,13.5,6,-3.5> }
	object { _1_dash_4disc_dot_dat matrix <0,0,-3.5,1,0,0,0,4.5,0,13.5,10.5,0> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,-3.5,1.25,0,0,0,4.5,0,13.5,10.5,0> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-4.5,0,1.25,0,0,0,0,-3.5,14.75,10.5,0> }
	object { _1_dash_4ndis_dot_dat matrix <0,0,-3.5,1,0,0,1.25,4.5,0,14.75,10.5,0> }
// "skirt" around bottom
	object { _1_dash_4ring4_dot_dat matrix <4,0,0,0,-1,0,0,0,4,0,22,0> }
	object { _1_dash_4rin10_dot_dat matrix <2,0,0,0,-1,0,0,0,2,0,22,0> }
	object { _1_dash_4con15_dot_dat matrix <1.1,0,0,0,-4,0,0,0,1.1,0,12,0> }
	object { _1_dash_4rin10_dot_dat matrix <1.6,0,0,0,-1,0,0,0,1.6,0,12,0> }
	object { _1_dash_4con5_dot_dat matrix <3.375,0,0,0,-5,0,0,0,3.375,0,17,0> }
	object { _1_dash_4ring8_dot_dat matrix <2.25,0,0,0,-1,0,0,0,2.25,0,17,0> }
	object { _1_dash_4con7_dot_dat matrix <2.75,0,0,0,-5,0,0,0,2.75,0,22,0> }
	object { _1_dash_4cyli_dot_dat matrix <16.5,0,0,0,2,0,0,0,16.5,0,6,0> }
// Visor attachment area
	object { _4_dash_4disc_dot_dat matrix <0,0,-1.75,-1,0,0,0,1.75,0,17,6,0> }
	object { _4_dash_4ndis_dot_dat matrix <0,0,-1.75,-1,0,0,0,1.75,0,19,6,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <0,0,-1.75,2,0,0,0,1.75,0,17,6,0> }
	mesh {
		triangle { <19,-1.5,1>, <19,4.25,1.75>, <19,4.25,-1.75> }
		triangle { <19,4.25,-1.75>, <19,3,-8>, <19,-1.5,1> }
		triangle { <19,3,-8>, <19,4.25,-1.75>, <19,7.75,-1.75> }
		triangle { <19,7.75,-1.75>, <19,12,-7>, <19,3,-8> }
		triangle { <19,12,-7>, <19,7.75,-1.75>, <19,7.75,1.75> }
		triangle { <19,7.75,1.75>, <19,12,10.5>, <19,12,-7> }
		triangle { <19,12,10.5>, <19,7.75,1.75>, <19,4.25,1.75> }
		triangle { <19,4.25,1.75>, <19,10.5,10.5>, <19,12,10.5> }
		triangle { <19,10.5,10.5>, <19,4.25,1.75>, <19,-1.5,1> }
		triangle { <19,3,-8>, <19,12,-7>, <17.6,12,-7> }
		triangle { <17.6,12,-7>, <15.25,6,-7.667>, <19,3,-8> }
		triangle { <19,3,-8>, <15.25,6,-7.667>, <15.25,5.5,-7.722> }
		triangle { <15.25,5.5,-7.722>, <13.957,4.7,-7.811>, <13.454,3,-8> }
		triangle { <13.454,3,-8>, <19,3,-8>, <15.25,5.5,-7.722> }
		triangle { <14.554,2.014,-6.028>, <19,3,-8>, <13.454,3,-8> }
		triangle { <19,3,-8>, <14.554,2.014,-6.028>, <15.159,-0.123,-1.755> }
		triangle { <19,3,-8>, <15.159,-0.123,-1.755>, <15.088,-0.448,-1.105> }
		triangle { <15.088,-0.448,-1.105>, <16.01,-1,0>, <19,3,-8> }
		triangle { <19,3,-8>, <16.01,-1,0>, <19,-1.5,1> }
		triangle { <19,-1.5,1>, <16.01,-1,0>, <14.484,-1.5,1> }
		triangle { <19,-1.5,1>, <14,-1.5,1>, <14.452,-1.367,1.105> }
		triangle { <19,-1.5,1>, <14.452,-1.367,1.105>, <15.08,-0.123,2.09> }
		triangle { <19,-1.5,1>, <15.08,-0.123,2.09>, <15.095,5.135,6.252> }
		triangle { <15.095,5.135,6.252>, <19,10.5,10.5>, <19,-1.5,1> }
		triangle { <19,10.5,10.5>, <15.095,5.135,6.252>, <14.828,6,6.938> }
		triangle { <19,10.5,10.5>, <14.828,6,6.938>, <13.77,8,8.521> }
		triangle { <13.77,8,8.521>, <13.258,10.5,10.5>, <19,10.5,10.5> }
		triangle { <19,12,10.5>, <19,10.5,10.5>, <13.258,10.5,10.5> }
		triangle { <13.258,10.5,10.5>, <13.745,12,10.5>, <19,12,10.5> }
		triangle { <19,12,-7>, <19,12,10.5>, <13.745,12,10.5> }
		triangle { <13.745,12,10.5>, <17.6,12,-7>, <19,12,-7> }
// front "visor"
		triangle { <6.314,6,-18.478>, <6.2,6,-14.967>, <0,6,-16.2> }
		triangle { <0,6,-16.2>, <0,6,-20>, <6.314,6,-18.478> }
		triangle { <11.667,6,-14.142>, <11.455,6,-11.455>, <6.2,6,-14.967> }
		triangle { <6.2,6,-14.967>, <6.314,6,-18.478>, <11.667,6,-14.142> }
		triangle { <15.25,6,-8>, <13.5,6,-8>, <11.455,6,-11.455> }
		triangle { <11.455,6,-11.455>, <11.667,6,-14.142>, <15.25,6,-8> }
		triangle { <15.25,6,-8>, <15.25,5.5,-8>, <15.25,5.5,-7.722> }
		triangle { <15.25,5.5,-7.722>, <15.25,6,-7.667>, <15.25,6,-8> }
		triangle { <11.667,6,-14.142>, <11.667,5.5,-14.142>, <15.25,5.5,-8> }
		triangle { <15.25,5.5,-8>, <15.25,6,-8>, <11.667,6,-14.142> }
		triangle { <6.315,6,-18.478>, <6.315,5.5,-18.478>, <11.667,5.5,-14.142> }
		triangle { <11.667,5.5,-14.142>, <11.667,6,-14.142>, <6.315,6,-18.478> }
		triangle { <0,6,-20>, <0,5.5,-20>, <6.315,5.5,-18.478> }
		triangle { <6.315,5.5,-18.478>, <6.315,6,-18.478>, <0,6,-20> }
	}
	object { _1_dash_4ring5_dot_dat matrix <0,0,-2.7,0,-1,0,2.7,0,0,0,6,0> }
	mesh {
		triangle { <0,4.166,-17.302>, <1.105,3.605,-15.902>, <0,5.5,-20> }
		triangle { <0,5.5,-20>, <1.105,3.605,-15.902>, <6.137,3.681,-14.843> }
		triangle { <6.137,3.681,-14.843>, <6.315,5.5,-18.478>, <0,5.5,-20> }
		triangle { <6.315,5.5,-18.478>, <6.137,3.681,-14.843>, <10.513,4.055,-12.076> }
		triangle { <10.513,4.055,-12.076>, <11.667,5.5,-14.142>, <6.315,5.5,-18.478> }
		triangle { <11.667,4.653,-12.252>, <11.667,5.5,-14.142>, <10.513,4.055,-12.076> }
		triangle { <12.396,5.278,-12.396>, <11.667,5.5,-14.142>, <11.667,4.653,-12.252> }
		triangle { <15.25,5.5,-8>, <11.667,5.5,-14.142>, <12.396,5.278,-12.396> }
		triangle { <12.396,5.278,-12.396>, <12.093,4.209,-10.53>, <13.957,4.7,-7.811> }
		triangle { <12.396,5.278,-12.396>, <13.957,4.7,-7.811>, <15.25,5.5,-8> }
		triangle { <15.25,5.5,-8>, <13.957,4.7,-7.811>, <15.25,5.5,-7.722> }
// "hook"
// BFC INVERTNEXT
	}
	object { _2_dash_4cyli_dot_dat matrix <0,-2.8284,2.8284,-8,0,0,0,2.8284,2.8284,4,-6,-18> }
	object { _2_dash_4cyli_dot_dat matrix <0,-5.1265,5.1265,-8,0,0,0,5.1265,5.1265,4,-6,-18> }
	object { _2_dash_4ring2_dot_dat matrix <0,-1.4142,1.4142,-1,0,0,0,1.4142,1.4142,4,-6,-18> }
	object { _2_dash_4ring4_dot_dat matrix <0,-1.0253,1.0253,-1,0,0,0,1.0253,1.0253,4,-6,-18> }
	mesh {
		triangle { <4,-10.596,-17.647>, <4,-12.718,-15.525>, <4,-11.127,-12.874> }
		triangle { <4,-11.127,-12.874>, <4,-8.828,-15.172>, <4,-10.596,-17.647> }
		triangle { <4,-3.525,-24.717>, <4,-5.647,-22.596>, <4,-3.172,-20.828> }
		triangle { <4,-3.172,-20.828>, <4,-0.874,-23.127>, <4,-3.525,-24.717> }
// top
		triangle { <0,-10,0>, <1.105,-10,-4.753>, <0,-10,-6.078> }
		triangle { <0,-10,-6.078>, <-1.105,-10,-4.753>, <0,-10,0> }
		triangle { <1.903,-10,-4.594>, <1.105,-10,-4.753>, <0,-10,0> }
		triangle { <0,-10,0>, <2.579,-10,-4.142>, <1.903,-10,-4.594> }
		triangle { <0,-10,-6.078>, <1.105,-5.962,-10.758>, <0,-7.017,-10.952> }
		triangle { <1.105,-10,-4.753>, <1.105,-5.962,-10.758>, <0,-10,-6.078> }
		triangle { <0,0.981,-16.646>, <1.105,3.605,-15.902>, <0,4.166,-17.302> }
		triangle { <1.105,0.743,-15.45>, <1.105,3.605,-15.902>, <0,0.981,-16.646> }
		triangle { <4.505,-5.314,-10.877>, <4,-5.314,-11.002>, <4,-5.387,-10.872> }
		triangle { <4,-5.387,-10.872>, <1.105,-10,-4.753>, <1.903,-10,-4.594> }
		triangle { <1.903,-10,-4.594>, <4.505,-5.314,-10.877>, <4,-5.387,-10.872> }
		triangle { <4,-5.387,-10.872>, <1.105,-5.962,-10.758>, <1.105,-10,-4.753> }
		triangle { <4,-0.123,-14.628>, <4,-5.314,-11.002>, <4.505,-5.314,-10.877> }
		triangle { <4.505,-5.314,-10.877>, <5.875,-0.123,-14.184>, <4,-0.123,-14.628> }
		triangle { <2.132,0.698,-15.226>, <1.105,3.605,-15.902>, <1.105,0.743,-15.45> }
		triangle { <4,0.36,-14.719>, <1.105,3.605,-15.902>, <2.132,0.698,-15.226> }
		triangle { <6.137,3.681,-14.843>, <1.105,3.605,-15.902>, <4,0.36,-14.719> }
		triangle { <4,0.36,-14.719>, <4,-0.123,-14.628>, <5.875,-0.123,-14.184> }
		triangle { <5.875,-0.123,-14.184>, <6.137,3.681,-14.843>, <4,0.36,-14.719> }
		triangle { <4.297,-10,-4.297>, <2.579,-10,-4.142>, <0,-10,0> }
		triangle { <0,-10,0>, <4.142,-10,-2.579>, <4.297,-10,-4.297> }
		triangle { <7.506,-5.314,-9.069>, <4.297,-10,-4.297>, <8.84,-6.068,-8.84> }
		triangle { <2.579,-10,-4.142>, <4.297,-10,-4.297>, <7.506,-5.314,-9.069> }
		triangle { <8.84,-6.068,-8.84>, <11.55,-0.531,-11.55>, <10.047,-0.123,-11.609> }
		triangle { <10.047,-0.123,-11.609>, <7.506,-5.314,-9.069>, <8.84,-6.068,-8.84> }
		triangle { <10.513,4.055,-12.076>, <11.55,-0.531,-11.55>, <11.667,4.653,-12.252> }
		triangle { <10.047,-0.123,-11.609>, <11.55,-0.531,-11.55>, <10.513,4.055,-12.076> }
		triangle { <11.667,4.653,-12.252>, <11.55,-0.531,-11.55>, <12.396,5.278,-12.396> }
		triangle { <7.506,-5.314,-9.069>, <1.903,-10,-4.594>, <2.579,-10,-4.142> }
		triangle { <4.505,-5.314,-10.876>, <1.903,-10,-4.594>, <7.506,-5.314,-9.069> }
		triangle { <4.505,-5.314,-10.876>, <7.506,-5.314,-9.069>, <10.047,-0.123,-11.609> }
		triangle { <10.047,-0.123,-11.609>, <5.875,-0.123,-14.184>, <4.505,-5.314,-10.876> }
		triangle { <10.513,4.055,-12.076>, <5.875,-0.123,-14.184>, <10.047,-0.123,-11.609> }
		triangle { <6.137,3.681,-14.843>, <5.875,-0.123,-14.184>, <10.513,4.055,-12.076> }
		triangle { <4.594,-10,-1.903>, <4.142,-10,-2.579>, <0,-10,0> }
		triangle { <0,-10,0>, <4.753,-10,-1.105>, <4.594,-10,-1.903> }
		triangle { <4.297,-10,-4.297>, <9.069,-5.314,-7.506>, <8.84,-6.068,-8.84> }
		triangle { <4.142,-10,-2.579>, <9.069,-5.314,-7.506>, <4.297,-10,-4.297> }
		triangle { <11.609,-0.123,-10.047>, <11.55,-0.531,-11.55>, <8.84,-6.068,-8.84> }
		triangle { <8.84,-6.068,-8.84>, <9.069,-5.314,-7.506>, <11.609,-0.123,-10.047> }
		triangle { <11.55,-0.531,-11.55>, <12.093,4.209,-10.53>, <12.396,5.278,-12.396> }
		triangle { <11.609,-0.123,-10.047>, <12.093,4.209,-10.53>, <11.55,-0.531,-11.55> }
		triangle { <4.594,-10,-1.903>, <9.069,-5.314,-7.506>, <4.142,-10,-2.579> }
		triangle { <10.876,-5.314,-4.505>, <9.069,-5.314,-7.506>, <4.594,-10,-1.903> }
		triangle { <11.609,-0.123,-10.047>, <9.069,-5.314,-7.506>, <10.876,-5.314,-4.505> }
		triangle { <10.876,-5.314,-4.505>, <14.184,-0.123,-5.875>, <11.609,-0.123,-10.047> }
		triangle { <13.454,3,-8>, <12.093,4.209,-10.53>, <11.609,-0.123,-10.047> }
		triangle { <11.609,-0.123,-10.047>, <14.184,-0.123,-5.875>, <13.454,3,-8> }
		triangle { <12.093,4.209,-10.53>, <13.454,3,-8>, <13.957,4.7,-7.811> }
		triangle { <14.554,2.014,-6.028>, <13.454,3,-8>, <14.184,-0.123,-5.875> }
		triangle { <6.078,-10,0>, <4.753,-10,-1.105>, <0,-10,0> }
		triangle { <0,-10,0>, <4.753,-10,1.105>, <6.078,-10,0> }
		triangle { <11.721,-5.314,-1.105>, <6.078,-10,0>, <12.502,-6.068,0> }
		triangle { <4.753,-10,-1.105>, <6.078,-10,0>, <11.721,-5.314,-1.105> }
		triangle { <12.502,-6.068,0>, <16.01,-1,0>, <15.088,-0.448,-1.105> }
		triangle { <15.088,-0.448,-1.105>, <11.721,-5.314,-1.105>, <12.502,-6.068,0> }
		triangle { <11.721,-5.314,-1.105>, <4.594,-10,-1.903>, <4.753,-10,-1.105> }
		triangle { <10.877,-5.314,-4.505>, <4.594,-10,-1.903>, <11.721,-5.314,-1.105> }
		triangle { <10.877,-5.314,-4.505>, <11.721,-5.314,-1.105>, <15.159,-0.123,-1.755> }
		triangle { <15.159,-0.123,-1.755>, <14.184,-0.123,-5.875>, <10.877,-5.314,-4.505> }
		triangle { <15.159,-0.123,-1.755>, <11.721,-5.314,-1.105>, <15.088,-0.448,-1.105> }
		triangle { <14.554,2.014,-6.028>, <14.184,-0.123,-5.875>, <15.159,-0.123,-1.755> }
		triangle { <4.594,-10,1.903>, <4.753,-10,1.105>, <0,-10,0> }
		triangle { <0,-10,0>, <4.142,-10,2.579>, <4.594,-10,1.903> }
		triangle { <6.078,-10,0>, <11.721,-5.314,1.105>, <12.502,-6.068,0> }
		triangle { <4.753,-10,1.105>, <11.721,-5.314,1.105>, <6.078,-10,0> }
		triangle { <14.484,-1.5,1>, <16.01,-1,0>, <12.502,-6.068,0> }
		triangle { <12.502,-6.068,0>, <11.721,-5.314,1.105>, <14.484,-1.5,1> }
		triangle { <14.484,-1.5,1>, <11.721,-5.314,1.105>, <14.452,-1.367,1.105> }
		triangle { <4.594,-10,1.903>, <11.721,-5.314,1.105>, <4.753,-10,1.105> }
		triangle { <10.877,-5.314,4.505>, <11.721,-5.314,1.105>, <4.594,-10,1.903> }
		triangle { <15.08,-0.123,2.09>, <14.452,-1.367,1.105>, <11.721,-5.314,1.105> }
		triangle { <11.721,-5.314,1.105>, <10.877,-5.314,4.505>, <15.08,-0.123,2.09> }
		triangle { <14.184,-0.123,5.875>, <15.08,-0.123,2.09>, <10.877,-5.314,4.505> }
		triangle { <14.184,-0.123,5.875>, <15.095,5.135,6.252>, <15.08,-0.123,2.09> }
		triangle { <4.297,-10,4.297>, <4.142,-10,2.579>, <0,-10,0> }
		triangle { <0,-10,0>, <2.579,-10,4.142>, <4.297,-10,4.297> }
		triangle { <9.069,-5.314,7.506>, <4.297,-10,4.297>, <8.84,-6.068,8.84> }
		triangle { <4.142,-10,2.579>, <4.297,-10,4.297>, <9.069,-5.314,7.506> }
		triangle { <8.84,-6.068,8.84>, <11.55,-0.531,11.55>, <11.609,-0.123,10.047> }
		triangle { <11.609,-0.123,10.047>, <9.069,-5.314,7.506>, <8.84,-6.068,8.84> }
		triangle { <12.293,6,10.731>, <11.55,-0.531,11.55>, <12.502,6,12.502> }
		triangle { <11.609,-0.123,10.047>, <11.55,-0.531,11.55>, <12.293,6,10.731> }
		triangle { <12.502,6,12.502>, <11.667,7,11.667>, <12.293,6,10.731> }
		triangle { <9.069,-5.314,7.506>, <4.594,-10,1.903>, <4.142,-10,2.579> }
		triangle { <10.876,-5.314,4.505>, <4.594,-10,1.903>, <9.069,-5.314,7.506> }
		triangle { <10.876,-5.314,4.505>, <9.069,-5.314,7.506>, <11.609,-0.123,10.047> }
		triangle { <11.609,-0.123,10.047>, <14.184,-0.123,5.875>, <10.876,-5.314,4.505> }
		triangle { <15.095,5.135,6.252>, <14.184,-0.123,5.875>, <14.828,6,6.938> }
		triangle { <14.828,6,6.938>, <14.184,-0.123,5.875>, <11.609,-0.123,10.047> }
		triangle { <14.828,6,6.938>, <11.609,-0.123,10.047>, <12.293,6,10.731> }
		triangle { <1.903,-10,4.594>, <2.579,-10,4.142>, <0,-10,0> }
		triangle { <0,-10,0>, <1.105,-10,4.753>, <1.903,-10,4.594> }
		triangle { <4.297,-10,4.297>, <7.506,-5.314,9.069>, <8.84,-6.068,8.84> }
		triangle { <2.579,-10,4.142>, <7.506,-5.314,9.069>, <4.297,-10,4.297> }
		triangle { <10.047,-0.123,11.609>, <11.55,-0.531,11.55>, <8.84,-6.068,8.84> }
		triangle { <8.84,-6.068,8.84>, <7.506,-5.314,9.069>, <10.047,-0.123,11.609> }
		triangle { <11.55,-0.531,11.55>, <10.731,6,12.293>, <12.502,6,12.502> }
		triangle { <10.047,-0.123,11.609>, <10.731,6,12.293>, <11.55,-0.531,11.55> }
		triangle { <11.667,7,11.667>, <12.502,6,12.502>, <10.731,6,12.293> }
		triangle { <1.903,-10,4.594>, <7.506,-5.314,9.069>, <2.579,-10,4.142> }
		triangle { <4.505,-5.314,10.876>, <7.506,-5.314,9.069>, <1.903,-10,4.594> }
		triangle { <10.047,-0.123,11.609>, <7.506,-5.314,9.069>, <4.505,-5.314,10.876> }
		triangle { <4.505,-5.314,10.876>, <5.875,-0.123,14.184>, <10.047,-0.123,11.609> }
		triangle { <5.875,-0.123,14.184>, <10.731,6,12.293>, <10.047,-0.123,11.609> }
		triangle { <6.314,6,15.244>, <10.731,6,12.293>, <5.875,-0.123,14.184> }
		triangle { <0,-10,6.078>, <1.105,-10,4.753>, <0,-10,0> }
		triangle { <0,-10,0>, <-1.105,-10,4.753>, <0,-10,6.078> }
		triangle { <1.105,-5.314,11.721>, <0,-10,6.078>, <0,-6.068,12.502> }
		triangle { <1.105,-10,4.753>, <0,-10,6.078>, <1.105,-5.314,11.721> }
		triangle { <0,-6.068,12.502>, <0,-0.531,16.334>, <1.105,-0.123,15.313> }
		triangle { <1.105,-0.123,15.313>, <1.105,-5.314,11.721>, <0,-6.068,12.502> }
		triangle { <1.105,6,16.28>, <0,-0.531,16.334>, <0,6,17.68> }
		triangle { <1.105,-0.123,15.313>, <0,-0.531,16.334>, <1.105,6,16.28> }
		triangle { <0,6,17.68>, <0,7,16.5>, <1.105,6,16.28> }
		triangle { <1.105,-5.314,11.721>, <1.903,-10,4.594>, <1.105,-10,4.753> }
		triangle { <4.505,-5.314,10.877>, <1.903,-10,4.594>, <1.105,-5.314,11.721> }
		triangle { <4.505,-5.314,10.877>, <1.105,-5.314,11.721>, <1.105,-0.123,15.313> }
		triangle { <1.105,-0.123,15.313>, <5.875,-0.123,14.184>, <4.505,-5.314,10.877> }
		triangle { <1.105,6,16.28>, <5.875,-0.123,14.184>, <1.105,-0.123,15.313> }
		triangle { <6.314,6,15.244>, <5.875,-0.123,14.184>, <1.105,6,16.28> }
// right side visor connections
	}
	object { _1_dash_4disc_dot_dat matrix <0,0,-5,-1,0,0,0,5,0,-16,17,-3> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,-5,-3.25,0,0,0,5,0,-16,17,-3> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-5,0,-2.75,0,0,0,0,-5,-19.25,17,-3> }
	object { _1_dash_4disc_dot_dat matrix <0,0,-5,1,0,0,-2.75,5,0,-19.25,17,-3> }
	mesh {
		triangle { <-19.25,17,0>, <-19.25,17,-3>, <-22,22,-3> }
		triangle { <-22,22,-3>, <-22,22,0>, <-19.25,17,0> }
		triangle { <-22,22,-3>, <-16,22,-3>, <-16,22,0> }
		triangle { <-16,22,0>, <-22,22,0>, <-22,22,-3> }
		triangle { <-16,22,-3>, <-16,17,-3>, <-16,17,0> }
		triangle { <-16,17,0>, <-16,22,0>, <-16,22,-3> }
		triangle { <-20.25,17,-8>, <-19.25,17,-8>, <-19.25,17,0> }
		triangle { <-19.25,17,0>, <-20.25,17,0>, <-20.25,17,-8> }
		triangle { <-16.875,12,-8>, <-20.25,17,-8>, <-20.25,17,0> }
		triangle { <-20.25,17,0>, <-16.875,12,0>, <-16.875,12,-8> }
		triangle { <-17.6,12,-8>, <-16.875,12,-8>, <-16.875,12,0> }
		triangle { <-16.875,12,0>, <-17.6,12,0>, <-17.6,12,-8> }
		triangle { <-15.25,6,-7.667>, <-15.25,6,-8>, <-17.6,12,-8> }
		triangle { <-17.6,12,-8>, <-17.6,12,-7>, <-15.25,6,-7.667> }
		triangle { <-16,17,-8>, <-20.25,17,-8>, <-16.875,12,-8> }
		triangle { <-16.875,12,-8>, <-16,15,-8>, <-16,17,-8> }
		triangle { <-16,17,0>, <-16,17,-8>, <-16,15,-8> }
		triangle { <-16,15,-8>, <-16,15,0>, <-16,17,0> }
		triangle { <-16,15,-3.5>, <-16,15,-8>, <-14.75,10.5,-7> }
		triangle { <-14.75,10.5,-7>, <-14.75,10.5,-3.5>, <-16,15,-3.5> }
		triangle { <-14.75,10.5,-7>, <-16,15,-8>, <-13.5,6,-8> }
		triangle { <-13.5,6,-8>, <-13.5,6,-7>, <-14.75,10.5,-7> }
		triangle { <-17.6,12,-8>, <-15.25,6,-8>, <-13.5,6,-8> }
		triangle { <-13.5,6,-8>, <-16.875,12,-8>, <-17.6,12,-8> }
		triangle { <-16.875,12,-8>, <-13.5,6,-8>, <-16,15,-8> }
		triangle { <-13.5,10.5,0>, <-13.5,10.5,-3.5>, <-13.5,6,-3.5> }
		triangle { <-13.5,6,-3.5>, <-13.5,6,0>, <-13.5,10.5,0> }
	}
	object { _1_dash_4disc_dot_dat matrix <0,0,-3.5,-1,0,0,0,4.5,0,-13.5,6,-3.5> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-4.5,0,-1.25,0,0,0,0,-3.5,-13.5,6,-3.5> }
	object { _1_dash_4ndis_dot_dat matrix <0,0,-3.5,-1,0,0,-1.25,4.5,0,-13.5,6,-3.5> }
	object { _1_dash_4disc_dot_dat matrix <0,0,-3.5,-1,0,0,0,4.5,0,-13.5,10.5,0> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,-3.5,-1.25,0,0,0,4.5,0,-13.5,10.5,0> }
	object { _1_dash_4cyls2_dot_dat matrix <0,-4.5,0,-1.25,0,0,0,0,-3.5,-14.75,10.5,0> }
	object { _1_dash_4ndis_dot_dat matrix <0,0,-3.5,-1,0,0,-1.25,4.5,0,-14.75,10.5,0> }
// "skirt" around bottom
	object { _1_dash_4ring4_dot_dat matrix <-4,0,0,0,-1,0,0,0,4,0,22,0> }
	object { _1_dash_4rin10_dot_dat matrix <-2,0,0,0,-1,0,0,0,2,0,22,0> }
	object { _1_dash_4con15_dot_dat matrix <-1.1,0,0,0,-4,0,0,0,1.1,0,12,0> }
	object { _1_dash_4rin10_dot_dat matrix <-1.6,0,0,0,-1,0,0,0,1.6,0,12,0> }
	object { _1_dash_4con5_dot_dat matrix <-3.375,0,0,0,-5,0,0,0,3.375,0,17,0> }
	object { _1_dash_4ring8_dot_dat matrix <-2.25,0,0,0,-1,0,0,0,2.25,0,17,0> }
	object { _1_dash_4con7_dot_dat matrix <-2.75,0,0,0,-5,0,0,0,2.75,0,22,0> }
	object { _1_dash_4cyli_dot_dat matrix <-16.5,0,0,0,2,0,0,0,16.5,0,6,0> }
// Visor attachment area
	object { _4_dash_4disc_dot_dat matrix <0,0,-1.75,1,0,0,0,1.75,0,-17,6,0> }
	object { _4_dash_4ndis_dot_dat matrix <0,0,-1.75,1,0,0,0,1.75,0,-19,6,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <0,0,-1.75,-2,0,0,0,1.75,0,-17,6,0> }
	mesh {
		triangle { <-19,3,-8>, <-19,4.25,-1.75>, <-19,4.25,1.75> }
		triangle { <-19,4.25,1.75>, <-19,-1.5,1>, <-19,3,-8> }
		triangle { <-19,12,-7>, <-19,7.75,-1.75>, <-19,4.25,-1.75> }
		triangle { <-19,4.25,-1.75>, <-19,3,-8>, <-19,12,-7> }
		triangle { <-19,12,10.5>, <-19,7.75,1.75>, <-19,7.75,-1.75> }
		triangle { <-19,7.75,-1.75>, <-19,12,-7>, <-19,12,10.5> }
		triangle { <-19,10.5,10.5>, <-19,4.25,1.75>, <-19,7.75,1.75> }
		triangle { <-19,7.75,1.75>, <-19,12,10.5>, <-19,10.5,10.5> }
		triangle { <-19,10.5,10.5>, <-19,-1.5,1>, <-19,4.25,1.75> }
		triangle { <-15.25,6,-7.667>, <-17.6,12,-7>, <-19,12,-7> }
		triangle { <-19,12,-7>, <-19,3,-8>, <-15.25,6,-7.667> }
		triangle { <-19,3,-8>, <-15.25,5.5,-7.722>, <-15.25,6,-7.667> }
		triangle { <-19,3,-8>, <-13.454,3,-8>, <-13.957,4.7,-7.811> }
		triangle { <-13.957,4.7,-7.811>, <-15.25,5.5,-7.722>, <-19,3,-8> }
		triangle { <-14.554,2.014,-6.028>, <-13.454,3,-8>, <-19,3,-8> }
		triangle { <-19,3,-8>, <-15.159,-0.123,-1.755>, <-14.554,2.014,-6.028> }
		triangle { <-16.01,-1,0>, <-15.088,-0.448,-1.105>, <-15.159,-0.123,-1.755> }
		triangle { <-15.159,-0.123,-1.755>, <-19,3,-8>, <-16.01,-1,0> }
		triangle { <-19,3,-8>, <-19,-1.5,1>, <-16.01,-1,0> }
		triangle { <-19,-1.5,1>, <-14.484,-1.5,1>, <-16.01,-1,0> }
		triangle { <-15.08,-0.123,2.09>, <-14.452,-1.367,1.105>, <-19,-1.5,1> }
		triangle { <-19,-1.5,1>, <-14.452,-1.367,1.105>, <-14,-1.5,1> }
		triangle { <-19,10.5,10.5>, <-15.095,5.135,6.252>, <-15.08,-0.123,2.09> }
		triangle { <-15.08,-0.123,2.09>, <-19,-1.5,1>, <-19,10.5,10.5> }
		triangle { <-19,10.5,10.5>, <-14.828,6,6.938>, <-15.095,5.135,6.252> }
		triangle { <-13.77,8,8.521>, <-14.828,6,6.938>, <-19,10.5,10.5> }
		triangle { <-19,10.5,10.5>, <-13.258,10.5,10.5>, <-13.77,8,8.521> }
		triangle { <-13.745,12,10.5>, <-13.258,10.5,10.5>, <-19,10.5,10.5> }
		triangle { <-19,10.5,10.5>, <-19,12,10.5>, <-13.745,12,10.5> }
		triangle { <-17.6,12,-7>, <-13.745,12,10.5>, <-19,12,10.5> }
		triangle { <-19,12,10.5>, <-19,12,-7>, <-17.6,12,-7> }
// front "visor"
		triangle { <0,6,-20>, <0,6,-16.2>, <-6.2,6,-14.967> }
		triangle { <-6.2,6,-14.967>, <-6.314,6,-18.478>, <0,6,-20> }
		triangle { <-6.314,6,-18.478>, <-6.2,6,-14.967>, <-11.455,6,-11.455> }
		triangle { <-11.455,6,-11.455>, <-11.667,6,-14.142>, <-6.314,6,-18.478> }
		triangle { <-11.667,6,-14.142>, <-11.455,6,-11.455>, <-13.5,6,-8> }
		triangle { <-13.5,6,-8>, <-15.25,6,-8>, <-11.667,6,-14.142> }
		triangle { <-15.25,6,-7.667>, <-15.25,5.5,-7.722>, <-15.25,5.5,-8> }
		triangle { <-15.25,5.5,-8>, <-15.25,6,-8>, <-15.25,6,-7.667> }
		triangle { <-15.25,6,-8>, <-15.25,5.5,-8>, <-11.667,5.5,-14.142> }
		triangle { <-11.667,5.5,-14.142>, <-11.667,6,-14.142>, <-15.25,6,-8> }
		triangle { <-11.667,6,-14.142>, <-11.667,5.5,-14.142>, <-6.315,5.5,-18.478> }
		triangle { <-6.315,5.5,-18.478>, <-6.315,6,-18.478>, <-11.667,6,-14.142> }
		triangle { <-6.315,6,-18.478>, <-6.315,5.5,-18.478>, <0,5.5,-20> }
		triangle { <0,5.5,-20>, <0,6,-20>, <-6.315,6,-18.478> }
	}
	object { _1_dash_4ring5_dot_dat matrix <0,0,-2.7,0,-1,0,-2.7,0,0,0,6,0> }
	mesh {
		triangle { <0,4.166,-17.302>, <0,5.5,-20>, <-1.105,3.605,-15.902> }
		triangle { <-6.315,5.5,-18.478>, <-6.137,3.681,-14.843>, <-1.105,3.605,-15.902> }
		triangle { <-1.105,3.605,-15.902>, <0,5.5,-20>, <-6.315,5.5,-18.478> }
		triangle { <-11.667,5.5,-14.142>, <-10.513,4.055,-12.076>, <-6.137,3.681,-14.843> }
		triangle { <-6.137,3.681,-14.843>, <-6.315,5.5,-18.478>, <-11.667,5.5,-14.142> }
		triangle { <-11.667,4.653,-12.252>, <-10.513,4.055,-12.076>, <-11.667,5.5,-14.142> }
		triangle { <-12.396,5.278,-12.396>, <-11.667,4.653,-12.252>, <-11.667,5.5,-14.142> }
		triangle { <-15.25,5.5,-8>, <-12.396,5.278,-12.396>, <-11.667,5.5,-14.142> }
		triangle { <-12.396,5.278,-12.396>, <-13.957,4.7,-7.811>, <-12.093,4.209,-10.53> }
		triangle { <-12.396,5.278,-12.396>, <-15.25,5.5,-8>, <-13.957,4.7,-7.811> }
		triangle { <-15.25,5.5,-8>, <-15.25,5.5,-7.722>, <-13.957,4.7,-7.811> }
// "hook"
	}
	object { _2_dash_4ring2_dot_dat matrix <0,-1.4142,1.4142,1,0,0,0,1.4142,1.4142,-4,-6,-18> }
	object { _2_dash_4ring4_dot_dat matrix <0,-1.0253,1.0253,1,0,0,0,1.0253,1.0253,-4,-6,-18> }
	mesh {
		triangle { <-4,-8.828,-15.172>, <-4,-11.127,-12.874>, <-4,-12.718,-15.525> }
		triangle { <-4,-12.718,-15.525>, <-4,-10.596,-17.647>, <-4,-8.828,-15.172> }
		triangle { <-4,-0.874,-23.127>, <-4,-3.172,-20.828>, <-4,-5.647,-22.596> }
		triangle { <-4,-5.647,-22.596>, <-4,-3.525,-24.717>, <-4,-0.874,-23.127> }
// top
		triangle { <0,-10,0>, <-1.105,-10,-4.753>, <-1.903,-10,-4.594> }
		triangle { <-1.903,-10,-4.594>, <-2.579,-10,-4.142>, <0,-10,0> }
		triangle { <-1.105,-5.962,-10.758>, <0,-10,-6.078>, <0,-7.017,-10.952> }
		triangle { <-1.105,-5.962,-10.758>, <-1.105,-10,-4.753>, <0,-10,-6.078> }
		triangle { <-1.105,3.605,-15.902>, <0,0.981,-16.646>, <0,4.166,-17.302> }
		triangle { <-1.105,3.605,-15.902>, <-1.105,0.743,-15.45>, <0,0.981,-16.646> }
		triangle { <-4,-5.314,-11.002>, <-4.505,-5.314,-10.877>, <-4,-5.387,-10.872> }
		triangle { <-4.505,-5.314,-10.877>, <-1.903,-10,-4.594>, <-1.105,-10,-4.753> }
		triangle { <-1.105,-10,-4.753>, <-4,-5.387,-10.872>, <-4.505,-5.314,-10.877> }
		triangle { <-1.105,-5.962,-10.758>, <-4,-5.387,-10.872>, <-1.105,-10,-4.753> }
		triangle { <-5.875,-0.123,-14.184>, <-4.505,-5.314,-10.877>, <-4,-5.314,-11.002> }
		triangle { <-4,-5.314,-11.002>, <-4,-0.123,-14.628>, <-5.875,-0.123,-14.184> }
		triangle { <-1.105,3.605,-15.902>, <-2.132,0.698,-15.226>, <-1.105,0.743,-15.45> }
		triangle { <-1.105,3.605,-15.902>, <-4,0.36,-14.719>, <-2.132,0.698,-15.226> }
		triangle { <-1.105,3.605,-15.902>, <-6.137,3.681,-14.843>, <-4,0.36,-14.719> }
		triangle { <-6.137,3.681,-14.843>, <-5.875,-0.123,-14.184>, <-4,-0.123,-14.628> }
		triangle { <-4,-0.123,-14.628>, <-4,0.36,-14.719>, <-6.137,3.681,-14.843> }
		triangle { <0,-10,0>, <-2.579,-10,-4.142>, <-4.297,-10,-4.297> }
		triangle { <-4.297,-10,-4.297>, <-4.142,-10,-2.579>, <0,-10,0> }
		triangle { <-4.297,-10,-4.297>, <-7.506,-5.314,-9.069>, <-8.84,-6.068,-8.84> }
		triangle { <-4.297,-10,-4.297>, <-2.579,-10,-4.142>, <-7.506,-5.314,-9.069> }
		triangle { <-7.506,-5.314,-9.069>, <-10.047,-0.123,-11.609>, <-11.55,-0.531,-11.55> }
		triangle { <-11.55,-0.531,-11.55>, <-8.84,-6.068,-8.84>, <-7.506,-5.314,-9.069> }
		triangle { <-11.55,-0.531,-11.55>, <-10.513,4.055,-12.076>, <-11.667,4.653,-12.252> }
		triangle { <-11.55,-0.531,-11.55>, <-10.047,-0.123,-11.609>, <-10.513,4.055,-12.076> }
		triangle { <-11.55,-0.531,-11.55>, <-11.667,4.653,-12.252>, <-12.396,5.278,-12.396> }
		triangle { <-1.903,-10,-4.594>, <-7.506,-5.314,-9.069>, <-2.579,-10,-4.142> }
		triangle { <-1.903,-10,-4.594>, <-4.505,-5.314,-10.876>, <-7.506,-5.314,-9.069> }
		triangle { <-10.047,-0.123,-11.609>, <-7.506,-5.314,-9.069>, <-4.505,-5.314,-10.876> }
		triangle { <-4.505,-5.314,-10.876>, <-5.875,-0.123,-14.184>, <-10.047,-0.123,-11.609> }
		triangle { <-5.875,-0.123,-14.184>, <-10.513,4.055,-12.076>, <-10.047,-0.123,-11.609> }
		triangle { <-5.875,-0.123,-14.184>, <-6.137,3.681,-14.843>, <-10.513,4.055,-12.076> }
		triangle { <0,-10,0>, <-4.142,-10,-2.579>, <-4.594,-10,-1.903> }
		triangle { <-4.594,-10,-1.903>, <-4.753,-10,-1.105>, <0,-10,0> }
		triangle { <-9.069,-5.314,-7.506>, <-4.297,-10,-4.297>, <-8.84,-6.068,-8.84> }
		triangle { <-9.069,-5.314,-7.506>, <-4.142,-10,-2.579>, <-4.297,-10,-4.297> }
		triangle { <-9.069,-5.314,-7.506>, <-8.84,-6.068,-8.84>, <-11.55,-0.531,-11.55> }
		triangle { <-11.55,-0.531,-11.55>, <-11.609,-0.123,-10.047>, <-9.069,-5.314,-7.506> }
		triangle { <-12.093,4.209,-10.53>, <-11.55,-0.531,-11.55>, <-12.396,5.278,-12.396> }
		triangle { <-12.093,4.209,-10.53>, <-11.609,-0.123,-10.047>, <-11.55,-0.531,-11.55> }
		triangle { <-9.069,-5.314,-7.506>, <-4.594,-10,-1.903>, <-4.142,-10,-2.579> }
		triangle { <-9.069,-5.314,-7.506>, <-10.876,-5.314,-4.505>, <-4.594,-10,-1.903> }
		triangle { <-10.876,-5.314,-4.505>, <-9.069,-5.314,-7.506>, <-11.609,-0.123,-10.047> }
		triangle { <-11.609,-0.123,-10.047>, <-14.184,-0.123,-5.875>, <-10.876,-5.314,-4.505> }
		triangle { <-11.609,-0.123,-10.047>, <-12.093,4.209,-10.53>, <-13.454,3,-8> }
		triangle { <-13.454,3,-8>, <-14.184,-0.123,-5.875>, <-11.609,-0.123,-10.047> }
		triangle { <-13.957,4.7,-7.811>, <-13.454,3,-8>, <-12.093,4.209,-10.53> }
		triangle { <-13.454,3,-8>, <-14.554,2.014,-6.028>, <-14.184,-0.123,-5.875> }
		triangle { <0,-10,0>, <-4.753,-10,-1.105>, <-6.078,-10,0> }
		triangle { <-6.078,-10,0>, <-4.753,-10,1.105>, <0,-10,0> }
		triangle { <-6.078,-10,0>, <-11.721,-5.314,-1.105>, <-12.502,-6.068,0> }
		triangle { <-6.078,-10,0>, <-4.753,-10,-1.105>, <-11.721,-5.314,-1.105> }
		triangle { <-11.721,-5.314,-1.105>, <-15.088,-0.448,-1.105>, <-16.01,-1,0> }
		triangle { <-16.01,-1,0>, <-12.502,-6.068,0>, <-11.721,-5.314,-1.105> }
		triangle { <-4.594,-10,-1.903>, <-11.721,-5.314,-1.105>, <-4.753,-10,-1.105> }
		triangle { <-4.594,-10,-1.903>, <-10.877,-5.314,-4.505>, <-11.721,-5.314,-1.105> }
		triangle { <-15.159,-0.123,-1.755>, <-11.721,-5.314,-1.105>, <-10.877,-5.314,-4.505> }
		triangle { <-10.877,-5.314,-4.505>, <-14.184,-0.123,-5.875>, <-15.159,-0.123,-1.755> }
		triangle { <-11.721,-5.314,-1.105>, <-15.159,-0.123,-1.755>, <-15.088,-0.448,-1.105> }
		triangle { <-14.184,-0.123,-5.875>, <-14.554,2.014,-6.028>, <-15.159,-0.123,-1.755> }
		triangle { <0,-10,0>, <-4.753,-10,1.105>, <-4.594,-10,1.903> }
		triangle { <-4.594,-10,1.903>, <-4.142,-10,2.579>, <0,-10,0> }
		triangle { <-11.721,-5.314,1.105>, <-6.078,-10,0>, <-12.502,-6.068,0> }
		triangle { <-11.721,-5.314,1.105>, <-4.753,-10,1.105>, <-6.078,-10,0> }
		triangle { <-11.721,-5.314,1.105>, <-12.502,-6.068,0>, <-16.01,-1,0> }
		triangle { <-16.01,-1,0>, <-14.484,-1.5,1>, <-11.721,-5.314,1.105> }
		triangle { <-11.721,-5.314,1.105>, <-14.484,-1.5,1>, <-14.452,-1.367,1.105> }
		triangle { <-11.721,-5.314,1.105>, <-4.594,-10,1.903>, <-4.753,-10,1.105> }
		triangle { <-11.721,-5.314,1.105>, <-10.877,-5.314,4.505>, <-4.594,-10,1.903> }
		triangle { <-11.721,-5.314,1.105>, <-14.452,-1.367,1.105>, <-15.08,-0.123,2.09> }
		triangle { <-15.08,-0.123,2.09>, <-10.877,-5.314,4.505>, <-11.721,-5.314,1.105> }
		triangle { <-15.08,-0.123,2.09>, <-14.184,-0.123,5.875>, <-10.877,-5.314,4.505> }
		triangle { <-15.095,5.135,6.252>, <-14.184,-0.123,5.875>, <-15.08,-0.123,2.09> }
		triangle { <0,-10,0>, <-4.142,-10,2.579>, <-4.297,-10,4.297> }
		triangle { <-4.297,-10,4.297>, <-2.579,-10,4.142>, <0,-10,0> }
		triangle { <-4.297,-10,4.297>, <-9.069,-5.314,7.506>, <-8.84,-6.068,8.84> }
		triangle { <-4.297,-10,4.297>, <-4.142,-10,2.579>, <-9.069,-5.314,7.506> }
		triangle { <-9.069,-5.314,7.506>, <-11.609,-0.123,10.047>, <-11.55,-0.531,11.55> }
		triangle { <-11.55,-0.531,11.55>, <-8.84,-6.068,8.84>, <-9.069,-5.314,7.506> }
		triangle { <-11.55,-0.531,11.55>, <-12.293,6,10.731>, <-12.502,6,12.502> }
		triangle { <-11.55,-0.531,11.55>, <-11.609,-0.123,10.047>, <-12.293,6,10.731> }
		triangle { <-11.667,7,11.667>, <-12.502,6,12.502>, <-12.293,6,10.731> }
		triangle { <-4.594,-10,1.903>, <-9.069,-5.314,7.506>, <-4.142,-10,2.579> }
		triangle { <-4.594,-10,1.903>, <-10.876,-5.314,4.505>, <-9.069,-5.314,7.506> }
		triangle { <-11.609,-0.123,10.047>, <-9.069,-5.314,7.506>, <-10.876,-5.314,4.505> }
		triangle { <-10.876,-5.314,4.505>, <-14.184,-0.123,5.875>, <-11.609,-0.123,10.047> }
		triangle { <-14.184,-0.123,5.875>, <-15.095,5.135,6.252>, <-14.828,6,6.938> }
		triangle { <-14.184,-0.123,5.875>, <-14.828,6,6.938>, <-11.609,-0.123,10.047> }
		triangle { <-11.609,-0.123,10.047>, <-14.828,6,6.938>, <-12.293,6,10.731> }
		triangle { <0,-10,0>, <-2.579,-10,4.142>, <-1.903,-10,4.594> }
		triangle { <-1.903,-10,4.594>, <-1.105,-10,4.753>, <0,-10,0> }
		triangle { <-7.506,-5.314,9.069>, <-4.297,-10,4.297>, <-8.84,-6.068,8.84> }
		triangle { <-7.506,-5.314,9.069>, <-2.579,-10,4.142>, <-4.297,-10,4.297> }
		triangle { <-7.506,-5.314,9.069>, <-8.84,-6.068,8.84>, <-11.55,-0.531,11.55> }
		triangle { <-11.55,-0.531,11.55>, <-10.047,-0.123,11.609>, <-7.506,-5.314,9.069> }
		triangle { <-10.731,6,12.293>, <-11.55,-0.531,11.55>, <-12.502,6,12.502> }
		triangle { <-10.731,6,12.293>, <-10.047,-0.123,11.609>, <-11.55,-0.531,11.55> }
		triangle { <-12.502,6,12.502>, <-11.667,7,11.667>, <-10.731,6,12.293> }
		triangle { <-7.506,-5.314,9.069>, <-1.903,-10,4.594>, <-2.579,-10,4.142> }
		triangle { <-7.506,-5.314,9.069>, <-4.505,-5.314,10.876>, <-1.903,-10,4.594> }
		triangle { <-4.505,-5.314,10.876>, <-7.506,-5.314,9.069>, <-10.047,-0.123,11.609> }
		triangle { <-10.047,-0.123,11.609>, <-5.875,-0.123,14.184>, <-4.505,-5.314,10.876> }
		triangle { <-10.731,6,12.293>, <-5.875,-0.123,14.184>, <-10.047,-0.123,11.609> }
		triangle { <-10.731,6,12.293>, <-6.314,6,15.244>, <-5.875,-0.123,14.184> }
		triangle { <-1.105,-5.314,11.721>, <0,-6.068,12.502>, <0,-10,6.078> }
		triangle { <-1.105,-10,4.753>, <-1.105,-5.314,11.721>, <0,-10,6.078> }
		triangle { <-1.105,-5.314,11.721>, <-1.105,-0.123,15.313>, <0,-0.531,16.334> }
		triangle { <0,-0.531,16.334>, <0,-6.068,12.502>, <-1.105,-5.314,11.721> }
		triangle { <-1.105,6,16.28>, <0,6,17.68>, <0,-0.531,16.334> }
		triangle { <-1.105,-0.123,15.313>, <-1.105,6,16.28>, <0,-0.531,16.334> }
		triangle { <0,6,17.68>, <-1.105,6,16.28>, <0,7,16.5> }
		triangle { <-1.105,-5.314,11.721>, <-1.105,-10,4.753>, <-1.903,-10,4.594> }
		triangle { <-4.505,-5.314,10.877>, <-1.105,-5.314,11.721>, <-1.903,-10,4.594> }
		triangle { <-1.105,-0.123,15.313>, <-1.105,-5.314,11.721>, <-4.505,-5.314,10.877> }
		triangle { <-4.505,-5.314,10.877>, <-5.875,-0.123,14.184>, <-1.105,-0.123,15.313> }
		triangle { <-1.105,6,16.28>, <-1.105,-0.123,15.313>, <-5.875,-0.123,14.184> }
		triangle { <-6.314,6,15.244>, <-1.105,6,16.28>, <-5.875,-0.123,14.184> }
// Added lines/Condlines
	}
}
#end
#end // ifndef (_30175_dot_dat)


//// Primitive 2-4disc.dat
#ifndef (_2_dash_4disc_dot_dat)
#declare _2_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { box { <-2,-1,0>, <2,1,2> } } }
#end // ifndef (_2_dash_4disc_dot_dat)


//// Primitive 1-8ndis.dat
#ifndef (_1_dash_8ndis_dot_dat)
#declare _1_dash_8ndis_dot_dat = disc {
	<0,0,0>, <0,1,0>, 2, 1
	clipped_by { plane { x, 1 } plane { -z, 0 } plane { <-1,0,1>, 0 } }
}
#end // ifndef (_1_dash_8ndis_dot_dat)


//// Primitive 1-8cyli.dat
#ifndef (_1_dash_8cyli_dot_dat)
#declare _1_dash_8cyli_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-2-sqrt(2),0,-sqrt(2)>,-sqrt(sqrt(2)+2)/2 } }
}
#end // ifndef (_1_dash_8cyli_dot_dat)


//// Part 529.dat
#ifndef (_529_dot_dat)
#declare _529_dot_dat = #if (L3Quality = 0) box { <-25.6132,-20.6132,-4>, <25.6132,4,4> } #else union {
// Minifig Helmet Samurai Horn
// Name: 529.dat
// Author: Paul Easter [pneaster]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !KEYWORDS Castle, Ninja, samurai, shogun, decoration, crest, gold, chrome
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2003-11-04 [fwcain] added CMDLINE, KEYWORDS; fixed Title...
// !HISTORY 2004-04-22 [PTadmin] Official Update 2004-02
// !HISTORY 2007-07-09 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-12-24 [cwdee] Update category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { _4_dash_4cyli_dot_dat matrix <0,4,0,-16,0,0,0,0,4,8,0,0> }
	object { _4_dash_4disc_dot_dat matrix <0,4,0,-1,0,0,0,0,4,8,0,0> }
	object { _4_dash_4disc_dot_dat matrix <0,4,0,1,0,0,0,0,4,-8,0,0> }
	object { rect_dot_dat matrix <0,4,0,1,0,0,0,0,2.5,8,0,0> }
	object { rect_dot_dat matrix <0,4,0,-1,0,0,0,0,2.5,-8,0,0> }
// 
	object { _2_dash_4disc_dot_dat matrix <0.7654,1.8478,0,0,0,1,1.8478,-0.7654,0,23,-18,-2.5> }
	object { _2_dash_4cyli_dot_dat matrix <0.7654,1.8478,0,0,0,5,1.8478,-0.7654,0,23,-18,-2.5> }
	object { _2_dash_4disc_dot_dat matrix <0.7654,-1.8478,0,0,0,1,-1.8478,-0.7654,0,12,-18,-2.5> }
	object { _2_dash_4cyli_dot_dat matrix <0.7654,-1.8478,0,0,0,5,-1.8478,-0.7654,0,12,-18,-2.5> }
	mesh {
		triangle { <22.2346,-19.8478,2.5>, <22.2346,-19.8478,-2.5>, <17,-18,-2.5> }
		triangle { <17,-18,-2.5>, <17,-18,2.5>, <22.2346,-19.8478,2.5> }
		triangle { <17,-18,-2.5>, <12.7654,-19.8478,-2.5>, <12.7654,-19.8478,2.5> }
		triangle { <12.7654,-19.8478,2.5>, <17,-18,2.5>, <17,-18,-2.5> }
	}
	object { _1_dash_4ndis_dot_dat matrix <0,3,0,0,0,1,3,0,0,8,-7,-2.5> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,3,0,0,0,5,3,0,0,8,-7,-2.5> }
	object { _1_dash_4disc_dot_dat matrix <0,8,0,0,0,1,8,0,0,8,-4,-2.5> }
	object { _1_dash_4cyli_dot_dat matrix <0,8,0,0,0,5,8,0,0,8,-4,-2.5> }
	object { _1_dash_8ndis_dot_dat matrix <4,0,0,0,0,1,0,-4,0,8.4062,-13.3238,-2.5> }
// BFC INVERTNEXT
	object { _1_dash_8cyli_dot_dat matrix <4,0,0,0,0,5,0,-4,0,8.4062,-13.3238,-2.5> }
	object { _1_dash_8ndis_dot_dat matrix <-3.0615,-7.391,0,0,0,1,-7.391,3.0615,0,25,-8,-2.5> }
// BFC INVERTNEXT
	object { _1_dash_8cyli_dot_dat matrix <-3.0615,-7.391,0,0,0,5,-7.391,3.0615,0,25,-8,-2.5> }
	mesh {
		triangle { <16,-4,-2.5>, <17.609,-11.0614,-2.5>, <17.609,-11.0614,2.5> }
		triangle { <17.609,-11.0614,2.5>, <16,-4,2.5>, <16,-4,-2.5> }
		triangle { <12.4062,-13.3238,2.5>, <12.4062,-13.3238,-2.5>, <11,-7,-2.5> }
		triangle { <11,-7,-2.5>, <11,-7,2.5>, <12.4062,-13.3238,2.5> }
		triangle { <21.9385,-15.391,-2.5>, <23.7654,-16.1522,-2.5>, <23.7654,-16.1522,2.5> }
		triangle { <23.7654,-16.1522,2.5>, <21.9385,-15.391,2.5>, <21.9385,-15.391,-2.5> }
		triangle { <22.2346,-19.8478,-2.5>, <23.7654,-16.1522,-2.5>, <21.9385,-15.391,-2.5> }
		triangle { <21.9385,-15.391,-2.5>, <17,-18,-2.5>, <22.2346,-19.8478,-2.5> }
		triangle { <17,-18,-2.5>, <21.9385,-15.391,-2.5>, <14.5475,-12.3295,-2.5> }
		triangle { <14.5475,-12.3295,-2.5>, <12.4062,-13.3238,-2.5>, <17,-18,-2.5> }
		triangle { <12.4062,-13.3238,-2.5>, <14.5475,-12.3295,-2.5>, <11,-4,-2.5> }
		triangle { <11,-4,-2.5>, <11,-7,-2.5>, <12.4062,-13.3238,-2.5> }
		triangle { <14.5475,-12.3295,-2.5>, <17.609,-11.0614,-2.5>, <16,-4,-2.5> }
		triangle { <16,-4,-2.5>, <11,-4,-2.5>, <14.5475,-12.3295,-2.5> }
		triangle { <12.4062,-17.3238,-2.5>, <17,-18,-2.5>, <12.4062,-13.3238,-2.5> }
		triangle { <12.7654,-19.8478,-2.5>, <12.4062,-17.3238,-2.5>, <11.2346,-16.1522,-2.5> }
		triangle { <12.4062,-17.3238,-2.5>, <12.7654,-19.8478,-2.5>, <17,-18,-2.5> }
// 
	}
	object { _2_dash_4disc_dot_dat matrix <0.7654,1.8478,0,0,0,-1,1.8478,-0.7654,0,23,-18,2.5> }
	object { _2_dash_4disc_dot_dat matrix <0.7654,-1.8478,0,0,0,-1,-1.8478,-0.7654,0,12,-18,2.5> }
	object { _1_dash_4ndis_dot_dat matrix <0,3,0,0,0,-1,3,0,0,8,-7,2.5> }
	object { _1_dash_4disc_dot_dat matrix <0,8,0,0,0,-1,8,0,0,8,-4,2.5> }
	object { _1_dash_8ndis_dot_dat matrix <4,0,0,0,0,-1,0,-4,0,8.4062,-13.3238,2.5> }
	object { _1_dash_8ndis_dot_dat matrix <-3.0615,-7.391,0,0,0,-1,-7.391,3.0615,0,25,-8,2.5> }
	mesh {
		triangle { <23.7654,-16.1522,0>, <23.7654,-16.1522,2.5>, <21.9385,-15.391,2.5> }
		triangle { <21.9385,-15.391,2.5>, <21.9385,-15.391,0>, <23.7654,-16.1522,0> }
		triangle { <21.9385,-15.391,2.5>, <23.7654,-16.1522,2.5>, <22.2346,-19.8478,2.5> }
		triangle { <22.2346,-19.8478,2.5>, <17,-18,2.5>, <21.9385,-15.391,2.5> }
		triangle { <14.5475,-12.3295,2.5>, <21.9385,-15.391,2.5>, <17,-18,2.5> }
		triangle { <17,-18,2.5>, <12.4062,-13.3238,2.5>, <14.5475,-12.3295,2.5> }
		triangle { <14.5475,-12.3295,2.5>, <12.4062,-13.3238,2.5>, <11,-7,2.5> }
		triangle { <11,-7,2.5>, <11,-4,2.5>, <14.5475,-12.3295,2.5> }
		triangle { <16,-4,2.5>, <17.609,-11.0614,2.5>, <14.5475,-12.3295,2.5> }
		triangle { <14.5475,-12.3295,2.5>, <11,-4,2.5>, <16,-4,2.5> }
		triangle { <12.4062,-13.3238,2.5>, <17,-18,2.5>, <12.4062,-17.3238,2.5> }
		triangle { <11.2346,-16.1522,2.5>, <12.4062,-17.3238,2.5>, <12.7654,-19.8478,2.5> }
		triangle { <17,-18,2.5>, <12.7654,-19.8478,2.5>, <12.4062,-17.3238,2.5> }
// 
	}
	object { _2_dash_4disc_dot_dat matrix <-0.7654,1.8478,0,0,0,1,-1.8478,-0.7654,0,-23,-18,-2.5> }
	object { _2_dash_4cyli_dot_dat matrix <-0.7654,1.8478,0,0,0,5,-1.8478,-0.7654,0,-23,-18,-2.5> }
	object { _2_dash_4disc_dot_dat matrix <-0.7654,-1.8478,0,0,0,1,1.8478,-0.7654,0,-12,-18,-2.5> }
	object { _2_dash_4cyli_dot_dat matrix <-0.7654,-1.8478,0,0,0,5,1.8478,-0.7654,0,-12,-18,-2.5> }
	mesh {
		triangle { <-17,-18,-2.5>, <-22.2346,-19.8478,-2.5>, <-22.2346,-19.8478,2.5> }
		triangle { <-22.2346,-19.8478,2.5>, <-17,-18,2.5>, <-17,-18,-2.5> }
		triangle { <-12.7654,-19.8478,2.5>, <-12.7654,-19.8478,-2.5>, <-17,-18,-2.5> }
		triangle { <-17,-18,-2.5>, <-17,-18,2.5>, <-12.7654,-19.8478,2.5> }
	}
	object { _1_dash_4ndis_dot_dat matrix <0,3,0,0,0,1,-3,0,0,-8,-7,-2.5> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,3,0,0,0,5,-3,0,0,-8,-7,-2.5> }
	object { _1_dash_4disc_dot_dat matrix <0,8,0,0,0,1,-8,0,0,-8,-4,-2.5> }
	object { _1_dash_4cyli_dot_dat matrix <0,8,0,0,0,5,-8,0,0,-8,-4,-2.5> }
	object { _1_dash_8ndis_dot_dat matrix <-4,0,0,0,0,1,0,-4,0,-8.4062,-13.3238,-2.5> }
// BFC INVERTNEXT
	object { _1_dash_8cyli_dot_dat matrix <-4,0,0,0,0,5,0,-4,0,-8.4062,-13.3238,-2.5> }
	object { _1_dash_8ndis_dot_dat matrix <3.0615,-7.391,0,0,0,1,7.391,3.0615,0,-25,-8,-2.5> }
// BFC INVERTNEXT
	object { _1_dash_8cyli_dot_dat matrix <3.0615,-7.391,0,0,0,5,7.391,3.0615,0,-25,-8,-2.5> }
	mesh {
		triangle { <-17.609,-11.0614,2.5>, <-17.609,-11.0614,-2.5>, <-16,-4,-2.5> }
		triangle { <-16,-4,-2.5>, <-16,-4,2.5>, <-17.609,-11.0614,2.5> }
		triangle { <-11,-7,-2.5>, <-12.4062,-13.3238,-2.5>, <-12.4062,-13.3238,2.5> }
		triangle { <-12.4062,-13.3238,2.5>, <-11,-7,2.5>, <-11,-7,-2.5> }
		triangle { <-23.7654,-16.1522,2.5>, <-23.7654,-16.1522,-2.5>, <-21.9385,-15.391,-2.5> }
		triangle { <-21.9385,-15.391,-2.5>, <-21.9385,-15.391,2.5>, <-23.7654,-16.1522,2.5> }
		triangle { <-21.9385,-15.391,-2.5>, <-23.7654,-16.1522,-2.5>, <-22.2346,-19.8478,-2.5> }
		triangle { <-22.2346,-19.8478,-2.5>, <-17,-18,-2.5>, <-21.9385,-15.391,-2.5> }
		triangle { <-14.5475,-12.3295,-2.5>, <-21.9385,-15.391,-2.5>, <-17,-18,-2.5> }
		triangle { <-17,-18,-2.5>, <-12.4062,-13.3238,-2.5>, <-14.5475,-12.3295,-2.5> }
		triangle { <-14.5475,-12.3295,-2.5>, <-12.4062,-13.3238,-2.5>, <-11,-7,-2.5> }
		triangle { <-11,-7,-2.5>, <-11,-4,-2.5>, <-14.5475,-12.3295,-2.5> }
		triangle { <-16,-4,-2.5>, <-17.609,-11.0614,-2.5>, <-14.5475,-12.3295,-2.5> }
		triangle { <-14.5475,-12.3295,-2.5>, <-11,-4,-2.5>, <-16,-4,-2.5> }
		triangle { <-12.4062,-13.3238,-2.5>, <-17,-18,-2.5>, <-12.4062,-17.3238,-2.5> }
		triangle { <-11.2346,-16.1522,-2.5>, <-12.4062,-17.3238,-2.5>, <-12.7654,-19.8478,-2.5> }
		triangle { <-17,-18,-2.5>, <-12.7654,-19.8478,-2.5>, <-12.4062,-17.3238,-2.5> }
// 
	}
	object { _2_dash_4disc_dot_dat matrix <-0.7654,1.8478,0,0,0,-1,-1.8478,-0.7654,0,-23,-18,2.5> }
	object { _2_dash_4disc_dot_dat matrix <-0.7654,-1.8478,0,0,0,-1,1.8478,-0.7654,0,-12,-18,2.5> }
	object { _1_dash_4ndis_dot_dat matrix <0,3,0,0,0,-1,-3,0,0,-8,-7,2.5> }
	object { _1_dash_4disc_dot_dat matrix <0,8,0,0,0,-1,-8,0,0,-8,-4,2.5> }
	object { _1_dash_8ndis_dot_dat matrix <-4,0,0,0,0,-1,0,-4,0,-8.4062,-13.3238,2.5> }
	object { _1_dash_8ndis_dot_dat matrix <3.0615,-7.391,0,0,0,-1,7.391,3.0615,0,-25,-8,2.5> }
	mesh {
		triangle { <-22.2346,-19.8478,2.5>, <-23.7654,-16.1522,2.5>, <-21.9385,-15.391,2.5> }
		triangle { <-21.9385,-15.391,2.5>, <-17,-18,2.5>, <-22.2346,-19.8478,2.5> }
		triangle { <-17,-18,2.5>, <-21.9385,-15.391,2.5>, <-14.5475,-12.3295,2.5> }
		triangle { <-14.5475,-12.3295,2.5>, <-12.4062,-13.3238,2.5>, <-17,-18,2.5> }
		triangle { <-12.4062,-13.3238,2.5>, <-14.5475,-12.3295,2.5>, <-11,-4,2.5> }
		triangle { <-11,-4,2.5>, <-11,-7,2.5>, <-12.4062,-13.3238,2.5> }
		triangle { <-14.5475,-12.3295,2.5>, <-17.609,-11.0614,2.5>, <-16,-4,2.5> }
		triangle { <-16,-4,2.5>, <-11,-4,2.5>, <-14.5475,-12.3295,2.5> }
		triangle { <-12.4062,-17.3238,2.5>, <-17,-18,2.5>, <-12.4062,-13.3238,2.5> }
		triangle { <-12.7654,-19.8478,2.5>, <-12.4062,-17.3238,2.5>, <-11.2346,-16.1522,2.5> }
		triangle { <-12.4062,-17.3238,2.5>, <-12.7654,-19.8478,2.5>, <-17,-18,2.5> }
// end of file
	}
}
#end
#end // ifndef (_529_dot_dat)


//// Part 30175c01.dat
#ifndef (_30175c01_dot_dat)
#declare _30175c01_dot_dat = #if (L3Quality = 0) box { <-25.6132,-26.6132,-24.7176>, <25.6132,22,22> } #else union {
// Minifig Helmet Samurai with Horn (Complete)
// Name: 30175c01.dat
// Author: Paul Easter [pneaster]
// !LDRAW_ORG Shortcut UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !CATEGORY Minifig Headwear
// !KEYWORDS Castle, Ninja, shogun
// !HISTORY 2003-11-04 [fwcain] added KEYWORDS; fixed Title.
// !HISTORY 2004-04-22 [PTadmin] Official Update 2004-02
// !HISTORY 2007-07-09 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-07-18 [PTadmin] Renamed from 526c01
// !HISTORY 2010-12-31 [PTadmin] Official Update 2010-03
// !HISTORY 2012-12-24 [cwdee] Update category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { _30175_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _529_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,-6,-18> material { L3Color334 } }
}
#end
#end // ifndef (_30175c01_dot_dat)


//// Model helmet_018_samurai.ldr
#ifndef (helmet__018__samurai_dot_ldr)
#declare helmet__018__samurai_dot_ldr = object {
// Untitled
// Name: helmet_018_samurai.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 0  0 2 1  1 0 0  0 1 0  0 0 1 30175c01.dat
	object {
		_30175c01_dot_dat
		matrix <1-L3SW/51.2264,0,0,0,1-L3SW/48.6132,0,0,0,1-L3SW/46.7176,0,L3SW/-21.0757,L3SW/-34.3815>
		matrix <1,0,0,0,1,0,0,0,1,0,2,1>
		material { L3Color0 }
	}
}
#end // ifndef (helmet__018__samurai_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-25.6132,-24.6132,-23.7176>;
#declare L3ModelBBoxMax = <25.6132,24,23>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-0.3066,-0.3588>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <51.2264,48.6132,46.7176>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject helmet_018_samurai.ldr
object { helmet__018__samurai_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        4            30            35
// POV Equivs:       -            25 (83%)
// Model has 2 parts (1 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
