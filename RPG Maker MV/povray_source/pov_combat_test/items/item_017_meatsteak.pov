// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sun Aug 24 11:37:05 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_017_meatsteak.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_017_meatsteak.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_017_meatsteak.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 15 White (from ldconfig.ldr)
#ifndef (L3Texture15)
#declare L3Texture15 = L3TextureOpaqueRGB(255,255,255)
#end
#ifndef (L3Texture15_slope)
#declare L3Texture15_slope = L3TextureSlope(L3Texture15)
#end
#ifndef (L3Color15)
#declare L3Color15 = L3Material(L3Texture15)
#end
#ifndef (L3Color15_slope)
#declare L3Color15_slope = L3Material(L3Texture15_slope)
#end


//// Color 4 Red (from ldconfig.ldr)
#ifndef (L3Texture4)
#declare L3Texture4 = L3TextureOpaqueRGB(201,26,9)
#end
#ifndef (L3Texture4_slope)
#declare L3Texture4_slope = L3TextureSlope(L3Texture4)
#end
#ifndef (L3Color4)
#declare L3Color4 = L3Material(L3Texture4)
#end
#ifndef (L3Color4_slope)
#declare L3Color4_slope = L3Material(L3Texture4_slope)
#end


//// Part s\98372s01.dat
#ifndef (s_slash_98372s01_dot_dat)
#declare s_slash_98372s01_dot_dat = #if (L3Quality = 0) box { <0,-61.043,-14.614>, <4.004,-23.369,14.614> } #else object {
// ~Minifig Steak on Bone Half
// Name: s\98372s01.dat
// Author: Stan Isachenko [angmarec]
// !LDRAW_ORG Subpart UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	mesh {
		triangle { <1.531,-23.369,3.696>, <0,-23.369,4>, <0,-26.177,4.08> }
		triangle { <2.94,-26.227,2.955>, <1.531,-23.369,3.696>, <0,-26.177,4.08> }
		triangle { <2.828,-23.369,2.828>, <1.531,-23.369,3.696>, <2.94,-26.227,2.955> }
		triangle { <3.696,-23.369,1.531>, <2.828,-23.369,2.828>, <2.94,-26.227,2.955> }
		triangle { <4.001,-25.983,-0.013>, <3.696,-23.369,1.531>, <2.94,-26.227,2.955> }
		triangle { <4,-23.369,0>, <3.696,-23.369,1.531>, <4.001,-25.983,-0.013> }
		triangle { <3.696,-23.369,-1.531>, <4,-23.369,0>, <4.001,-25.983,-0.013> }
		triangle { <3.161,-26.322,-2.838>, <3.696,-23.369,-1.531>, <4.001,-25.983,-0.013> }
		triangle { <2.828,-23.369,-2.828>, <3.696,-23.369,-1.531>, <3.161,-26.322,-2.838> }
		triangle { <1.531,-23.369,-3.696>, <2.828,-23.369,-2.828>, <3.161,-26.322,-2.838> }
		triangle { <0,-26.328,-4.162>, <1.531,-23.369,-3.696>, <3.161,-26.322,-2.838> }
		triangle { <0,-23.369,-4>, <1.531,-23.369,-3.696>, <0,-26.328,-4.162> }
		triangle { <3.783,-29.061,-5.039>, <0,-29.196,-5.802>, <0,-26.328,-4.162> }
		triangle { <3.161,-26.322,-2.838>, <3.897,-27.222,-2.425>, <3.783,-29.061,-5.039> }
		triangle { <3.161,-26.322,-2.838>, <3.783,-29.061,-5.039>, <0,-26.328,-4.162> }
		triangle { <3.839,-31.911,-8.041>, <0,-32.187,-8.8>, <0,-29.196,-5.802> }
		triangle { <3.783,-29.061,-5.039>, <3.839,-31.911,-8.041>, <0,-29.196,-5.802> }
		triangle { <3.822,-35.013,-10.45>, <0,-35.445,-11.104>, <0,-32.187,-8.8> }
		triangle { <3.839,-31.911,-8.041>, <3.822,-35.013,-10.45>, <0,-32.187,-8.8> }
		triangle { <0,-35.445,-11.104>, <3.822,-35.013,-10.45>, <3.823,-38.847,-12.245> }
		triangle { <0,-35.445,-11.104>, <3.823,-38.847,-12.245>, <0,-39.109,-12.737> }
		triangle { <0,-39.109,-12.737>, <3.823,-38.847,-12.245>, <3.827,-43.09,-13.56> }
		triangle { <0,-39.109,-12.737>, <3.827,-43.09,-13.56>, <0,-43.179,-13.948> }
		triangle { <0,-43.179,-13.948>, <3.827,-43.09,-13.56>, <3.819,-47.422,-14.229> }
		triangle { <3.819,-47.422,-14.229>, <0,-47.473,-14.598>, <0,-43.179,-13.948> }
		triangle { <3.828,-51.902,-14.249>, <0,-51.965,-14.614>, <0,-47.473,-14.598> }
		triangle { <0,-47.473,-14.598>, <3.819,-47.422,-14.229>, <3.828,-51.902,-14.249> }
		triangle { <0,-51.965,-14.614>, <3.828,-51.902,-14.249>, <3.85,-56.179,-12.836> }
		triangle { <0,-51.965,-14.614>, <3.85,-56.179,-12.836>, <0,-56.116,-13.326> }
		triangle { <3.839,-59.007,-9.512>, <0,-59.181,-10.015>, <0,-56.116,-13.326> }
		triangle { <0,-56.116,-13.326>, <3.85,-56.179,-12.836>, <3.839,-59.007,-9.512> }
		triangle { <3.804,-60.263,-5.324>, <0,-60.609,-5.44>, <0,-59.181,-10.015> }
		triangle { <0,-59.181,-10.015>, <3.839,-59.007,-9.512>, <3.804,-60.263,-5.324> }
		triangle { <3.84,-60.644,2.166>, <0,-61.043,2.054>, <0,-60.609,-5.44> }
		triangle { <0,-60.609,-5.44>, <3.804,-60.263,-5.324>, <3.84,-60.644,2.166> }
		triangle { <3.813,-59.566,7.3>, <0,-59.949,7.284>, <0,-61.043,2.054> }
		triangle { <0,-61.043,2.054>, <3.84,-60.644,2.166>, <3.813,-59.566,7.3> }
		triangle { <3.823,-57.696,10.917>, <0,-58.045,11.042>, <0,-59.949,7.284> }
		triangle { <0,-59.949,7.284>, <3.813,-59.566,7.3>, <3.823,-57.696,10.917> }
		triangle { <3.79,-54.513,13.386>, <0,-54.626,13.711>, <0,-58.045,11.042> }
		triangle { <0,-58.045,11.042>, <3.823,-57.696,10.917>, <3.79,-54.513,13.386> }
		triangle { <3.843,-50.722,14.217>, <0,-50.729,14.614>, <0,-54.626,13.711> }
		triangle { <0,-54.626,13.711>, <3.79,-54.513,13.386>, <3.843,-50.722,14.217> }
		triangle { <3.808,-47.023,13.906>, <0,-47.024,14.28>, <0,-50.729,14.614> }
		triangle { <0,-50.729,14.614>, <3.843,-50.722,14.217>, <3.808,-47.023,13.906> }
		triangle { <0,-47.024,14.28>, <3.808,-47.023,13.906>, <3.841,-43.333,12.1> }
		triangle { <0,-47.024,14.28>, <3.841,-43.333,12.1>, <0,-43.261,12.517> }
		triangle { <0,-43.261,12.517>, <3.841,-43.333,12.1>, <3.791,-39.833,8.751> }
		triangle { <3.791,-39.833,8.751>, <0,-39.793,9.203>, <0,-43.261,12.517> }
		triangle { <3.79,-37.003,6.156>, <0,-36.924,6.534>, <0,-39.793,9.203> }
		triangle { <0,-39.793,9.203>, <3.791,-39.833,8.751>, <3.79,-37.003,6.156> }
		triangle { <0,-33.68,5.656>, <3.805,-33.728,5.316>, <3.838,-30.392,5.235> }
		triangle { <0,-33.68,5.656>, <3.838,-30.392,5.235>, <0,-30.501,5.634> }
		triangle { <3.814,-27.142,2.849>, <0,-26.177,4.08>, <0,-30.501,5.634> }
		triangle { <3.814,-27.142,2.849>, <0,-30.501,5.634>, <3.838,-30.392,5.235> }
		triangle { <0,-26.177,4.08>, <3.814,-27.142,2.849>, <2.94,-26.227,2.955> }
		triangle { <4.002,-26.869,-0.013>, <3.814,-27.142,2.849>, <4,-29.541,1.943> }
		triangle { <4.002,-26.869,-0.013>, <4,-29.541,1.943>, <4,-29.228,-0.07> }
		triangle { <4,-31.246,-4.297>, <3.783,-29.061,-5.039>, <3.897,-27.222,-2.425> }
		triangle { <4,-31.246,-4.297>, <3.897,-27.222,-2.425>, <4,-29.857,-2.233> }
		triangle { <4,-33.562,-6.709>, <3.839,-31.911,-8.041>, <3.783,-29.061,-5.039> }
		triangle { <4,-33.562,-6.709>, <3.783,-29.061,-5.039>, <4,-31.246,-4.297> }
		triangle { <3.839,-31.911,-8.041>, <4,-33.562,-6.709>, <4,-36.75,-8.998> }
		triangle { <4,-36.75,-8.998>, <3.822,-35.013,-10.45>, <3.839,-31.911,-8.041> }
		triangle { <4.001,-40.143,-10.446>, <3.823,-38.847,-12.245>, <3.822,-35.013,-10.45> }
		triangle { <3.822,-35.013,-10.45>, <4,-36.75,-8.998>, <4.001,-40.143,-10.446> }
		triangle { <4,-43.054,-11.368>, <3.827,-43.09,-13.56>, <3.823,-38.847,-12.245> }
		triangle { <3.823,-38.847,-12.245>, <4.001,-40.143,-10.446>, <4,-43.054,-11.368> }
		triangle { <4.004,-46.833,-12.003>, <3.819,-47.422,-14.229>, <3.827,-43.09,-13.56> }
		triangle { <3.827,-43.09,-13.56>, <4,-43.054,-11.368>, <4.004,-46.833,-12.003> }
		triangle { <4,-50.431,-12.206>, <3.828,-51.902,-14.249>, <3.819,-47.422,-14.229> }
		triangle { <3.819,-47.422,-14.229>, <4.004,-46.833,-12.003>, <4,-50.431,-12.206> }
		triangle { <3.828,-51.902,-14.249>, <4,-50.431,-12.206>, <4,-54.812,-11.213> }
		triangle { <4,-54.812,-11.213>, <3.85,-56.179,-12.836>, <3.828,-51.902,-14.249> }
		triangle { <4,-57.129,-8.529>, <3.839,-59.007,-9.512>, <3.85,-56.179,-12.836> }
		triangle { <3.85,-56.179,-12.836>, <4,-54.812,-11.213>, <4,-57.129,-8.529> }
		triangle { <4,-58.217,-4.607>, <3.804,-60.263,-5.324>, <3.839,-59.007,-9.512> }
		triangle { <3.839,-59.007,-9.512>, <4,-57.129,-8.529>, <4,-58.217,-4.607> }
		triangle { <4,-47.027,11.68>, <3.808,-47.023,13.906>, <3.843,-50.722,14.217> }
		triangle { <3.843,-50.722,14.217>, <4,-49.674,12.157>, <4,-47.027,11.68> }
		triangle { <4,-43.682,9.657>, <3.841,-43.333,12.1>, <3.808,-47.023,13.906> }
		triangle { <4,-43.682,9.657>, <3.808,-47.023,13.906>, <4,-47.027,11.68> }
		triangle { <4,-40.943,6.763>, <3.791,-39.833,8.751>, <3.841,-43.333,12.1> }
		triangle { <3.841,-43.333,12.1>, <4,-43.682,9.657>, <4,-40.943,6.763> }
		triangle { <3.791,-39.833,8.751>, <4,-40.943,6.763>, <4.002,-37.526,4.001> }
		triangle { <3.79,-37.003,6.156>, <3.791,-39.833,8.751>, <4.002,-37.526,4.001> }
		triangle { <4,-29.228,-0.07>, <4,-29.857,-2.233>, <3.897,-27.222,-2.425> }
		triangle { <4.002,-26.869,-0.013>, <4,-29.228,-0.07>, <3.897,-27.222,-2.425> }
		triangle { <4,-29.541,1.943>, <3.814,-27.142,2.849>, <3.838,-30.392,5.235> }
		triangle { <4,-31.546,3.252>, <4,-29.541,1.943>, <3.838,-30.392,5.235> }
		triangle { <4,-49.674,12.157>, <3.843,-50.722,14.217>, <3.79,-54.513,13.386> }
		triangle { <4,-49.674,12.157>, <3.79,-54.513,13.386>, <4,-52.847,11.716> }
		triangle { <4,-52.847,11.716>, <3.79,-54.513,13.386>, <3.823,-57.696,10.917> }
		triangle { <3.823,-57.696,10.917>, <4,-56.007,9.589>, <4,-52.847,11.716> }
		triangle { <4,-56.007,9.589>, <3.823,-57.696,10.917>, <3.813,-59.566,7.3> }
		triangle { <3.813,-59.566,7.3>, <4,-57.592,6.439>, <4,-56.007,9.589> }
		triangle { <4,-57.592,6.439>, <3.813,-59.566,7.3>, <3.84,-60.644,2.166> }
		triangle { <3.84,-60.644,2.166>, <4,-58.516,2.055>, <4,-57.592,6.439> }
		triangle { <4,-58.516,2.055>, <3.84,-60.644,2.166>, <3.804,-60.263,-5.324> }
		triangle { <4,-58.516,2.055>, <3.804,-60.263,-5.324>, <4,-58.217,-4.607> }
		triangle { <3.75,-29.368,0.067>, <4,-29.228,-0.07>, <4,-29.541,1.943> }
		triangle { <3.751,-29.689,1.922>, <3.75,-29.368,0.067>, <4,-29.541,1.943> }
		triangle { <4,-29.857,-2.233>, <3.75,-29.952,-2.109>, <3.75,-31.359,-4.226> }
		triangle { <4,-29.857,-2.233>, <3.75,-31.359,-4.226>, <4,-31.246,-4.297> }
		triangle { <3.75,-33.681,-6.614>, <4,-33.562,-6.709>, <4,-31.246,-4.297> }
		triangle { <4,-31.246,-4.297>, <3.75,-31.359,-4.226>, <3.75,-33.681,-6.614> }
		triangle { <3.75,-36.739,-8.821>, <4,-36.75,-8.998>, <4,-33.562,-6.709> }
		triangle { <3.75,-33.681,-6.614>, <3.75,-36.739,-8.821>, <4,-33.562,-6.709> }
		triangle { <4,-36.75,-8.998>, <3.75,-36.739,-8.821>, <3.751,-40.206,-10.331> }
		triangle { <4,-36.75,-8.998>, <3.751,-40.206,-10.331>, <4.001,-40.143,-10.446> }
		triangle { <3.75,-43.002,-11.2>, <4,-43.054,-11.368>, <4.001,-40.143,-10.446> }
		triangle { <3.751,-40.206,-10.331>, <3.75,-43.002,-11.2>, <4.001,-40.143,-10.446> }
		triangle { <4,-43.054,-11.368>, <3.75,-43.002,-11.2>, <3.751,-46.785,-11.873> }
		triangle { <4,-43.054,-11.368>, <3.751,-46.785,-11.873>, <4.004,-46.833,-12.003> }
		triangle { <3.751,-50.323,-12.06>, <4,-50.431,-12.206>, <4.004,-46.833,-12.003> }
		triangle { <3.751,-46.785,-11.873>, <3.751,-50.323,-12.06>, <4.004,-46.833,-12.003> }
		triangle { <3.752,-54.631,-11.135>, <4,-54.812,-11.213>, <4,-50.431,-12.206> }
		triangle { <3.751,-50.323,-12.06>, <3.752,-54.631,-11.135>, <4,-50.431,-12.206> }
		triangle { <4,-54.812,-11.213>, <3.752,-54.631,-11.135>, <3.752,-57.028,-8.387> }
		triangle { <4,-54.812,-11.213>, <3.752,-57.028,-8.387>, <4,-57.129,-8.529> }
		triangle { <3.751,-58.076,-4.531>, <4,-58.217,-4.607>, <4,-57.129,-8.529> }
		triangle { <4,-57.129,-8.529>, <3.752,-57.028,-8.387>, <3.751,-58.076,-4.531> }
		triangle { <3.751,-47.027,11.515>, <4,-47.027,11.68>, <4,-49.674,12.157> }
		triangle { <3.751,-47.027,11.515>, <4,-49.674,12.157>, <3.75,-49.658,12.006> }
		triangle { <3.75,-43.733,9.533>, <4,-43.682,9.657>, <4,-47.027,11.68> }
		triangle { <4,-47.027,11.68>, <3.751,-47.027,11.515>, <3.75,-43.733,9.533> }
		triangle { <3.75,-41.039,6.63>, <4,-40.943,6.763>, <4,-43.682,9.657> }
		triangle { <4,-43.682,9.657>, <3.75,-43.733,9.533>, <3.75,-41.039,6.63> }
		triangle { <4,-40.943,6.763>, <3.75,-41.039,6.63>, <3.75,-37.584,3.859> }
		triangle { <4,-40.943,6.763>, <3.75,-37.584,3.859>, <4.002,-37.526,4.001> }
		triangle { <4,-34.514,3.193>, <3.749,-34.562,3.039>, <3.75,-31.559,3.098> }
		triangle { <3.75,-31.559,3.098>, <4,-31.546,3.252>, <4,-34.514,3.193> }
		triangle { <3.75,-29.952,-2.109>, <4,-29.857,-2.233>, <4,-29.228,-0.07> }
		triangle { <3.75,-29.368,0.067>, <3.75,-29.952,-2.109>, <4,-29.228,-0.07> }
		triangle { <3.751,-29.689,1.922>, <4,-29.541,1.943>, <4,-31.546,3.252> }
		triangle { <3.75,-31.559,3.098>, <3.751,-29.689,1.922>, <4,-31.546,3.252> }
		triangle { <3.75,-49.658,12.006>, <4,-49.674,12.157>, <4,-52.847,11.716> }
		triangle { <4,-52.847,11.716>, <3.751,-52.803,11.564>, <3.75,-49.658,12.006> }
		triangle { <3.751,-52.803,11.564>, <4,-52.847,11.716>, <4,-56.007,9.589> }
		triangle { <4,-56.007,9.589>, <3.75,-55.873,9.516>, <3.751,-52.803,11.564> }
		triangle { <4,-57.592,6.439>, <3.752,-57.486,6.332>, <3.75,-55.873,9.516> }
		triangle { <4,-57.592,6.439>, <3.75,-55.873,9.516>, <4,-56.007,9.589> }
		triangle { <3.752,-57.486,6.332>, <4,-57.592,6.439>, <4,-58.516,2.055> }
		triangle { <3.751,-58.387,2.021>, <3.752,-57.486,6.332>, <4,-58.516,2.055> }
		triangle { <3.751,-58.387,2.021>, <4,-58.516,2.055>, <4,-58.217,-4.607> }
		triangle { <4,-58.217,-4.607>, <3.751,-58.076,-4.531>, <3.751,-58.387,2.021> }
		triangle { <4.002,-37.526,4.001>, <3.75,-37.584,3.859>, <3.749,-34.562,3.039> }
		triangle { <3.749,-34.562,3.039>, <4,-34.514,3.193>, <4.002,-37.526,4.001> }
		triangle { <4,-34.514,3.193>, <3.805,-33.728,5.316>, <3.79,-37.003,6.156> }
		triangle { <3.79,-37.003,6.156>, <4.002,-37.526,4.001>, <4,-34.514,3.193> }
		triangle { <3.805,-33.728,5.316>, <0,-33.68,5.656>, <0,-36.924,6.534> }
		triangle { <3.79,-37.003,6.156>, <3.805,-33.728,5.316>, <0,-36.924,6.534> }
		triangle { <3.161,-26.322,-2.838>, <4.001,-25.983,-0.013>, <4.002,-26.869,-0.013> }
		triangle { <4.002,-26.869,-0.013>, <3.897,-27.222,-2.425>, <3.161,-26.322,-2.838> }
		triangle { <4,-31.546,3.252>, <3.838,-30.392,5.235>, <3.805,-33.728,5.316> }
		triangle { <3.805,-33.728,5.316>, <4,-34.514,3.193>, <4,-31.546,3.252> }
		triangle { <4,-53.82,-6.263>, <3.752,-53.946,-6.399>, <3.75,-52.566,-8.071> }
		triangle { <3.75,-52.566,-8.071>, <4,-52.573,-7.914>, <4,-53.82,-6.263> }
		triangle { <4,-54.503,-3.408>, <3.751,-54.668,-3.46>, <3.752,-53.946,-6.399> }
		triangle { <3.752,-53.946,-6.399>, <4,-53.82,-6.263>, <4,-54.503,-3.408> }
		triangle { <4,-51.28,8.099>, <3.75,-51.278,8.209>, <3.75,-53.074,7.456> }
		triangle { <3.75,-53.074,7.456>, <4,-52.891,7.41>, <4,-51.28,8.099> }
		triangle { <3.75,-54.355,4.898>, <4,-54.204,4.842>, <4,-52.891,7.41> }
		triangle { <3.75,-54.355,4.898>, <4,-52.891,7.41>, <3.75,-53.074,7.456> }
		triangle { <4,-54.204,4.842>, <3.75,-54.355,4.898>, <3.751,-54.88,1.534> }
		triangle { <3.751,-54.88,1.534>, <4,-54.705,1.56>, <4,-54.204,4.842> }
		triangle { <4,-54.705,1.56>, <3.751,-54.88,1.534>, <3.751,-54.668,-3.46> }
		triangle { <3.751,-54.668,-3.46>, <4,-54.503,-3.408>, <4,-54.705,1.56> }
		triangle { <3.75,-40.9,0.503>, <4,-40.898,0.371>, <4.001,-38.057,0.198> }
		triangle { <4.001,-38.057,0.198>, <3.75,-38.076,0.327>, <3.75,-40.9,0.503> }
		triangle { <4,-33.993,-0.341>, <3.75,-33.843,-0.338>, <3.75,-35.161,0.225> }
		triangle { <3.75,-35.161,0.225>, <4,-35.179,0.077>, <4,-33.993,-0.341> }
		triangle { <4,-35.086,-1.053>, <3.75,-35.017,-1.169>, <3.75,-33.843,-0.338> }
		triangle { <4,-35.086,-1.053>, <3.75,-33.843,-0.338>, <4,-33.993,-0.341> }
		triangle { <4,-38.097,-1.424>, <3.75,-38.114,-1.588>, <3.75,-35.017,-1.169> }
		triangle { <3.75,-35.017,-1.169>, <4,-35.086,-1.053>, <4,-38.097,-1.424> }
		triangle { <4,-41.16,-1.624>, <3.75,-41.202,-1.775>, <3.75,-38.114,-1.588> }
		triangle { <4,-38.097,-1.424>, <4,-41.16,-1.624>, <3.75,-38.114,-1.588> }
		triangle { <3.75,-43.511,0.838>, <4,-43.508,0.682>, <4,-40.898,0.371> }
		triangle { <3.75,-43.511,0.838>, <4,-40.898,0.371>, <3.75,-40.9,0.503> }
		triangle { <3.75,-41.202,-1.775>, <4,-41.16,-1.624>, <4,-43.804,-1.8> }
		triangle { <4,-43.804,-1.8>, <3.75,-43.823,-1.947>, <3.75,-41.202,-1.775> }
		triangle { <3.75,-46.258,1.383>, <4,-46.272,1.226>, <4,-43.508,0.682> }
		triangle { <4,-43.508,0.682>, <3.75,-43.511,0.838>, <3.75,-46.258,1.383> }
		triangle { <3.75,-43.823,-1.947>, <4,-43.804,-1.8>, <4,-46.564,-1.982> }
		triangle { <4,-46.564,-1.982>, <3.75,-46.564,-2.13>, <3.75,-43.823,-1.947> }
		triangle { <3.75,-49.076,2.484>, <4,-49.151,2.325>, <4,-46.272,1.226> }
		triangle { <3.75,-49.076,2.484>, <4,-46.272,1.226>, <3.75,-46.258,1.383> }
		triangle { <4,-48.955,-2.088>, <3.75,-48.955,-2.239>, <3.75,-46.564,-2.13> }
		triangle { <3.75,-46.564,-2.13>, <4,-46.564,-1.982>, <4,-48.955,-2.088> }
		triangle { <3.75,-48.955,-2.239>, <4,-48.955,-2.088>, <4,-51.306,-2.326> }
		triangle { <3.75,-48.955,-2.239>, <4,-51.306,-2.326>, <3.75,-51.246,-2.478> }
		triangle { <3.75,-49.855,3.561>, <4,-50.009,3.498>, <4,-49.151,2.325> }
		triangle { <3.75,-49.855,3.561>, <4,-49.151,2.325>, <3.75,-49.076,2.484> }
		triangle { <3.75,-51.246,-2.478>, <4,-51.306,-2.326>, <4,-52.129,-3.167> }
		triangle { <3.75,-51.246,-2.478>, <4,-52.129,-3.167>, <3.75,-51.993,-3.22> }
		triangle { <4,-52.573,-7.914>, <3.75,-52.566,-8.071>, <3.75,-52.013,-7.829> }
		triangle { <4,-52.103,-7.763>, <4,-52.573,-7.914>, <3.75,-52.013,-7.829> }
		triangle { <4,-52.103,-7.763>, <3.75,-52.013,-7.829>, <3.75,-52.107,-5.648> }
		triangle { <4,-52.248,-5.682>, <4,-52.103,-7.763>, <3.75,-52.107,-5.648> }
		triangle { <4,-50.251,5.74>, <3.751,-50.111,5.789>, <3.75,-51.278,8.209> }
		triangle { <3.75,-51.278,8.209>, <4,-51.28,8.099>, <4,-50.251,5.74> }
		triangle { <3.75,-51.993,-3.22>, <4,-52.129,-3.167>, <4,-52.248,-5.682> }
		triangle { <4,-52.248,-5.682>, <3.75,-52.107,-5.648>, <3.75,-51.993,-3.22> }
		triangle { <3.751,-50.111,5.789>, <4,-50.251,5.74>, <4,-50.009,3.498> }
		triangle { <3.751,-50.111,5.789>, <4,-50.009,3.498>, <3.75,-49.855,3.561> }
		triangle { <4,-35.179,0.077>, <3.75,-35.161,0.225>, <3.75,-38.076,0.327> }
		triangle { <4.001,-38.057,0.198>, <4,-35.179,0.077>, <3.75,-38.076,0.327> }
		triangle { <4,-46.564,-1.982>, <4,-46.272,1.226>, <4,-49.151,2.325> }
		triangle { <4,-49.151,2.325>, <4,-48.955,-2.088>, <4,-46.564,-1.982> }
		triangle { <4,-35.086,-1.053>, <4,-33.993,-0.341>, <4,-35.179,0.077> }
		triangle { <4,-35.179,0.077>, <4.001,-38.057,0.198>, <4,-35.086,-1.053> }
		triangle { <4,-38.097,-1.424>, <4,-35.086,-1.053>, <4.001,-38.057,0.198> }
		triangle { <4.001,-38.057,0.198>, <4,-40.898,0.371>, <4,-38.097,-1.424> }
		triangle { <4,-41.16,-1.624>, <4,-38.097,-1.424>, <4,-40.898,0.371> }
		triangle { <4,-40.898,0.371>, <4,-43.508,0.682>, <4,-41.16,-1.624> }
		triangle { <4,-43.804,-1.8>, <4,-41.16,-1.624>, <4,-43.508,0.682> }
		triangle { <4,-43.508,0.682>, <4,-46.272,1.226>, <4,-43.804,-1.8> }
		triangle { <4,-46.564,-1.982>, <4,-43.804,-1.8>, <4,-46.272,1.226> }
		triangle { <4,-52.573,-7.914>, <4,-52.103,-7.763>, <4,-52.248,-5.682> }
		triangle { <4,-52.248,-5.682>, <4,-53.82,-6.263>, <4,-52.573,-7.914> }
		triangle { <4,-52.129,-3.167>, <4,-54.503,-3.408>, <4,-53.82,-6.263> }
		triangle { <4,-53.82,-6.263>, <4,-52.248,-5.682>, <4,-52.129,-3.167> }
		triangle { <4,-51.306,-2.326>, <4,-48.955,-2.088>, <4,-50.009,3.498> }
		triangle { <4,-50.009,3.498>, <4,-54.705,1.56>, <4,-51.306,-2.326> }
		triangle { <4,-51.306,-2.326>, <4,-54.705,1.56>, <4,-54.503,-3.408> }
		triangle { <4,-54.503,-3.408>, <4,-52.129,-3.167>, <4,-51.306,-2.326> }
		triangle { <4,-50.251,5.74>, <4,-51.28,8.099>, <4,-52.891,7.41> }
		triangle { <4,-52.891,7.41>, <4,-54.204,4.842>, <4,-50.251,5.74> }
		triangle { <4,-48.955,-2.088>, <4,-49.151,2.325>, <4,-50.009,3.498> }
		triangle { <4,-54.204,4.842>, <4,-54.705,1.56>, <4,-50.009,3.498> }
		triangle { <4,-50.009,3.498>, <4,-50.251,5.74>, <4,-54.204,4.842> }
		triangle { <3.814,-27.142,2.849>, <4.002,-26.869,-0.013>, <2.94,-26.227,2.955> }
		triangle { <4.002,-26.869,-0.013>, <4.001,-25.983,-0.013>, <2.94,-26.227,2.955> }
// Middle condlines
// Cylinder junction condlines
	}
}
#end
#end // ifndef (s_slash_98372s01_dot_dat)


//// Part s\98372s02.dat
#ifndef (s_slash_98372s02_dot_dat)
#declare s_slash_98372s02_dot_dat = #if (L3Quality = 0) box { <3.749,-58.387,-12.06>, <3.752,-29.368,12.006> } #else object {
// ~Minifig Steak on Bone Meat
// Name: s\98372s02.dat
// Author: Stan Isachenko [angmarec]
// !LDRAW_ORG Subpart UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	mesh {
		triangle { <3.75,-29.952,-2.109>, <3.75,-29.368,0.067>, <3.751,-29.689,1.922> }
		triangle { <3.751,-29.689,1.922>, <3.75,-31.559,3.098>, <3.75,-29.952,-2.109> }
		triangle { <3.75,-31.359,-4.226>, <3.75,-29.952,-2.109>, <3.75,-31.559,3.098> }
		triangle { <3.75,-31.559,3.098>, <3.749,-34.562,3.039>, <3.75,-31.359,-4.226> }
		triangle { <3.75,-33.681,-6.614>, <3.75,-31.359,-4.226>, <3.749,-34.562,3.039> }
		triangle { <3.749,-34.562,3.039>, <3.75,-37.584,3.859>, <3.75,-33.681,-6.614> }
		triangle { <3.75,-36.739,-8.821>, <3.75,-33.681,-6.614>, <3.75,-37.584,3.859> }
		triangle { <3.75,-37.584,3.859>, <3.75,-41.039,6.63>, <3.75,-36.739,-8.821> }
		triangle { <3.751,-40.206,-10.331>, <3.75,-36.739,-8.821>, <3.75,-41.039,6.63> }
		triangle { <3.75,-41.039,6.63>, <3.75,-43.733,9.533>, <3.751,-40.206,-10.331> }
		triangle { <3.75,-43.002,-11.2>, <3.751,-40.206,-10.331>, <3.75,-43.733,9.533> }
		triangle { <3.75,-43.733,9.533>, <3.751,-47.027,11.515>, <3.75,-43.002,-11.2> }
		triangle { <3.751,-46.785,-11.873>, <3.75,-43.002,-11.2>, <3.751,-47.027,11.515> }
		triangle { <3.751,-47.027,11.515>, <3.75,-49.658,12.006>, <3.751,-46.785,-11.873> }
		triangle { <3.751,-50.323,-12.06>, <3.751,-46.785,-11.873>, <3.75,-49.658,12.006> }
		triangle { <3.75,-49.658,12.006>, <3.75,-55.873,9.516>, <3.751,-50.323,-12.06> }
		triangle { <3.752,-54.631,-11.135>, <3.751,-50.323,-12.06>, <3.75,-55.873,9.516> }
		triangle { <3.75,-55.873,9.516>, <3.752,-57.486,6.332>, <3.752,-54.631,-11.135> }
		triangle { <3.752,-57.028,-8.387>, <3.752,-54.631,-11.135>, <3.752,-57.486,6.332> }
		triangle { <3.752,-57.486,6.332>, <3.751,-58.387,2.021>, <3.752,-57.028,-8.387> }
		triangle { <3.751,-58.387,2.021>, <3.751,-58.076,-4.531>, <3.752,-57.028,-8.387> }
		triangle { <3.75,-55.873,9.516>, <3.75,-49.658,12.006>, <3.751,-52.803,11.564> }
	}
}
#end
#end // ifndef (s_slash_98372s02_dot_dat)


//// Part s\92691s01.dat
#ifndef (s_slash_92691s01_dot_dat)
#declare s_slash_92691s01_dot_dat = #if (L3Quality = 0) box { <-4,-12.3,-9.3>, <4,0,8.1> } #else object {
// ~Bone End
// Name: s\92691s01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2011-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
	mesh {
		triangle { <-1.8,-2.7,4.3>, <-1.5,-6.9,7.9>, <0,-2.5,4.7> }
		triangle { <-1.5,-6.9,7.9>, <0,-6.9,8>, <0,-2.5,4.7> }
		triangle { <-3.6,-3,2.2>, <-3.9,-7.6,5.9>, <-1.8,-2.7,4.3> }
		triangle { <-3.9,-7.6,5.9>, <-1.5,-6.9,7.9>, <-1.8,-2.7,4.3> }
		triangle { <0,-6.3,-8.9>, <-1.5,-6.3,-8.8>, <0,-3.9,-5.9> }
		triangle { <0,-3.9,-5.9>, <-1.5,-6.3,-8.8>, <-1.2,-3.9,-5.9> }
		triangle { <0,-8.4,8.1>, <-1.5,-8.3,8>, <0,-10.5,6.7> }
		triangle { <-1.5,-10.3,6.7>, <0,-10.5,6.7>, <-1.5,-8.3,8> }
		triangle { <-3.9,-9.4,4.1>, <-1.5,-12.1,3.8>, <-3.8,-9.1,5.2> }
		triangle { <-1.5,-12.1,3.8>, <-1.5,-11.9,4.9>, <-3.8,-9.1,5.2> }
		triangle { <-1.5,-9,-1.6>, <-3.8,-7.3,-0.4>, <-1.6,-10.2,-6.2> }
		triangle { <-1.6,-10.2,-6.2>, <-3.8,-7.3,-0.4>, <-3.8,-7.3,-3> }
		triangle { <-3.9,-8.3,-5.9>, <-1.6,-10.2,-6.2>, <-3.8,-7.3,-3> }
		triangle { <-1.8,-2.3,-4.6>, <0,-2.3,-5>, <-1.2,-3.9,-5.9> }
		triangle { <-1.2,-3.9,-5.9>, <0,-2.3,-5>, <0,-3.9,-5.9> }
		triangle { <-3.6,-2.7,-2.5>, <-1.8,-2.3,-4.6>, <-3.8,-4.6,-4.7> }
		triangle { <-3.8,-4.6,-4.7>, <-1.8,-2.3,-4.6>, <-1.2,-3.9,-5.9> }
		triangle { <-3.8,-4.6,-4.7>, <-4,-3,-0.2>, <-3.6,-2.7,-2.5> }
		triangle { <0,-9.1,-1.5>, <-1.5,-9,-1.6>, <0,-10.4,-6.1> }
		triangle { <-1.6,-10.2,-6.2>, <0,-10.4,-6.1>, <-1.5,-9,-1.6> }
		triangle { <-1.5,-11.8,2.2>, <-1.5,-9.2,-0.6>, <0,-12,2.2> }
		triangle { <0,-12,2.2>, <-1.5,-9.2,-0.6>, <0,-9.4,-0.5> }
		triangle { <0,-12.3,3.7>, <-1.5,-12.1,3.8>, <-1.5,-11.8,2.2> }
		triangle { <-1.5,-11.8,2.2>, <0,-12,2.2>, <0,-12.3,3.7> }
		triangle { <0,-12.3,3.7>, <0,-12,4.9>, <-1.5,-12.1,3.8> }
		triangle { <0,-12,4.9>, <-1.5,-11.9,4.9>, <-1.5,-12.1,3.8> }
		triangle { <-1.5,-6.3,-8.8>, <-3.8,-6.9,-7.2>, <-1.2,-3.9,-5.9> }
		triangle { <-1.2,-3.9,-5.9>, <-3.8,-6.9,-7.2>, <-3.8,-4.6,-4.7> }
		triangle { <-1.5,-8.3,-8.8>, <-1.6,-10.2,-6.2>, <-3.8,-7.3,-7.2> }
		triangle { <-1.6,-10.2,-6.2>, <-3.9,-8.3,-5.9>, <-3.8,-7.3,-7.2> }
		triangle { <-3.9,-9.2,2.4>, <-3.8,-7.3,-0.4>, <-1.5,-11.8,2.2> }
		triangle { <-1.5,-9.2,-0.6>, <-1.5,-11.8,2.2>, <-3.8,-7.3,-0.4> }
		triangle { <-3.9,-8.4,5.7>, <-1.5,-10.3,6.7>, <-1.5,-8.3,8> }
		triangle { <-3.9,-9.4,4.1>, <-3.9,-9.2,2.4>, <-1.5,-12.1,3.8> }
		triangle { <-1.5,-12.1,3.8>, <-3.9,-9.2,2.4>, <-1.5,-11.8,2.2> }
		triangle { <-1.5,-10.3,6.7>, <-3.9,-8.4,5.7>, <-3.8,-9.1,5.2> }
		triangle { <0,-8.4,-8.9>, <0,-10.4,-6.1>, <-1.5,-8.3,-8.8> }
		triangle { <0,-10.4,-6.1>, <-1.6,-10.2,-6.2>, <-1.5,-8.3,-8.8> }
		triangle { <-3.9,-7.6,5.9>, <-3.6,-3,2.2>, <-3.9,-9.4,4.1> }
		triangle { <-3.6,-3,2.2>, <-3.9,-9.2,2.4>, <-3.9,-9.4,4.1> }
		triangle { <-3.9,-7.6,5.9>, <-3.9,-9.4,4.1>, <-3.9,-8.4,5.7> }
		triangle { <-3.9,-8.4,5.7>, <-3.9,-9.4,4.1>, <-3.8,-9.1,5.2> }
		triangle { <-3.8,-7.3,-0.4>, <-3.9,-9.2,2.4>, <-3.6,-3,2.2> }
		triangle { <-3.8,-7.3,-0.4>, <-3.6,-3,2.2>, <-4,-3,-0.2> }
		triangle { <-1.5,-7.3,-9.2>, <-1.5,-6.3,-8.8>, <0,-6.3,-8.9> }
		triangle { <0,-6.3,-8.9>, <0,-7.3,-9.3>, <-1.5,-7.3,-9.2> }
		triangle { <-3.8,-6.9,-7.2>, <-1.5,-6.3,-8.8>, <-1.5,-7.3,-9.2> }
		triangle { <-3.8,-6.9,-7.2>, <-1.5,-7.3,-9.2>, <-3.8,-7.3,-7.2> }
		triangle { <-3.8,-7.3,-7.2>, <-1.5,-7.3,-9.2>, <-1.5,-8.3,-8.8> }
		triangle { <0,-8.4,-8.9>, <-1.5,-8.3,-8.8>, <0,-7.3,-9.3> }
		triangle { <0,-7.3,-9.3>, <-1.5,-8.3,-8.8>, <-1.5,-7.3,-9.2> }
		triangle { <-3.9,-8.3,-5.9>, <-3.8,-6.9,-7.2>, <-3.8,-7.3,-7.2> }
		triangle { <0,-9.4,-0.5>, <-1.5,-9.2,-0.6>, <0,-9.1,-1.5> }
		triangle { <0,-9.1,-1.5>, <-1.5,-9.2,-0.6>, <-1.5,-9,-1.6> }
		triangle { <-3.8,-7.3,-0.4>, <-1.5,-9,-1.6>, <-1.5,-9.2,-0.6> }
		triangle { <-3.8,-7.3,-0.4>, <-4,-3,-0.2>, <-3.8,-7.3,-3> }
		triangle { <-4,-3,-0.2>, <-3.8,-4.6,-4.7>, <-3.8,-7.3,-3> }
		triangle { <-3.8,-7.3,-3>, <-3.8,-4.6,-4.7>, <-3.9,-8.3,-5.9> }
		triangle { <-3.8,-4.6,-4.7>, <-3.8,-6.9,-7.2>, <-3.9,-8.3,-5.9> }
		triangle { <0,-8.4,8.1>, <0,-6.9,8>, <-1.5,-6.9,7.9> }
		triangle { <-1.5,-6.9,7.9>, <-1.5,-8.3,8>, <0,-8.4,8.1> }
		triangle { <-1.5,-8.3,8>, <-1.5,-6.9,7.9>, <-3.9,-8.4,5.7> }
		triangle { <-3.9,-7.6,5.9>, <-3.9,-8.4,5.7>, <-1.5,-6.9,7.9> }
		triangle { <-1.5,-11.9,4.9>, <-1.5,-10.3,6.7>, <-3.8,-9.1,5.2> }
		triangle { <-1.5,-10.3,6.7>, <-1.5,-11.9,4.9>, <0,-10.5,6.7> }
		triangle { <-1.5,-11.9,4.9>, <0,-12,4.9>, <0,-10.5,6.7> }
		triangle { <0,-8.4,8.1>, <0,-10.5,6.7>, <1.5,-8.3,8> }
		triangle { <1.5,-8.3,8>, <0,-10.5,6.7>, <1.5,-10.3,6.7> }
		triangle { <0,-9.1,-1.5>, <0,-10.4,-6.1>, <1.5,-9,-1.6> }
		triangle { <1.6,-10.2,-6.2>, <1.5,-9,-1.6>, <0,-10.4,-6.1> }
		triangle { <1.5,-11.8,2.2>, <1.5,-12.1,3.8>, <0,-12.3,3.7> }
		triangle { <0,-12.3,3.7>, <0,-12,2.2>, <1.5,-11.8,2.2> }
		triangle { <0,-12.3,3.7>, <1.5,-12.1,3.8>, <0,-12,4.9> }
		triangle { <1.5,-11.9,4.9>, <0,-12,4.9>, <1.5,-12.1,3.8> }
		triangle { <3.9,-8.4,5.7>, <1.5,-10.3,6.7>, <3.8,-9.1,5.2> }
		triangle { <3.9,-9.4,4.1>, <3.8,-9.1,5.2>, <1.5,-12.1,3.8> }
		triangle { <1.5,-11.9,4.9>, <1.5,-12.1,3.8>, <3.8,-9.1,5.2> }
		triangle { <1.5,-12.1,3.8>, <1.5,-11.8,2.2>, <3.9,-9.4,4.1> }
		triangle { <3.9,-9.4,4.1>, <1.5,-11.8,2.2>, <3.9,-9.2,2.4> }
		triangle { <1.5,-10.3,6.7>, <3.9,-8.4,5.7>, <1.5,-8.3,8> }
		triangle { <0,-6.3,-8.9>, <1.5,-6.3,-8.8>, <1.5,-7.3,-9.2> }
		triangle { <1.5,-7.3,-9.2>, <0,-7.3,-9.3>, <0,-6.3,-8.9> }
		triangle { <1.5,-7.3,-9.2>, <1.5,-6.3,-8.8>, <3.8,-6.9,-7.2> }
		triangle { <0,-8.4,-8.9>, <0,-7.3,-9.3>, <1.5,-8.3,-8.8> }
		triangle { <1.5,-8.3,-8.8>, <0,-7.3,-9.3>, <1.5,-7.3,-9.2> }
		triangle { <3.8,-7.3,-7.2>, <3.8,-6.9,-7.2>, <3.9,-8.3,-5.9> }
		triangle { <3.8,-6.9,-7.2>, <3.8,-7.3,-7.2>, <1.5,-7.3,-9.2> }
		triangle { <1.5,-8.3,-8.8>, <1.5,-7.3,-9.2>, <3.8,-7.3,-7.2> }
		triangle { <0,-9.4,-0.5>, <0,-9.1,-1.5>, <1.5,-9.2,-0.6> }
		triangle { <1.5,-9.2,-0.6>, <0,-9.1,-1.5>, <1.5,-9,-1.6> }
		triangle { <3.9,-7.1,-1.5>, <1.5,-9.2,-0.6>, <1.5,-9,-1.6> }
		triangle { <3.9,-7.1,-1.5>, <3.8,-7.3,-0.4>, <1.5,-9.2,-0.6> }
		triangle { <1.5,-6.9,7.9>, <3.9,-7.6,5.9>, <1.8,-2.7,4.3> }
		triangle { <3.4,-2.9,3>, <1.8,-2.7,4.3>, <3.9,-7.6,5.9> }
		triangle { <1.8,-2.7,4.3>, <0,-2.5,4.7>, <1.5,-6.9,7.9> }
		triangle { <1.5,-6.9,7.9>, <0,-2.5,4.7>, <0,-6.9,8> }
		triangle { <1.8,-2.3,-4.6>, <1.2,-3.9,-5.9>, <0,-2.3,-5> }
		triangle { <0,-2.3,-5>, <1.2,-3.9,-5.9>, <0,-3.9,-5.9> }
		triangle { <1.2,-3.9,-5.9>, <1.8,-2.3,-4.6>, <3.8,-4.6,-4.7> }
		triangle { <3.8,-4.6,-4.7>, <1.8,-2.3,-4.6>, <3.3,-2.6,-3.5> }
		triangle { <3.3,-2.6,-3.5>, <4,-3,-0.2>, <3.8,-4.6,-4.7> }
		triangle { <4,-3,-0.2>, <3.9,-7.1,-1.5>, <3.9,-8.3,-5.9> }
		triangle { <3.9,-7.1,-1.5>, <1.5,-9,-1.6>, <1.6,-10.2,-6.2> }
		triangle { <1.6,-10.2,-6.2>, <3.9,-8.3,-5.9>, <3.9,-7.1,-1.5> }
		triangle { <1.2,-3.9,-5.9>, <3.8,-4.6,-4.7>, <1.5,-6.3,-8.8> }
		triangle { <1.5,-6.3,-8.8>, <3.8,-4.6,-4.7>, <3.8,-6.9,-7.2> }
		triangle { <0,-6.3,-8.9>, <0,-3.9,-5.9>, <1.5,-6.3,-8.8> }
		triangle { <1.5,-6.3,-8.8>, <0,-3.9,-5.9>, <1.2,-3.9,-5.9> }
		triangle { <3.9,-8.3,-5.9>, <3.8,-6.9,-7.2>, <4,-3,-0.2> }
		triangle { <3.8,-6.9,-7.2>, <3.8,-4.6,-4.7>, <4,-3,-0.2> }
		triangle { <1.5,-6.9,7.9>, <0,-6.9,8>, <0,-8.4,8.1> }
		triangle { <0,-8.4,8.1>, <1.5,-8.3,8>, <1.5,-6.9,7.9> }
		triangle { <1.5,-8.3,8>, <3.9,-8.4,5.7>, <1.5,-6.9,7.9> }
		triangle { <3.9,-8.4,5.7>, <3.9,-7.6,5.9>, <1.5,-6.9,7.9> }
		triangle { <3.9,-9.2,2.4>, <1.5,-11.8,2.2>, <3.8,-7.3,-0.4> }
		triangle { <3.8,-7.3,-0.4>, <1.5,-11.8,2.2>, <1.5,-9.2,-0.6> }
		triangle { <1.5,-9.2,-0.6>, <1.5,-11.8,2.2>, <0,-9.4,-0.5> }
		triangle { <1.5,-11.8,2.2>, <0,-12,2.2>, <0,-9.4,-0.5> }
		triangle { <4,-3,-0.2>, <3.4,-2.9,3>, <3.9,-9.2,2.4> }
		triangle { <3.9,-9.2,2.4>, <3.4,-2.9,3>, <3.9,-9.4,4.1> }
		triangle { <3.9,-7.6,5.9>, <3.9,-9.4,4.1>, <3.4,-2.9,3> }
		triangle { <3.9,-7.6,5.9>, <3.9,-8.4,5.7>, <3.9,-9.4,4.1> }
		triangle { <3.9,-8.4,5.7>, <3.8,-9.1,5.2>, <3.9,-9.4,4.1> }
		triangle { <1.5,-11.9,4.9>, <3.8,-9.1,5.2>, <1.5,-10.3,6.7> }
		triangle { <0,-12,4.9>, <1.5,-11.9,4.9>, <0,-10.5,6.7> }
		triangle { <1.5,-11.9,4.9>, <1.5,-10.3,6.7>, <0,-10.5,6.7> }
		triangle { <0,-10.4,-6.1>, <0,-8.4,-8.9>, <1.6,-10.2,-6.2> }
		triangle { <1.6,-10.2,-6.2>, <0,-8.4,-8.9>, <1.5,-8.3,-8.8> }
		triangle { <1.5,-8.3,-8.8>, <3.8,-7.3,-7.2>, <1.6,-10.2,-6.2> }
		triangle { <3.9,-8.3,-5.9>, <1.6,-10.2,-6.2>, <3.8,-7.3,-7.2> }
		triangle { <4,-3,-0.2>, <3.8,-7.3,-0.4>, <3.9,-7.1,-1.5> }
		triangle { <4,-3,-0.2>, <3.9,-9.2,2.4>, <3.8,-7.3,-0.4> }
		triangle { <4,-3,-0.2>, <4,0,0>, <3.696,0,1.531> }
		triangle { <3.696,0,1.531>, <3.4,-2.9,3>, <4,-3,-0.2> }
		triangle { <2.828,0,2.828>, <3.4,-2.9,3>, <3.696,0,1.531> }
		triangle { <1.8,-2.7,4.3>, <3.4,-2.9,3>, <2.828,0,2.828> }
		triangle { <1.531,0,3.696>, <1.8,-2.7,4.3>, <2.828,0,2.828> }
		triangle { <0,-2.5,4.7>, <1.8,-2.7,4.3>, <1.531,0,3.696> }
		triangle { <0,0,4>, <0,-2.5,4.7>, <1.531,0,3.696> }
		triangle { <-1.531,0,3.696>, <0,-2.5,4.7>, <0,0,4> }
		triangle { <-1.8,-2.7,4.3>, <0,-2.5,4.7>, <-1.531,0,3.696> }
		triangle { <-2.828,0,2.828>, <-1.8,-2.7,4.3>, <-1.531,0,3.696> }
		triangle { <-3.6,-3,2.2>, <-1.8,-2.7,4.3>, <-2.828,0,2.828> }
		triangle { <-3.696,0,1.531>, <-3.6,-3,2.2>, <-2.828,0,2.828> }
		triangle { <-4,-3,-0.2>, <-3.6,-3,2.2>, <-3.696,0,1.531> }
		triangle { <-4,0,0>, <-4,-3,-0.2>, <-3.696,0,1.531> }
		triangle { <-3.696,0,-1.531>, <-4,-3,-0.2>, <-4,0,0> }
		triangle { <-3.6,-2.7,-2.5>, <-4,-3,-0.2>, <-3.696,0,-1.531> }
		triangle { <-2.828,0,-2.828>, <-3.6,-2.7,-2.5>, <-3.696,0,-1.531> }
		triangle { <-1.8,-2.3,-4.6>, <-3.6,-2.7,-2.5>, <-2.828,0,-2.828> }
		triangle { <-1.531,0,-3.696>, <-1.8,-2.3,-4.6>, <-2.828,0,-2.828> }
		triangle { <0,-2.3,-5>, <-1.8,-2.3,-4.6>, <-1.531,0,-3.696> }
		triangle { <0,0,-4>, <0,-2.3,-5>, <-1.531,0,-3.696> }
		triangle { <1.531,0,-3.696>, <0,-2.3,-5>, <0,0,-4> }
		triangle { <1.8,-2.3,-4.6>, <0,-2.3,-5>, <1.531,0,-3.696> }
		triangle { <2.828,0,-2.828>, <1.8,-2.3,-4.6>, <1.531,0,-3.696> }
		triangle { <3.3,-2.6,-3.5>, <1.8,-2.3,-4.6>, <2.828,0,-2.828> }
		triangle { <3.696,0,-1.531>, <3.3,-2.6,-3.5>, <2.828,0,-2.828> }
		triangle { <4,-3,-0.2>, <3.3,-2.6,-3.5>, <3.696,0,-1.531> }
		triangle { <4,0,0>, <4,-3,-0.2>, <3.696,0,-1.531> }
	}
}
#end
#end // ifndef (s_slash_92691s01_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Part 98372p01.dat
#ifndef (_98372p01_dot_dat)
#declare _98372p01_dot_dat = #if (L3Quality = 0) box { <-14.614,-42.043,-4.004>, <14.614,19,4.004> } #else union {
// Minifig Steak on Bone with Red Meat Pattern
// Name: 98372p01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !HISTORY 2012-09-20 {LEGO Digital Designer} Original part shape
// !HISTORY 2012-09-21 [Philo] File preparation for LDraw Parts Tracker
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { s_slash_98372s01_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,19,0> }
	object { s_slash_98372s01_dot_dat matrix <0,0,1,0,1,0,1,0,0,0,19,0> }
	object { s_slash_98372s02_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,19,0> material { L3Color4 } }
	object { s_slash_98372s02_dot_dat matrix <0,0,1,0,1,0,1,0,0,0,19,0> material { L3Color4 } }
	object { s_slash_92691s01_dot_dat matrix <0,0,1,0,-1,0,1,0,0,0,6.7,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-11.069,0,0,0,-4,0,6.7,0> }
}
#end
#end // ifndef (_98372p01_dot_dat)


//// Model item_017_meatsteak.ldr
#ifndef (item__017__meatsteak_dot_ldr)
#declare item__017__meatsteak_dot_ldr = object {
// Untitled
// Name: item_017_meatsteak.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 15  0 12 0  -1 0 0  0 1 0  0 0 -1 98372p01.dat
	object {
		_98372p01_dot_dat
		matrix <1-L3SW/29.228,0,0,0,1-L3SW/61.043,0,0,0,1-L3SW/8.008,0,L3SW/-5.29818,0>
		matrix <-1,0,0,0,1,0,0,0,-1,0,12,0>
		material { L3Color15 }
	}
}
#end // ifndef (item__017__meatsteak_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-14.614,-30.043,-4.004>;
#declare L3ModelBBoxMax = <14.614,31,4.004>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,0.4785,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <29.228,61.043,8.008>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject item_017_meatsteak.ldr
object { item__017__meatsteak_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        5             1             7
// POV Equivs:       -             1 (100%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
