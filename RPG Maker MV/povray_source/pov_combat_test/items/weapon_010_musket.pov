// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:08 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_010_musket.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_010_musket.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_010_musket.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 6 Brown (from ldconfig.ldr)
#ifndef (L3Texture6)
#declare L3Texture6 = L3TextureOpaqueRGB(88,57,39)
#end
#ifndef (L3Texture6_slope)
#declare L3Texture6_slope = L3TextureSlope(L3Texture6)
#end
#ifndef (L3Color6)
#declare L3Color6 = L3Material(L3Texture6)
#end
#ifndef (L3Color6_slope)
#declare L3Color6_slope = L3Material(L3Texture6_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 1-4con1.dat
#ifndef (_1_dash_4con1_dot_dat)
#declare _1_dash_4con1_dot_dat = cone {
	<0,0,0>, 2, <0,1,0>, 1 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con1_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive ring2.dat
#ifndef (ring2_dot_dat)
#declare ring2_dot_dat = disc { <0,0,0>, <0,1,0>, 3, 2 }
#end // ifndef (ring2_dot_dat)


//// Primitive 1-4con2.dat
#ifndef (_1_dash_4con2_dot_dat)
#declare _1_dash_4con2_dot_dat = cone {
	<0,0,0>, 3, <0,1,0>, 2 open
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4con2_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive ring1.dat
#ifndef (ring1_dot_dat)
#declare ring1_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 }
#end // ifndef (ring1_dot_dat)


//// Primitive 1-4ndis.dat
#ifndef (_1_dash_4ndis_dot_dat)
#declare _1_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <0,-1,0>, <1,1,1> } } }
#end // ifndef (_1_dash_4ndis_dot_dat)


//// Primitive 2-4disc.dat
#ifndef (_2_dash_4disc_dot_dat)
#declare _2_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { box { <-2,-1,0>, <2,1,2> } } }
#end // ifndef (_2_dash_4disc_dot_dat)


//// Part 2561.dat
#ifndef (_2561_dot_dat)
#declare _2561_dot_dat = #if (L3Quality = 0) box { <-6,-34,-22.344>, <6,75.656,12> } #else union {
// Minifig Gun Musket
// Name: 2561.dat
// Author: Franklin W. Cain [fwcain]
// !LDRAW_ORG Part UPDATE 2000-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !CATEGORY Minifig Accessory
// !KEYWORDS minifig weapon, gun, firearm, musket, pirate
// !KEYWORDS blackpowder, blunderbuss
// !HISTORY 1998-05-21 [PTadmin] Official Update 1998-05
// !HISTORY 1998-07-15 [PTadmin] Official Update 1998-07
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2007-05-14 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	object { _4_dash_4disc_dot_dat matrix <2,0,0,0,1,0,0,0,-2,0,-26,0> }
// 
	object { _1_dash_4con1_dot_dat matrix <-2,0,0,0,4,0,0,0,2,0,-34,0> }
	object { _1_dash_4con1_dot_dat matrix <2,0,0,0,4,0,0,0,2,0,-34,0> }
	object { _1_dash_4con1_dot_dat matrix <-2,0,0,0,4,0,0,0,-2,0,-34,0> }
	object { _1_dash_4con1_dot_dat matrix <2,0,0,0,4,0,0,0,-2,0,-34,0> }
// 
	object { _4_dash_4cyli_dot_dat matrix <2,0,0,0,4,0,0,0,-2,0,-30,0> }
	object { ring2_dot_dat matrix <2,0,0,0,1,0,0,0,-2,0,-34,0> }
// 
	object { _1_dash_4con2_dot_dat matrix <-2,0,0,0,4,0,0,0,2,0,-34,0> }
	object { _1_dash_4con2_dot_dat matrix <2,0,0,0,4,0,0,0,2,0,-34,0> }
	object { _1_dash_4con2_dot_dat matrix <-2,0,0,0,4,0,0,0,-2,0,-34,0> }
	object { _1_dash_4con2_dot_dat matrix <2,0,0,0,4,0,0,0,-2,0,-34,0> }
// 
// 
// barrel
// 
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-56,0,0,0,-4,0,26,0> }
// 
	object { _2_dash_4cyli_dot_dat matrix <4,0,0,0,8,0,0,0,-4,0,26,0> }
// 
// wheel-lock and hammer
// 
	object { _4_dash_4cyli_dot_dat matrix <0,0,-4,-4,0,0,0,4,0,0,30,4> }
	object { _4_dash_4cyli_dot_dat matrix <0,0,-4,4,0,0,0,4,0,0,30,4> }
// 
	object { ring1_dot_dat matrix <0,0,-2,1,0,0,0,2,0,-4,30,4> }
	object { ring1_dot_dat matrix <0,0,-2,1,0,0,0,2,0,4,30,4> }
// 
	object { _4_dash_4cyli_dot_dat matrix <0,0,-2,2,0,0,0,2,0,-4,30,4> }
	object { _4_dash_4cyli_dot_dat matrix <0,0,-2,-2,0,0,0,2,0,4,30,4> }
// 
	object { _4_dash_4disc_dot_dat matrix <0,0,-2,1,0,0,0,2,0,-2,30,4> }
	object { _4_dash_4disc_dot_dat matrix <0,0,-2,1,0,0,0,2,0,2,30,4> }
// 
// 
// 
	object { _1_dash_4ndis_dot_dat matrix <0,0,4,1,0,0,0,4,0,0,30,4> }
	object { _1_dash_4ndis_dot_dat matrix <0,0,4,1,0,0,0,4,0,-4,30,4> }
// 
	mesh {
		triangle { <0,30,8>, <0,34,8>, <0,34,12> }
		triangle { <-4,30,8>, <-4,34,8>, <-4,34,12> }
// 
		triangle { <0,30,8>, <-4,30,8>, <-4,34,12> }
		triangle { <-4,34,12>, <0,34,12>, <0,30,8> }
// 
		triangle { <0,34,4>, <-4,34,4>, <-4,34,12> }
		triangle { <-4,34,12>, <0,34,12>, <0,34,4> }
// 
// 
// 
// 
// 
// 
// intersection of wheel-lock and barrel
// 
		triangle { <0,26,4>, <-1.531,26,3.696>, <-1.531,26.15,3.696> }
		triangle { <0,26,4>, <1.531,26,3.696>, <1.531,26.15,3.696> }
		triangle { <0,34,4>, <-1.531,34,3.696>, <-1.531,33.85,3.696> }
		triangle { <0,34,4>, <1.531,34,3.696>, <1.531,33.85,3.696> }
// 
		triangle { <-1.531,26,3.696>, <-2.828,26,2.828>, <-2.828,26.35,2.828> }
		triangle { <-2.828,26.35,2.828>, <-1.531,26.15,3.696>, <-1.531,26,3.696> }
		triangle { <1.531,26,3.696>, <2.828,26,2.828>, <2.828,26.35,2.828> }
		triangle { <2.828,26.35,2.828>, <1.531,26.15,3.696>, <1.531,26,3.696> }
		triangle { <-1.531,34,3.696>, <-2.828,34,2.828>, <-2.828,33.65,2.828> }
		triangle { <-2.828,33.65,2.828>, <-1.531,33.85,3.696>, <-1.531,34,3.696> }
		triangle { <1.531,34,3.696>, <2.828,34,2.828>, <2.828,33.65,2.828> }
		triangle { <2.828,33.65,2.828>, <1.531,33.85,3.696>, <1.531,34,3.696> }
// 
		triangle { <-2.828,26,2.828>, <-3.696,26,1.531>, <-3.696,27,1.531> }
		triangle { <-3.696,27,1.531>, <-2.828,26.35,2.828>, <-2.828,26,2.828> }
		triangle { <2.828,26,2.828>, <3.696,26,1.531>, <3.696,27,1.531> }
		triangle { <3.696,27,1.531>, <2.828,26.35,2.828>, <2.828,26,2.828> }
		triangle { <-2.828,34,2.828>, <-3.696,34,1.531>, <-3.696,33,1.531> }
		triangle { <-3.696,33,1.531>, <-2.828,33.65,2.828>, <-2.828,34,2.828> }
		triangle { <2.828,34,2.828>, <3.696,34,1.531>, <3.696,33,1.531> }
		triangle { <3.696,33,1.531>, <2.828,33.65,2.828>, <2.828,34,2.828> }
// 
		triangle { <-3.696,26,1.531>, <-4,26,0>, <-4,30,0> }
		triangle { <-4,30,0>, <-3.696,27,1.531>, <-3.696,26,1.531> }
		triangle { <3.696,26,1.531>, <4,26,0>, <4,30,0> }
		triangle { <4,30,0>, <3.696,27,1.531>, <3.696,26,1.531> }
		triangle { <-3.696,34,1.531>, <-4,34,0>, <-4,30,0> }
		triangle { <-4,30,0>, <-3.696,33,1.531>, <-3.696,34,1.531> }
		triangle { <3.696,34,1.531>, <4,34,0>, <4,30,0> }
		triangle { <4,30,0>, <3.696,33,1.531>, <3.696,34,1.531> }
// 
// 
// 
// 
// 
// 
// trigger
// 
	}
	object { _2_dash_4cyli_dot_dat matrix <0,4,0,-1,0,0,0,0,-4,0,26,-4> }
	object { _2_dash_4cyli_dot_dat matrix <0,4,0,1,0,0,0,0,-4,0,26,-4> }
// 
	object { _2_dash_4disc_dot_dat matrix <0,4,0,1,0,0,0,0,-4,-1,26,-4> }
	object { _2_dash_4disc_dot_dat matrix <0,4,0,1,0,0,0,0,-4,1,26,-4> }
// 
	mesh {
		triangle { <-1,22,-4>, <1,22,-4>, <1,30,-4> }
		triangle { <1,30,-4>, <-1,30,-4>, <-1,22,-4> }
// 
		triangle { <-1,22,-4>, <1,22,-4>, <1,22,-3> }
		triangle { <1,22,-3>, <-1,22,-3>, <-1,22,-4> }
		triangle { <-1,30,-4>, <1,30,-4>, <1,30,-3> }
		triangle { <1,30,-3>, <-1,30,-3>, <-1,30,-4> }
// 
		triangle { <-1,22,-4>, <-1,30,-4>, <-1,30,-3> }
		triangle { <-1,30,-3>, <-1,22,-3>, <-1,22,-4> }
		triangle { <1,22,-4>, <1,30,-4>, <1,30,-3> }
		triangle { <1,30,-3>, <1,22,-3>, <1,22,-4> }
// 
// 
// 
// 
// grip
// 
		triangle { <0,34,4>, <0,37.051,3.376>, <-1.531,36.935,3.096> }
		triangle { <-1.531,36.935,3.096>, <-1.531,34,3.696>, <0,34,4> }
		triangle { <0,34,4>, <0,37.051,3.376>, <1.531,36.935,3.096> }
		triangle { <1.531,36.935,3.096>, <1.531,34,3.696>, <0,34,4> }
// 
		triangle { <0,34,-4>, <-1.531,34,-3.696>, <-1.531,34.127,-3.704> }
		triangle { <0,34,-4>, <1.531,34,-3.696>, <1.531,34.127,-3.704> }
// 
		triangle { <-1.531,34,3.696>, <-1.531,36.935,3.096>, <-2.828,36.606,2.298> }
		triangle { <-2.828,36.606,2.298>, <-2.828,34,2.828>, <-1.531,34,3.696> }
		triangle { <1.531,34,3.696>, <1.531,36.935,3.096>, <2.828,36.606,2.298> }
		triangle { <2.828,36.606,2.298>, <2.828,34,2.828>, <1.531,34,3.696> }
// 
		triangle { <-1.531,34,-3.696>, <-1.531,34.127,-3.704>, <-2.828,34.456,-2.906> }
		triangle { <-2.828,34.456,-2.906>, <-2.828,34,-2.828>, <-1.531,34,-3.696> }
		triangle { <1.531,34,-3.696>, <1.531,34.127,-3.704>, <2.828,34.456,-2.906> }
		triangle { <2.828,34.456,-2.906>, <2.828,34,-2.828>, <1.531,34,-3.696> }
// 
		triangle { <-2.828,34,2.828>, <-2.828,36.606,2.298>, <-3.696,36.113,1.104> }
		triangle { <-3.696,36.113,1.104>, <-3.696,34,1.531>, <-2.828,34,2.828> }
		triangle { <2.828,34,2.828>, <2.828,36.606,2.298>, <3.696,36.113,1.104> }
		triangle { <3.696,36.113,1.104>, <3.696,34,1.531>, <2.828,34,2.828> }
// 
		triangle { <-2.828,34,-2.828>, <-2.828,34.456,-2.906>, <-3.696,34.949,-1.712> }
		triangle { <-3.696,34.949,-1.712>, <-3.696,34,-1.531>, <-2.828,34,-2.828> }
		triangle { <2.828,34,-2.828>, <2.828,34.456,-2.906>, <3.696,34.949,-1.712> }
		triangle { <3.696,34.949,-1.712>, <3.696,34,-1.531>, <2.828,34,-2.828> }
// 
		triangle { <-3.696,34,1.531>, <-3.696,36.113,1.104>, <-4,35.531,-0.304> }
		triangle { <-4,35.531,-0.304>, <-4,34,0>, <-3.696,34,1.531> }
		triangle { <3.696,34,1.531>, <3.696,36.113,1.104>, <4,35.531,-0.304> }
		triangle { <4,35.531,-0.304>, <4,34,0>, <3.696,34,1.531> }
// 
		triangle { <-3.696,34,-1.531>, <-3.696,34.949,-1.712>, <-4,35.531,-0.304> }
		triangle { <-4,35.531,-0.304>, <-4,34,0>, <-3.696,34,-1.531> }
		triangle { <3.696,34,-1.531>, <3.696,34.949,-1.712>, <4,35.531,-0.304> }
		triangle { <4,35.531,-0.304>, <4,34,0>, <3.696,34,-1.531> }
// 
		triangle { <0,37.051,3.376>, <0,39.668,1.668>, <-1.531,39.452,1.452> }
		triangle { <-1.531,39.452,1.452>, <-1.531,36.935,3.096>, <0,37.051,3.376> }
		triangle { <0,37.051,3.376>, <0,39.668,1.668>, <1.531,39.452,1.452> }
		triangle { <1.531,39.452,1.452>, <1.531,36.935,3.096>, <0,37.051,3.376> }
// 
		triangle { <0,34,-4>, <-1.531,34.127,-3.704>, <-1.531,34.204,-3.796> }
		triangle { <0,34,-4>, <1.531,34.127,-3.704>, <1.531,34.204,-3.796> }
// 
		triangle { <-1.531,36.935,3.096>, <-1.531,39.452,1.452>, <-2.828,38.836,0.836> }
		triangle { <-2.828,38.836,0.836>, <-2.828,36.606,2.298>, <-1.531,36.935,3.096> }
		triangle { <1.531,36.935,3.096>, <1.531,39.452,1.452>, <2.828,38.836,0.836> }
		triangle { <2.828,38.836,0.836>, <2.828,36.606,2.298>, <1.531,36.935,3.096> }
// 
		triangle { <-1.531,34.127,-3.704>, <-1.531,34.204,-3.796>, <-2.828,34.82,-3.18> }
		triangle { <-2.828,34.82,-3.18>, <-2.828,34.456,-2.906>, <-1.531,34.127,-3.704> }
		triangle { <1.531,34.127,-3.704>, <1.531,34.204,-3.796>, <2.828,34.82,-3.18> }
		triangle { <2.828,34.82,-3.18>, <2.828,34.456,-2.906>, <1.531,34.127,-3.704> }
// 
		triangle { <-2.828,36.606,2.298>, <-2.828,38.836,0.836>, <-3.696,37.915,-0.085> }
		triangle { <-3.696,37.915,-0.085>, <-3.696,36.113,1.104>, <-2.828,36.606,2.298> }
		triangle { <2.828,36.606,2.298>, <2.828,38.836,0.836>, <3.696,37.915,-0.085> }
		triangle { <3.696,37.915,-0.085>, <3.696,36.113,1.104>, <2.828,36.606,2.298> }
// 
		triangle { <-2.828,34.456,-2.906>, <-2.828,34.82,-3.18>, <-3.696,35.741,-2.259> }
		triangle { <-3.696,35.741,-2.259>, <-3.696,34.949,-1.712>, <-2.828,34.456,-2.906> }
		triangle { <2.828,34.456,-2.906>, <2.828,34.82,-3.18>, <3.696,35.741,-2.259> }
		triangle { <3.696,35.741,-2.259>, <3.696,34.949,-1.712>, <2.828,34.456,-2.906> }
// 
		triangle { <-3.696,36.113,1.104>, <-3.696,37.915,-0.085>, <-4,36.828,-1.172> }
		triangle { <-4,36.828,-1.172>, <-4,35.531,-0.304>, <-3.696,36.113,1.104> }
		triangle { <3.696,36.113,1.104>, <3.696,37.915,-0.085>, <4,36.828,-1.172> }
		triangle { <4,36.828,-1.172>, <4,35.531,-0.304>, <3.696,36.113,1.104> }
// 
		triangle { <-3.696,34.949,-1.712>, <-3.696,35.741,-2.259>, <-4,36.828,-1.172> }
		triangle { <-4,36.828,-1.172>, <-4,35.531,-0.304>, <-3.696,34.949,-1.712> }
		triangle { <3.696,34.949,-1.712>, <3.696,35.741,-2.259>, <4,36.828,-1.172> }
		triangle { <4,36.828,-1.172>, <4,35.531,-0.304>, <3.696,34.949,-1.712> }
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
	}
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-4,4,0,-2.828,-2.828,0,40.828,-5.172> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,4,-4,0,-2.828,-2.828,0,40.828,-5.172> }
// 
	mesh {
		triangle { <0,47.656,-14.344>, <0,44.605,-13.72>, <-1.531,44.721,-13.44> }
		triangle { <-1.531,44.721,-13.44>, <-1.531,47.656,-14.04>, <0,47.656,-14.344> }
		triangle { <0,47.656,-14.344>, <0,44.605,-13.72>, <1.531,44.721,-13.44> }
		triangle { <1.531,44.721,-13.44>, <1.531,47.656,-14.04>, <0,47.656,-14.344> }
// 
		triangle { <0,47.656,-6.344>, <-1.531,47.656,-6.648>, <-1.531,47.529,-6.64> }
		triangle { <0,47.656,-6.344>, <1.531,47.656,-6.648>, <1.531,47.529,-6.64> }
// 
		triangle { <-1.531,47.656,-14.04>, <-1.531,44.721,-13.44>, <-2.828,45.05,-12.642> }
		triangle { <-2.828,45.05,-12.642>, <-2.828,47.656,-13.172>, <-1.531,47.656,-14.04> }
		triangle { <1.531,47.656,-14.04>, <1.531,44.721,-13.44>, <2.828,45.05,-12.642> }
		triangle { <2.828,45.05,-12.642>, <2.828,47.656,-13.172>, <1.531,47.656,-14.04> }
// 
		triangle { <-1.531,47.656,-6.648>, <-1.531,47.529,-6.64>, <-2.828,47.2,-7.438> }
		triangle { <-2.828,47.2,-7.438>, <-2.828,47.656,-7.516>, <-1.531,47.656,-6.648> }
		triangle { <1.531,47.656,-6.648>, <1.531,47.529,-6.64>, <2.828,47.2,-7.438> }
		triangle { <2.828,47.2,-7.438>, <2.828,47.656,-7.516>, <1.531,47.656,-6.648> }
// 
		triangle { <-2.828,47.656,-13.172>, <-2.828,45.05,-12.642>, <-3.696,45.543,-11.448> }
		triangle { <-3.696,45.543,-11.448>, <-3.696,47.656,-11.875>, <-2.828,47.656,-13.172> }
		triangle { <2.828,47.656,-13.172>, <2.828,45.05,-12.642>, <3.696,45.543,-11.448> }
		triangle { <3.696,45.543,-11.448>, <3.696,47.656,-11.875>, <2.828,47.656,-13.172> }
// 
		triangle { <-2.828,47.656,-7.516>, <-2.828,47.2,-7.438>, <-3.696,46.707,-8.632> }
		triangle { <-3.696,46.707,-8.632>, <-3.696,47.656,-8.813>, <-2.828,47.656,-7.516> }
		triangle { <2.828,47.656,-7.516>, <2.828,47.2,-7.438>, <3.696,46.707,-8.632> }
		triangle { <3.696,46.707,-8.632>, <3.696,47.656,-8.813>, <2.828,47.656,-7.516> }
// 
		triangle { <-3.696,47.656,-11.875>, <-3.696,45.543,-11.448>, <-4,46.125,-10.04> }
		triangle { <-4,46.125,-10.04>, <-4,47.656,-10.344>, <-3.696,47.656,-11.875> }
		triangle { <3.696,47.656,-11.875>, <3.696,45.543,-11.448>, <4,46.125,-10.04> }
		triangle { <4,46.125,-10.04>, <4,47.656,-10.344>, <3.696,47.656,-11.875> }
// 
		triangle { <-3.696,47.656,-8.813>, <-3.696,46.707,-8.632>, <-4,46.125,-10.04> }
		triangle { <-4,46.125,-10.04>, <-4,47.656,-10.344>, <-3.696,47.656,-8.813> }
		triangle { <3.696,47.656,-8.813>, <3.696,46.707,-8.632>, <4,46.125,-10.04> }
		triangle { <4,46.125,-10.04>, <4,47.656,-10.344>, <3.696,47.656,-8.813> }
// 
		triangle { <0,44.605,-13.72>, <0,41.988,-12.012>, <-1.531,42.204,-11.796> }
		triangle { <-1.531,42.204,-11.796>, <-1.531,44.721,-13.44>, <0,44.605,-13.72> }
		triangle { <0,44.605,-13.72>, <0,41.988,-12.012>, <1.531,42.204,-11.796> }
		triangle { <1.531,42.204,-11.796>, <1.531,44.721,-13.44>, <0,44.605,-13.72> }
// 
		triangle { <0,47.656,-6.344>, <-1.531,47.529,-6.64>, <-1.531,47.452,-6.548> }
		triangle { <0,47.656,-6.344>, <1.531,47.529,-6.64>, <1.531,47.452,-6.548> }
// 
		triangle { <-1.531,44.721,-13.44>, <-1.531,42.204,-11.796>, <-2.828,42.82,-11.18> }
		triangle { <-2.828,42.82,-11.18>, <-2.828,45.05,-12.642>, <-1.531,44.721,-13.44> }
		triangle { <1.531,44.721,-13.44>, <1.531,42.204,-11.796>, <2.828,42.82,-11.18> }
		triangle { <2.828,42.82,-11.18>, <2.828,45.05,-12.642>, <1.531,44.721,-13.44> }
// 
		triangle { <-1.531,47.529,-6.64>, <-1.531,47.452,-6.548>, <-2.828,46.836,-7.164> }
		triangle { <-2.828,46.836,-7.164>, <-2.828,47.2,-7.438>, <-1.531,47.529,-6.64> }
		triangle { <1.531,47.529,-6.64>, <1.531,47.452,-6.548>, <2.828,46.836,-7.164> }
		triangle { <2.828,46.836,-7.164>, <2.828,47.2,-7.438>, <1.531,47.529,-6.64> }
// 
		triangle { <-2.828,45.05,-12.642>, <-2.828,42.82,-11.18>, <-3.696,43.741,-10.259> }
		triangle { <-3.696,43.741,-10.259>, <-3.696,45.543,-11.448>, <-2.828,45.05,-12.642> }
		triangle { <2.828,45.05,-12.642>, <2.828,42.82,-11.18>, <3.696,43.741,-10.259> }
		triangle { <3.696,43.741,-10.259>, <3.696,45.543,-11.448>, <2.828,45.05,-12.642> }
// 
		triangle { <-2.828,47.2,-7.438>, <-2.828,46.836,-7.164>, <-3.696,45.915,-8.085> }
		triangle { <-3.696,45.915,-8.085>, <-3.696,46.707,-8.632>, <-2.828,47.2,-7.438> }
		triangle { <2.828,47.2,-7.438>, <2.828,46.836,-7.164>, <3.696,45.915,-8.085> }
		triangle { <3.696,45.915,-8.085>, <3.696,46.707,-8.632>, <2.828,47.2,-7.438> }
// 
		triangle { <-3.696,45.543,-11.448>, <-3.696,43.741,-10.259>, <-4,44.828,-9.172> }
		triangle { <-4,44.828,-9.172>, <-4,46.125,-10.04>, <-3.696,45.543,-11.448> }
		triangle { <3.696,45.543,-11.448>, <3.696,43.741,-10.259>, <4,44.828,-9.172> }
		triangle { <4,44.828,-9.172>, <4,46.125,-10.04>, <3.696,45.543,-11.448> }
// 
		triangle { <-3.696,46.707,-8.632>, <-3.696,45.915,-8.085>, <-4,44.828,-9.172> }
		triangle { <-4,44.828,-9.172>, <-4,46.125,-10.04>, <-3.696,46.707,-8.632> }
		triangle { <3.696,46.707,-8.632>, <3.696,45.915,-8.085>, <4,44.828,-9.172> }
		triangle { <4,44.828,-9.172>, <4,46.125,-10.04>, <3.696,46.707,-8.632> }
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// 
// buttstock
// 
	}
	object { _2_dash_4cyli_dot_dat matrix <4,0,0,0,28,0,0,0,4,0,47.656,-10.344> }
// 
	mesh {
		triangle { <-4,47.656,-10.344>, <-4,75.656,-10.344>, <-4,75.656,-18.344> }
		triangle { <4,47.656,-10.344>, <4,75.656,-10.344>, <4,75.656,-18.344> }
// 
		triangle { <0,47.656,-14.344>, <-1.531,47.656,-14.04>, <-1.531,75.656,-22.04> }
		triangle { <-1.531,75.656,-22.04>, <0,75.656,-22.344>, <0,47.656,-14.344> }
		triangle { <0,47.656,-14.344>, <1.531,47.656,-14.04>, <1.531,75.656,-22.04> }
		triangle { <1.531,75.656,-22.04>, <0,75.656,-22.344>, <0,47.656,-14.344> }
		triangle { <-1.531,47.656,-14.04>, <-2.828,47.656,-13.172>, <-2.828,75.656,-21.172> }
		triangle { <-2.828,75.656,-21.172>, <-1.531,75.656,-22.04>, <-1.531,47.656,-14.04> }
		triangle { <1.531,47.656,-14.04>, <2.828,47.656,-13.172>, <2.828,75.656,-21.172> }
		triangle { <2.828,75.656,-21.172>, <1.531,75.656,-22.04>, <1.531,47.656,-14.04> }
		triangle { <-2.828,47.656,-13.172>, <-3.696,47.656,-11.875>, <-3.696,75.656,-19.875> }
		triangle { <-3.696,75.656,-19.875>, <-2.828,75.656,-21.172>, <-2.828,47.656,-13.172> }
		triangle { <2.828,47.656,-13.172>, <3.696,47.656,-11.875>, <3.696,75.656,-19.875> }
		triangle { <3.696,75.656,-19.875>, <2.828,75.656,-21.172>, <2.828,47.656,-13.172> }
		triangle { <-3.696,47.656,-11.875>, <-4,47.656,-10.344>, <-4,75.656,-18.344> }
		triangle { <-4,75.656,-18.344>, <-3.696,75.656,-19.875>, <-3.696,47.656,-11.875> }
		triangle { <3.696,47.656,-11.875>, <4,47.656,-10.344>, <4,75.656,-18.344> }
		triangle { <4,75.656,-18.344>, <3.696,75.656,-19.875>, <3.696,47.656,-11.875> }
// 
// 
	}
	object { _2_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,75.656,-10.344> }
	object { _2_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,-4,0,75.656,-18.344> }
// 
	mesh {
		triangle { <-4,75.656,-10.344>, <-4,75.656,-18.344>, <4,75.656,-18.344> }
		triangle { <4,75.656,-18.344>, <4,75.656,-10.344>, <-4,75.656,-10.344> }
// 
// 
// 
// end of file
// 
// 
// end of file
	}
}
#end
#end // ifndef (_2561_dot_dat)


//// Model weapon_010_musket.ldr
#ifndef (weapon__010__musket_dot_ldr)
#declare weapon__010__musket_dot_ldr = object {
// Untitled
// Name: weapon_010_musket.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 6  20 -6 0  0 -1 0  0 0 -1  1 0 0 2561.dat
	object {
		_2561_dot_dat
		matrix <1-L3SW/12,0,0,0,1-L3SW/109.656,0,0,0,1-L3SW/34.344,0,L3SW/5.26484,L3SW/-6.64037>
		matrix <0,0,1,-1,0,0,0,-1,0,20,-6,0>
		material { L3Color6 }
	}
}
#end // ifndef (weapon__010__musket_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-55.656,-18,-6>;
#declare L3ModelBBoxMax = <54,16.344,6>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <-0.827999,-0.828,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <109.656,34.344,12>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_010_musket.ldr
object { weapon__010__musket_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            13            16
// POV Equivs:       -             9 (69%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
