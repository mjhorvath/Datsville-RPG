// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:09 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_023_pike.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_023_pike.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_023_pike.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 6 Brown (from ldconfig.ldr)
#ifndef (L3Texture6)
#declare L3Texture6 = L3TextureOpaqueRGB(88,57,39)
#end
#ifndef (L3Texture6_slope)
#declare L3Texture6_slope = L3TextureSlope(L3Texture6)
#end
#ifndef (L3Color6)
#declare L3Color6 = L3Material(L3Texture6)
#end
#ifndef (L3Color6_slope)
#declare L3Color6_slope = L3Material(L3Texture6_slope)
#end


//// Color 179 Flat_Silver (from ldconfig.ldr)
#ifndef (L3Texture179)
#declare L3Texture179 = L3TexturePearlescentRGB(137,135,136)
#end
#ifndef (L3Texture179_slope)
#declare L3Texture179_slope = L3TextureSlope(L3Texture179)
#end
#ifndef (L3Color179)
#declare L3Color179 = L3Material(L3Texture179)
#end
#ifndef (L3Color179_slope)
#declare L3Color179_slope = L3Material(L3Texture179_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4cylc.dat
#ifndef (_4_dash_4cylc_dot_dat)
#declare _4_dash_4cylc_dot_dat = union {
// Cylinder Closed 1.0
// Name: 4-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2008-12-29 [cwdee] Removed one disc
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _4_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylc_dot_dat)


//// Primitive 4-4con10.dat
#ifndef (_4_dash_4con10_dot_dat)
#declare _4_dash_4con10_dot_dat = cone { <0,0,0>, 11, <0,1,0>, 10 open }
#end // ifndef (_4_dash_4con10_dot_dat)


//// Primitive 4-4con3.dat
#ifndef (_4_dash_4con3_dot_dat)
#declare _4_dash_4con3_dot_dat = cone { <0,0,0>, 4, <0,1,0>, 3 open }
#end // ifndef (_4_dash_4con3_dot_dat)


//// Primitive 4-4cylo.dat
#ifndef (_4_dash_4cylo_dot_dat)
#declare _4_dash_4cylo_dot_dat = object {
// Cylinder Open 1.0
// Name: 4-4cylo.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylo_dot_dat)


//// Primitive t01o2500.dat
#ifndef (t01o2500_dot_dat)
#declare t01o2500_dot_dat = object {
// Torus Outside  1 x 0.2500 x 1
// Name: t01o2500.dat
// Author: Michael Heidemann [mikeheide]
// !LDRAW_ORG Primitive UPDATE 2013-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
// !HISTORY 2013-09-27 [MMR1988] Recreated to fix condlines
// !HISTORY 2013-12-23 [PTadmin] Official Update 2013-02
// Major Radius: 4
// Tube(Minor) Radius: 1
// Segments(Sweep): 16/16 = 1.00
// 1  9  0 0 0  1 0 0  0 1 0  0 0 1 4-4edge.dat
// 1  12  1 0 0 0.2500 0 0  0 0 0.2500  0 1 0  4-4edge.dat
	mesh {
		triangle { <1,0.25,0>, <0.9239,0.25,0.3827>, <1.0123,0.231,0.4193> }
		triangle { <1.0123,0.231,0.4193>, <1.0957,0.231,0>, <1,0.25,0> }
		triangle { <1.0957,0.231,0>, <1.0123,0.231,0.4193>, <1.0872,0.1768,0.4504> }
		triangle { <1.0872,0.1768,0.4504>, <1.1768,0.1768,0>, <1.0957,0.231,0> }
		triangle { <1.1768,0.1768,0>, <1.0872,0.1768,0.4504>, <1.1373,0.0957,0.4711> }
		triangle { <1.1373,0.0957,0.4711>, <1.231,0.0957,0>, <1.1768,0.1768,0> }
		triangle { <1.231,0.0957,0>, <1.1373,0.0957,0.4711>, <1.1549,0,0.4784> }
		triangle { <1.1549,0,0.4784>, <1.25,0,0>, <1.231,0.0957,0> }
		triangle { <0.9239,0.25,0.3827>, <0.7071,0.25,0.7071>, <0.7748,0.231,0.7748> }
		triangle { <0.7748,0.231,0.7748>, <1.0123,0.231,0.4193>, <0.9239,0.25,0.3827> }
		triangle { <1.0123,0.231,0.4193>, <0.7748,0.231,0.7748>, <0.8321,0.1768,0.8321> }
		triangle { <0.8321,0.1768,0.8321>, <1.0872,0.1768,0.4504>, <1.0123,0.231,0.4193> }
		triangle { <1.0872,0.1768,0.4504>, <0.8321,0.1768,0.8321>, <0.8704,0.0957,0.8704> }
		triangle { <0.8704,0.0957,0.8704>, <1.1373,0.0957,0.4711>, <1.0872,0.1768,0.4504> }
		triangle { <1.1373,0.0957,0.4711>, <0.8704,0.0957,0.8704>, <0.8839,0,0.8839> }
		triangle { <0.8839,0,0.8839>, <1.1549,0,0.4784>, <1.1373,0.0957,0.4711> }
		triangle { <0.7071,0.25,0.7071>, <0.3827,0.25,0.9239>, <0.4193,0.231,1.0123> }
		triangle { <0.4193,0.231,1.0123>, <0.7748,0.231,0.7748>, <0.7071,0.25,0.7071> }
		triangle { <0.7748,0.231,0.7748>, <0.4193,0.231,1.0123>, <0.4504,0.1768,1.0872> }
		triangle { <0.4504,0.1768,1.0872>, <0.8321,0.1768,0.8321>, <0.7748,0.231,0.7748> }
		triangle { <0.8321,0.1768,0.8321>, <0.4504,0.1768,1.0872>, <0.4711,0.0957,1.1373> }
		triangle { <0.4711,0.0957,1.1373>, <0.8704,0.0957,0.8704>, <0.8321,0.1768,0.8321> }
		triangle { <0.8704,0.0957,0.8704>, <0.4711,0.0957,1.1373>, <0.4784,0,1.1549> }
		triangle { <0.4784,0,1.1549>, <0.8839,0,0.8839>, <0.8704,0.0957,0.8704> }
		triangle { <0.3827,0.25,0.9239>, <0,0.25,1>, <0,0.231,1.0957> }
		triangle { <0,0.231,1.0957>, <0.4193,0.231,1.0123>, <0.3827,0.25,0.9239> }
		triangle { <0.4193,0.231,1.0123>, <0,0.231,1.0957>, <0,0.1768,1.1768> }
		triangle { <0,0.1768,1.1768>, <0.4504,0.1768,1.0872>, <0.4193,0.231,1.0123> }
		triangle { <0.4504,0.1768,1.0872>, <0,0.1768,1.1768>, <0,0.0957,1.231> }
		triangle { <0,0.0957,1.231>, <0.4711,0.0957,1.1373>, <0.4504,0.1768,1.0872> }
		triangle { <0.4711,0.0957,1.1373>, <0,0.0957,1.231>, <0,0,1.25> }
		triangle { <0,0,1.25>, <0.4784,0,1.1549>, <0.4711,0.0957,1.1373> }
		triangle { <0,0.25,1>, <-0.3827,0.25,0.9239>, <-0.4193,0.231,1.0123> }
		triangle { <-0.4193,0.231,1.0123>, <0,0.231,1.0957>, <0,0.25,1> }
		triangle { <0,0.231,1.0957>, <-0.4193,0.231,1.0123>, <-0.4504,0.1768,1.0872> }
		triangle { <-0.4504,0.1768,1.0872>, <0,0.1768,1.1768>, <0,0.231,1.0957> }
		triangle { <0,0.1768,1.1768>, <-0.4504,0.1768,1.0872>, <-0.4711,0.0957,1.1373> }
		triangle { <-0.4711,0.0957,1.1373>, <0,0.0957,1.231>, <0,0.1768,1.1768> }
		triangle { <0,0.0957,1.231>, <-0.4711,0.0957,1.1373>, <-0.4784,0,1.1549> }
		triangle { <-0.4784,0,1.1549>, <0,0,1.25>, <0,0.0957,1.231> }
		triangle { <-0.3827,0.25,0.9239>, <-0.7071,0.25,0.7071>, <-0.7748,0.231,0.7748> }
		triangle { <-0.7748,0.231,0.7748>, <-0.4193,0.231,1.0123>, <-0.3827,0.25,0.9239> }
		triangle { <-0.4193,0.231,1.0123>, <-0.7748,0.231,0.7748>, <-0.8321,0.1768,0.8321> }
		triangle { <-0.8321,0.1768,0.8321>, <-0.4504,0.1768,1.0872>, <-0.4193,0.231,1.0123> }
		triangle { <-0.4504,0.1768,1.0872>, <-0.8321,0.1768,0.8321>, <-0.8704,0.0957,0.8704> }
		triangle { <-0.8704,0.0957,0.8704>, <-0.4711,0.0957,1.1373>, <-0.4504,0.1768,1.0872> }
		triangle { <-0.4711,0.0957,1.1373>, <-0.8704,0.0957,0.8704>, <-0.8839,0,0.8839> }
		triangle { <-0.8839,0,0.8839>, <-0.4784,0,1.1549>, <-0.4711,0.0957,1.1373> }
		triangle { <-0.7071,0.25,0.7071>, <-0.9239,0.25,0.3827>, <-1.0123,0.231,0.4193> }
		triangle { <-1.0123,0.231,0.4193>, <-0.7748,0.231,0.7748>, <-0.7071,0.25,0.7071> }
		triangle { <-0.7748,0.231,0.7748>, <-1.0123,0.231,0.4193>, <-1.0872,0.1768,0.4504> }
		triangle { <-1.0872,0.1768,0.4504>, <-0.8321,0.1768,0.8321>, <-0.7748,0.231,0.7748> }
		triangle { <-0.8321,0.1768,0.8321>, <-1.0872,0.1768,0.4504>, <-1.1373,0.0957,0.4711> }
		triangle { <-1.1373,0.0957,0.4711>, <-0.8704,0.0957,0.8704>, <-0.8321,0.1768,0.8321> }
		triangle { <-0.8704,0.0957,0.8704>, <-1.1373,0.0957,0.4711>, <-1.1549,0,0.4784> }
		triangle { <-1.1549,0,0.4784>, <-0.8839,0,0.8839>, <-0.8704,0.0957,0.8704> }
		triangle { <-0.9239,0.25,0.3827>, <-1,0.25,0>, <-1.0957,0.231,0> }
		triangle { <-1.0957,0.231,0>, <-1.0123,0.231,0.4193>, <-0.9239,0.25,0.3827> }
		triangle { <-1.0123,0.231,0.4193>, <-1.0957,0.231,0>, <-1.1768,0.1768,0> }
		triangle { <-1.1768,0.1768,0>, <-1.0872,0.1768,0.4504>, <-1.0123,0.231,0.4193> }
		triangle { <-1.0872,0.1768,0.4504>, <-1.1768,0.1768,0>, <-1.231,0.0957,0> }
		triangle { <-1.231,0.0957,0>, <-1.1373,0.0957,0.4711>, <-1.0872,0.1768,0.4504> }
		triangle { <-1.1373,0.0957,0.4711>, <-1.231,0.0957,0>, <-1.25,0,0> }
		triangle { <-1.25,0,0>, <-1.1549,0,0.4784>, <-1.1373,0.0957,0.4711> }
		triangle { <-1,0.25,0>, <-0.9239,0.25,-0.3827>, <-1.0123,0.231,-0.4193> }
		triangle { <-1.0123,0.231,-0.4193>, <-1.0957,0.231,0>, <-1,0.25,0> }
		triangle { <-1.0957,0.231,0>, <-1.0123,0.231,-0.4193>, <-1.0872,0.1768,-0.4504> }
		triangle { <-1.0872,0.1768,-0.4504>, <-1.1768,0.1768,0>, <-1.0957,0.231,0> }
		triangle { <-1.1768,0.1768,0>, <-1.0872,0.1768,-0.4504>, <-1.1373,0.0957,-0.4711> }
		triangle { <-1.1373,0.0957,-0.4711>, <-1.231,0.0957,0>, <-1.1768,0.1768,0> }
		triangle { <-1.231,0.0957,0>, <-1.1373,0.0957,-0.4711>, <-1.1549,0,-0.4784> }
		triangle { <-1.1549,0,-0.4784>, <-1.25,0,0>, <-1.231,0.0957,0> }
		triangle { <-0.9239,0.25,-0.3827>, <-0.7071,0.25,-0.7071>, <-0.7748,0.231,-0.7748> }
		triangle { <-0.7748,0.231,-0.7748>, <-1.0123,0.231,-0.4193>, <-0.9239,0.25,-0.3827> }
		triangle { <-1.0123,0.231,-0.4193>, <-0.7748,0.231,-0.7748>, <-0.8321,0.1768,-0.8321> }
		triangle { <-0.8321,0.1768,-0.8321>, <-1.0872,0.1768,-0.4504>, <-1.0123,0.231,-0.4193> }
		triangle { <-1.0872,0.1768,-0.4504>, <-0.8321,0.1768,-0.8321>, <-0.8704,0.0957,-0.8704> }
		triangle { <-0.8704,0.0957,-0.8704>, <-1.1373,0.0957,-0.4711>, <-1.0872,0.1768,-0.4504> }
		triangle { <-1.1373,0.0957,-0.4711>, <-0.8704,0.0957,-0.8704>, <-0.8839,0,-0.8839> }
		triangle { <-0.8839,0,-0.8839>, <-1.1549,0,-0.4784>, <-1.1373,0.0957,-0.4711> }
		triangle { <-0.7071,0.25,-0.7071>, <-0.3827,0.25,-0.9239>, <-0.4193,0.231,-1.0123> }
		triangle { <-0.4193,0.231,-1.0123>, <-0.7748,0.231,-0.7748>, <-0.7071,0.25,-0.7071> }
		triangle { <-0.7748,0.231,-0.7748>, <-0.4193,0.231,-1.0123>, <-0.4504,0.1768,-1.0872> }
		triangle { <-0.4504,0.1768,-1.0872>, <-0.8321,0.1768,-0.8321>, <-0.7748,0.231,-0.7748> }
		triangle { <-0.8321,0.1768,-0.8321>, <-0.4504,0.1768,-1.0872>, <-0.4711,0.0957,-1.1373> }
		triangle { <-0.4711,0.0957,-1.1373>, <-0.8704,0.0957,-0.8704>, <-0.8321,0.1768,-0.8321> }
		triangle { <-0.8704,0.0957,-0.8704>, <-0.4711,0.0957,-1.1373>, <-0.4784,0,-1.1549> }
		triangle { <-0.4784,0,-1.1549>, <-0.8839,0,-0.8839>, <-0.8704,0.0957,-0.8704> }
		triangle { <-0.3827,0.25,-0.9239>, <0,0.25,-1>, <0,0.231,-1.0957> }
		triangle { <0,0.231,-1.0957>, <-0.4193,0.231,-1.0123>, <-0.3827,0.25,-0.9239> }
		triangle { <-0.4193,0.231,-1.0123>, <0,0.231,-1.0957>, <0,0.1768,-1.1768> }
		triangle { <0,0.1768,-1.1768>, <-0.4504,0.1768,-1.0872>, <-0.4193,0.231,-1.0123> }
		triangle { <-0.4504,0.1768,-1.0872>, <0,0.1768,-1.1768>, <0,0.0957,-1.231> }
		triangle { <0,0.0957,-1.231>, <-0.4711,0.0957,-1.1373>, <-0.4504,0.1768,-1.0872> }
		triangle { <-0.4711,0.0957,-1.1373>, <0,0.0957,-1.231>, <0,0,-1.25> }
		triangle { <0,0,-1.25>, <-0.4784,0,-1.1549>, <-0.4711,0.0957,-1.1373> }
		triangle { <0,0.25,-1>, <0.3827,0.25,-0.9239>, <0.4193,0.231,-1.0123> }
		triangle { <0.4193,0.231,-1.0123>, <0,0.231,-1.0957>, <0,0.25,-1> }
		triangle { <0,0.231,-1.0957>, <0.4193,0.231,-1.0123>, <0.4504,0.1768,-1.0872> }
		triangle { <0.4504,0.1768,-1.0872>, <0,0.1768,-1.1768>, <0,0.231,-1.0957> }
		triangle { <0,0.1768,-1.1768>, <0.4504,0.1768,-1.0872>, <0.4711,0.0957,-1.1373> }
		triangle { <0.4711,0.0957,-1.1373>, <0,0.0957,-1.231>, <0,0.1768,-1.1768> }
		triangle { <0,0.0957,-1.231>, <0.4711,0.0957,-1.1373>, <0.4784,0,-1.1549> }
		triangle { <0.4784,0,-1.1549>, <0,0,-1.25>, <0,0.0957,-1.231> }
		triangle { <0.3827,0.25,-0.9239>, <0.7071,0.25,-0.7071>, <0.7748,0.231,-0.7748> }
		triangle { <0.7748,0.231,-0.7748>, <0.4193,0.231,-1.0123>, <0.3827,0.25,-0.9239> }
		triangle { <0.4193,0.231,-1.0123>, <0.7748,0.231,-0.7748>, <0.8321,0.1768,-0.8321> }
		triangle { <0.8321,0.1768,-0.8321>, <0.4504,0.1768,-1.0872>, <0.4193,0.231,-1.0123> }
		triangle { <0.4504,0.1768,-1.0872>, <0.8321,0.1768,-0.8321>, <0.8704,0.0957,-0.8704> }
		triangle { <0.8704,0.0957,-0.8704>, <0.4711,0.0957,-1.1373>, <0.4504,0.1768,-1.0872> }
		triangle { <0.4711,0.0957,-1.1373>, <0.8704,0.0957,-0.8704>, <0.8839,0,-0.8839> }
		triangle { <0.8839,0,-0.8839>, <0.4784,0,-1.1549>, <0.4711,0.0957,-1.1373> }
		triangle { <0.7071,0.25,-0.7071>, <0.9239,0.25,-0.3827>, <1.0123,0.231,-0.4193> }
		triangle { <1.0123,0.231,-0.4193>, <0.7748,0.231,-0.7748>, <0.7071,0.25,-0.7071> }
		triangle { <0.7748,0.231,-0.7748>, <1.0123,0.231,-0.4193>, <1.0872,0.1768,-0.4504> }
		triangle { <1.0872,0.1768,-0.4504>, <0.8321,0.1768,-0.8321>, <0.7748,0.231,-0.7748> }
		triangle { <0.8321,0.1768,-0.8321>, <1.0872,0.1768,-0.4504>, <1.1373,0.0957,-0.4711> }
		triangle { <1.1373,0.0957,-0.4711>, <0.8704,0.0957,-0.8704>, <0.8321,0.1768,-0.8321> }
		triangle { <0.8704,0.0957,-0.8704>, <1.1373,0.0957,-0.4711>, <1.1549,0,-0.4784> }
		triangle { <1.1549,0,-0.4784>, <0.8839,0,-0.8839>, <0.8704,0.0957,-0.8704> }
		triangle { <0.9239,0.25,-0.3827>, <1,0.25,0>, <1.0957,0.231,0> }
		triangle { <1.0957,0.231,0>, <1.0123,0.231,-0.4193>, <0.9239,0.25,-0.3827> }
		triangle { <1.0123,0.231,-0.4193>, <1.0957,0.231,0>, <1.1768,0.1768,0> }
		triangle { <1.1768,0.1768,0>, <1.0872,0.1768,-0.4504>, <1.0123,0.231,-0.4193> }
		triangle { <1.0872,0.1768,-0.4504>, <1.1768,0.1768,0>, <1.231,0.0957,0> }
		triangle { <1.231,0.0957,0>, <1.1373,0.0957,-0.4711>, <1.0872,0.1768,-0.4504> }
		triangle { <1.1373,0.0957,-0.4711>, <1.231,0.0957,0>, <1.25,0,0> }
		triangle { <1.25,0,0>, <1.1549,0,-0.4784>, <1.1373,0.0957,-0.4711> }
// conditional lines
// Build by Primitive Generator 2
	}
}
#end // ifndef (t01o2500_dot_dat)


//// Primitive t04o5000.dat
#ifndef (t04o5000_dot_dat)
#declare t04o5000_dot_dat = torus {
	1, 5000/9999
	clipped_by {
		difference {
			box { <0,0,0>, <2,1,2> }
			cylinder { <0,0,0>, <0,1,0>, 1 open }
		}
	}
}
#end // ifndef (t04o5000_dot_dat)


//// Part s\90391s02.dat
#ifndef (s_slash_90391s02_dot_dat)
#declare s_slash_90391s02_dot_dat = #if (L3Quality = 0) box { <-6.0002,-59.7,-6.0002>, <6.0002,60,6.0002> } #else union {
// ~Minifig Pike / Spear Elaborate Shaft
// Name: s\90391s02.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2013-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2012-11-22 {LEGO Digital Designer} Original part shape
// !HISTORY 2012-11-22 [Philo] File preparation for LDraw Parts Tracker
// !HISTORY 2013-07-21 [PTadmin] Official Update 2013-01
	object { _4_dash_4cylc_dot_dat matrix <4,0,0,0,-105.7,0,0,0,4,0,60,0> }
	object { _4_dash_4con10_dot_dat matrix <0.48,0,0,0,8.1,0,0,0,0.48,0,-53.8,0> }
	object { _4_dash_4con3_dot_dat matrix <1.32,0,0,0,-0.4,0,0,0,1.32,0,-53.8,0> }
	object { _4_dash_4cylo_dot_dat matrix <3.96,0,0,0,-0.7,0,0,0,3.96,0,-54.2,0> }
	object { t01o2500_dot_dat matrix <4.8,0,0,0,-10,0,0,0,4.8,0,-57.2,0> }
	object { _4_dash_4disc_dot_dat matrix <4.8,0,0,0,1,0,0,0,4.8,0,-59.7,0> }
	object { t04o5000_dot_dat matrix <4,0,0,0,4.6,0,0,0,4,0,-57.2,0> }
	object { t04o5000_dot_dat matrix <0,0,4,0,4.6,0,-4,0,0,0,-57.2,0> }
	object { t04o5000_dot_dat matrix <-4,0,0,0,4.6,0,0,0,-4,0,-57.2,0> }
	object { t04o5000_dot_dat matrix <0,0,-4,0,4.6,0,4,0,0,0,-57.2,0> }
	object { _4_dash_4disc_dot_dat matrix <4.8,0,0,0,-1,0,0,0,4.8,0,-45.7,0> }
}
#end
#end // ifndef (s_slash_90391s02_dot_dat)


//// Part s\90391s01.dat
#ifndef (s_slash_90391s01_dot_dat)
#declare s_slash_90391s01_dot_dat = #if (L3Quality = 0) box { <0,-39.85,0>, <7.473,0,4.988> } #else object {
// ~Minifig Pike / Spear Elaborate Head Quarter
// Name: s\90391s01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2013-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2012-11-22 {LEGO Digital Designer} Original part shape
// !HISTORY 2012-11-22 [Philo] File preparation for LDraw Parts Tracker
// !HISTORY 2013-07-21 [PTadmin] Official Update 2013-01
	mesh {
		triangle { <0,-38.9,1.128>, <0,-39.488,0.875>, <0.653,-39.28,0.855> }
		triangle { <0.719,-38.756,0.983>, <0,-38.9,1.128>, <0.653,-39.28,0.855> }
		triangle { <0,-8.715,4.988>, <0,-38.9,1.128>, <0.719,-38.756,0.983> }
		triangle { <0,-8.715,4.988>, <0.719,-38.756,0.983>, <4.709,-18.991,1.312> }
		triangle { <0,-39.85,0>, <0.861,-39.576,0>, <0.653,-39.28,0.855> }
		triangle { <0.653,-39.28,0.855>, <0,-39.488,0.875>, <0,-39.85,0> }
		triangle { <4.709,-18.991,1.312>, <7.237,-8.743,1.114>, <6.569,-8.452,1.744> }
		triangle { <6.569,-8.452,1.744>, <0,-8.715,4.988>, <4.709,-18.991,1.312> }
		triangle { <7.007,-7.625,1.085>, <6.569,-8.452,1.744>, <7.237,-8.743,1.114> }
		triangle { <2.432,0,3.233>, <0,-8.715,4.988>, <6.569,-8.452,1.744> }
		triangle { <7.237,-8.743,1.114>, <4.709,-18.991,1.312>, <5.312,-18.996,0> }
		triangle { <5.312,-18.996,0>, <7.473,-8.755,0>, <7.237,-8.743,1.114> }
		triangle { <1.397,-38.921,0>, <5.312,-18.996,0>, <4.709,-18.991,1.312> }
		triangle { <1.397,-38.921,0>, <4.709,-18.991,1.312>, <0.719,-38.756,0.983> }
		triangle { <1.397,-38.921,0>, <0.719,-38.756,0.983>, <0.653,-39.28,0.855> }
		triangle { <0.861,-39.576,0>, <1.397,-38.921,0>, <0.653,-39.28,0.855> }
		triangle { <7.007,-7.625,1.085>, <7.237,-8.743,1.114>, <7.473,-8.755,0> }
		triangle { <7.473,-8.755,0>, <7.224,-7.526,0>, <7.007,-7.625,1.085> }
		triangle { <5.249,-3.253,1.466>, <4.389,0,1.574>, <2.432,0,3.233> }
		triangle { <6.569,-8.452,1.744>, <7.007,-7.625,1.085>, <5.249,-3.253,1.466> }
		triangle { <5.249,-3.253,1.466>, <2.432,0,3.233>, <6.569,-8.452,1.744> }
		triangle { <0,0,3.83>, <0,-8.715,4.988>, <2.432,0,3.233> }
		triangle { <5.566,-3.18,0>, <5.249,-3.253,1.466>, <7.007,-7.625,1.085> }
		triangle { <7.007,-7.625,1.085>, <7.224,-7.526,0>, <5.566,-3.18,0> }
		triangle { <4.743,0,0>, <4.389,0,1.574>, <5.249,-3.253,1.466> }
		triangle { <5.249,-3.253,1.466>, <5.566,-3.18,0>, <4.743,0,0> }
	}
}
#end
#end // ifndef (s_slash_90391s01_dot_dat)


//// Part 90391p02.dat
#ifndef (_90391p02_dot_dat)
#declare _90391p02_dot_dat = #if (L3Quality = 0) box { <-7.473,-99.55,-6.0002>, <7.473,60,6.0002> } #else union {
// Minifig Pike / Spear Elaborate With Flat Silver Head
// Name: 90391p02.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Part UPDATE 2013-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !HISTORY 2012-11-22 {LEGO Digital Designer} Original part shape
// !HISTORY 2012-11-22 [Philo] File preparation for LDraw Parts Tracker
// !HISTORY 2013-07-21 [PTadmin] Official Update 2013-01
	object { s_slash_90391s02_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_90391s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,-59.7,0> material { L3Color179 } }
	object { s_slash_90391s01_dot_dat matrix <-1,0,0,0,1,0,0,0,1,0,-59.7,0> material { L3Color179 } }
	object { s_slash_90391s01_dot_dat matrix <1,0,0,0,1,0,0,0,-1,0,-59.7,0> material { L3Color179 } }
	object { s_slash_90391s01_dot_dat matrix <-1,0,0,0,1,0,0,0,-1,0,-59.7,0> material { L3Color179 } }
}
#end
#end // ifndef (_90391p02_dot_dat)


//// Model weapon_023_pike.ldr
#ifndef (weapon__023__pike_dot_ldr)
#declare weapon__023__pike_dot_ldr = object {
// Untitled
// Name: weapon_023_pike.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 6  0 20 0  0 0 -1  0 1 0  1 0 0 90391p02.dat
	object {
		_90391p02_dot_dat
		matrix <1-L3SW/14.946,0,0,0,1-L3SW/159.55,0,0,0,1-L3SW/12.0004,0,L3SW/-8.06827,0>
		matrix <0,0,1,0,1,0,-1,0,0,0,20,0>
		material { L3Color6 }
	}
}
#end // ifndef (weapon__023__pike_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-6.0002,-79.55,-7.473>;
#declare L3ModelBBoxMax = <6.0002,80,7.473>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,0.224998,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <12.0004,159.55,14.946>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_023_pike.ldr
object { weapon__023__pike_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        4             9            14
// POV Equivs:       -             5 (56%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
