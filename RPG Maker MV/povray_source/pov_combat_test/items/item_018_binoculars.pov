// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sun Aug 24 11:37:05 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_018_binoculars.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_018_binoculars.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\item_018_binoculars.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 0 Black (from ldconfig.ldr)
#ifndef (L3Texture0)
#declare L3Texture0 = L3TextureOpaqueRGB(5,19,29)
#end
#ifndef (L3Texture0_slope)
#declare L3Texture0_slope = L3TextureSlope(L3Texture0)
#end
#ifndef (L3Color0)
#declare L3Color0 = L3Material(L3Texture0)
#end
#ifndef (L3Color0_slope)
#declare L3Color0_slope = L3Material(L3Texture0_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive ring3.dat
#ifndef (ring3_dot_dat)
#declare ring3_dot_dat = disc { <0,0,0>, <0,1,0>, 4, 3 }
#end // ifndef (ring3_dot_dat)


//// Primitive ring4.dat
#ifndef (ring4_dot_dat)
#declare ring4_dot_dat = disc { <0,0,0>, <0,1,0>, 5, 4 }
#end // ifndef (ring4_dot_dat)


//// Primitive 3-4cyli.dat
#ifndef (_3_dash_4cyli_dot_dat)
#declare _3_dash_4cyli_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <1,0,-1>, sqrt(1/2) } }
}
#end // ifndef (_3_dash_4cyli_dot_dat)


//// Primitive ring2.dat
#ifndef (ring2_dot_dat)
#declare ring2_dot_dat = disc { <0,0,0>, <0,1,0>, 3, 2 }
#end // ifndef (ring2_dot_dat)


//// Primitive 1-4ndis.dat
#ifndef (_1_dash_4ndis_dot_dat)
#declare _1_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <0,-1,0>, <1,1,1> } } }
#end // ifndef (_1_dash_4ndis_dot_dat)


//// Part 30162.dat
#ifndef (_30162_dot_dat)
#declare _30162_dot_dat = #if (L3Quality = 0) box { <-14.484,-8.484,-18>, <14.484,8.484,10> } #else union {
// Minifig Tool Binoculars Town
// Name: 30162.dat
// Author: Paul Easter [pneaster]
// !LDRAW_ORG Part UPDATE 2000-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !CATEGORY Minifig Accessory
// !KEYWORDS binoculars Adventurers City
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2007-06-06 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	mesh {
		triangle { <6,4,0>, <5.54,3.91,-2.3>, <5.54,3.91,-7> }
		triangle { <5.54,3.91,-7>, <6,4,-7>, <6,4,0> }
		triangle { <5.54,3.91,-7>, <5.54,3.91,-2.3>, <4.46,3.7,-3.9> }
		triangle { <4.46,3.7,-3.9>, <4.46,3.7,-7>, <5.54,3.91,-7> }
		triangle { <4.46,3.7,-7>, <4.46,3.7,-3.9>, <4.25,3.55,-4.25> }
		triangle { <4.25,3.55,-4.25>, <4.25,3.55,-7>, <4.46,3.7,-7> }
		triangle { <4.25,3.55,-7>, <4.25,3.55,-4.25>, <3.18,2.82,-4.96> }
		triangle { <3.18,2.82,-4.96>, <3.18,2.82,-7>, <4.25,3.55,-7> }
		triangle { <3.18,2.82,-7>, <3.18,2.82,-4.96>, <2.3,1.53,-5.54> }
		triangle { <2.3,1.53,-5.54>, <2.3,1.53,-7>, <3.18,2.82,-7> }
		triangle { <2.3,1.53,-7>, <2.3,1.53,-5.54>, <2,0,-5.61> }
		triangle { <2,0,-5.61>, <2,0,-7>, <2.3,1.53,-7> }
		triangle { <6,4,0>, <5.54,3.91,-2.3>, <5.54,0,-2.3> }
		triangle { <5.54,0,-2.3>, <6,0,0>, <6,4,0> }
		triangle { <5.54,3.91,-2.3>, <4.46,3.7,-3.9>, <4.46,0,-3.9> }
		triangle { <4.46,0,-3.9>, <5.54,0,-2.3>, <5.54,3.91,-2.3> }
		triangle { <4.46,3.7,-3.9>, <4.25,3.55,-4.25>, <4.25,0,-4.25> }
		triangle { <4.25,0,-4.25>, <4.46,0,-3.9>, <4.46,3.7,-3.9> }
		triangle { <4.25,3.55,-4.25>, <3.18,2.82,-4.96>, <3.18,0,-4.96> }
		triangle { <3.18,0,-4.96>, <4.25,0,-4.25>, <4.25,3.55,-4.25> }
		triangle { <3.18,2.82,-4.96>, <2.3,1.53,-5.54>, <2.3,0,-5.54> }
		triangle { <2.3,0,-5.54>, <3.18,0,-4.96>, <3.18,2.82,-4.96> }
		triangle { <2.3,1.53,-5.54>, <2,0,-5.61>, <2.3,0,-5.54> }
		triangle { <6,4,6>, <6,4,0>, <5.543,4,2.296> }
		triangle { <6,4,6>, <5.543,4,2.296>, <4.243,4,4.243> }
		triangle { <6,4,6>, <4.243,4,4.243>, <2.296,4,5.543> }
		triangle { <6,4,6>, <2.296,4,5.543>, <2,4,5.61> }
		triangle { <2,4,5.61>, <2,4,6>, <6,4,6> }
		triangle { <6,0,0>, <5.54,0,2.3>, <5.54,4,2.3> }
		triangle { <5.54,4,2.3>, <6,4,0>, <6,0,0> }
		triangle { <5.54,0,2.3>, <4.25,0,4.25>, <4.25,4,4.25> }
		triangle { <4.25,4,4.25>, <5.54,4,2.3>, <5.54,0,2.3> }
		triangle { <4.25,0,4.25>, <2.3,0,5.54>, <2.3,4,5.54> }
		triangle { <2.3,4,5.54>, <4.25,4,4.25>, <4.25,0,4.25> }
		triangle { <2.3,0,5.54>, <2,0,5.61>, <2,4,5.61> }
		triangle { <2,4,5.61>, <2.3,4,5.54>, <2.3,0,5.54> }
		triangle { <2,0,6>, <2,0,5.61>, <2,4,5.61> }
		triangle { <2,4,5.61>, <2,4,6>, <2,0,6> }
// 
		triangle { <-6,4,0>, <-5.54,3.91,-2.3>, <-5.54,3.91,-7> }
		triangle { <-5.54,3.91,-7>, <-6,4,-7>, <-6,4,0> }
		triangle { <-5.54,3.91,-7>, <-5.54,3.91,-2.3>, <-4.46,3.7,-3.9> }
		triangle { <-4.46,3.7,-3.9>, <-4.46,3.7,-7>, <-5.54,3.91,-7> }
		triangle { <-4.46,3.7,-7>, <-4.46,3.7,-3.9>, <-4.25,3.55,-4.25> }
		triangle { <-4.25,3.55,-4.25>, <-4.25,3.55,-7>, <-4.46,3.7,-7> }
		triangle { <-4.25,3.55,-7>, <-4.25,3.55,-4.25>, <-3.18,2.82,-4.96> }
		triangle { <-3.18,2.82,-4.96>, <-3.18,2.82,-7>, <-4.25,3.55,-7> }
		triangle { <-3.18,2.82,-7>, <-3.18,2.82,-4.96>, <-2.3,1.53,-5.54> }
		triangle { <-2.3,1.53,-5.54>, <-2.3,1.53,-7>, <-3.18,2.82,-7> }
		triangle { <-2.3,1.53,-7>, <-2.3,1.53,-5.54>, <-2,0,-5.61> }
		triangle { <-2,0,-5.61>, <-2,0,-7>, <-2.3,1.53,-7> }
		triangle { <-6,4,0>, <-5.54,3.91,-2.3>, <-5.54,0,-2.3> }
		triangle { <-5.54,0,-2.3>, <-6,0,0>, <-6,4,0> }
		triangle { <-5.54,3.91,-2.3>, <-4.46,3.7,-3.9>, <-4.46,0,-3.9> }
		triangle { <-4.46,0,-3.9>, <-5.54,0,-2.3>, <-5.54,3.91,-2.3> }
		triangle { <-4.46,3.7,-3.9>, <-4.25,3.55,-4.25>, <-4.25,0,-4.25> }
		triangle { <-4.25,0,-4.25>, <-4.46,0,-3.9>, <-4.46,3.7,-3.9> }
		triangle { <-4.25,3.55,-4.25>, <-3.18,2.82,-4.96>, <-3.18,0,-4.96> }
		triangle { <-3.18,0,-4.96>, <-4.25,0,-4.25>, <-4.25,3.55,-4.25> }
		triangle { <-3.18,2.82,-4.96>, <-2.3,1.53,-5.54>, <-2.3,0,-5.54> }
		triangle { <-2.3,0,-5.54>, <-3.18,0,-4.96>, <-3.18,2.82,-4.96> }
		triangle { <-2.3,1.53,-5.54>, <-2,0,-5.61>, <-2.3,0,-5.54> }
		triangle { <-6,4,6>, <-6,4,0>, <-5.543,4,2.296> }
		triangle { <-6,4,6>, <-5.543,4,2.296>, <-4.243,4,4.243> }
		triangle { <-6,4,6>, <-4.243,4,4.243>, <-2.296,4,5.543> }
		triangle { <-6,4,6>, <-2.296,4,5.543>, <-2,4,5.61> }
		triangle { <-2,4,5.61>, <-2,4,6>, <-6,4,6> }
		triangle { <-6,0,0>, <-5.54,0,2.3>, <-5.54,4,2.3> }
		triangle { <-5.54,4,2.3>, <-6,4,0>, <-6,0,0> }
		triangle { <-5.54,0,2.3>, <-4.25,0,4.25>, <-4.25,4,4.25> }
		triangle { <-4.25,4,4.25>, <-5.54,4,2.3>, <-5.54,0,2.3> }
		triangle { <-4.25,0,4.25>, <-2.3,0,5.54>, <-2.3,4,5.54> }
		triangle { <-2.3,4,5.54>, <-4.25,4,4.25>, <-4.25,0,4.25> }
		triangle { <-2.3,0,5.54>, <-2,0,5.61>, <-2,4,5.61> }
		triangle { <-2,4,5.61>, <-2.3,4,5.54>, <-2.3,0,5.54> }
		triangle { <-2,0,6>, <-2,0,5.61>, <-2,4,5.61> }
		triangle { <-2,4,5.61>, <-2,4,6>, <-2,0,6> }
// 
// 
	}
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,0,4,0,4,0,-6,0,8> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,0,4,0,4,0,6,0,8> }
// 
	mesh {
		triangle { <-6,4,8>, <6,4,8>, <6,-4,8> }
		triangle { <6,-4,8>, <-6,-4,8>, <-6,4,8> }
		triangle { <-2,4,6>, <2,4,6>, <6,-4,6> }
		triangle { <6,-4,6>, <-6,-4,6>, <-2,4,6> }
		triangle { <-6,4,8>, <-6,4,6>, <6,4,6> }
		triangle { <6,4,6>, <6,4,8>, <-6,4,8> }
		triangle { <-6,-4,8>, <-6,-4,6>, <6,-4,6> }
		triangle { <6,-4,6>, <6,-4,8>, <-6,-4,8> }
		triangle { <-6,-4,-7>, <-6,-4,-10>, <6,-4,-10> }
		triangle { <6,-4,-10>, <6,-4,-7>, <-6,-4,-7> }
		triangle { <-6,4,-7>, <-6,4,-10>, <6,4,-10> }
		triangle { <6,4,-10>, <6,4,-7>, <-6,4,-7> }
		triangle { <-6,4,-7>, <-6,-4,-7>, <6,-4,-7> }
		triangle { <6,-4,-7>, <6,4,-7>, <-6,4,-7> }
		triangle { <-6,4,-10>, <-6,-4,-10>, <6,-4,-10> }
		triangle { <6,-4,-10>, <6,4,-10>, <-6,4,-10> }
// 
		triangle { <2,0,6>, <6,0,6>, <6,0,-6> }
		triangle { <6,0,-6>, <2,0,-6>, <2,0,6> }
		triangle { <-2,0,6>, <-6,0,6>, <-6,0,-6> }
		triangle { <-6,0,-6>, <-2,0,-6>, <-2,0,6> }
// 
	}
	object { _1_dash_4cyli_dot_dat matrix <-4,0,0,0,0,13,0,-4,0,6,0,-7> }
	object { _1_dash_4cyli_dot_dat matrix <4,0,0,0,0,13,0,-4,0,-6,0,-7> }
	object { _2_dash_4cyli_dot_dat matrix <0,-3.999,0,0,0,18,3.999,0,0,6,0,-10> }
	object { _2_dash_4cyli_dot_dat matrix <0,-4,0,0,0,18,-4,0,0,-6,0,-10> }
// 
	object { _4_dash_4cyli_dot_dat matrix <3,0,0,0,0,1,0,3,0,6,0,8> }
	object { _4_dash_4cyli_dot_dat matrix <3,0,0,0,0,1,0,3,0,-6,0,8> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,0,1,0,4,0,6,0,9> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,0,1,0,4,0,-6,0,9> }
	object { _4_dash_4cyli_dot_dat matrix <2.5,0,0,0,0,2,0,2.5,0,6,0,8> }
	object { _4_dash_4cyli_dot_dat matrix <2.5,0,0,0,0,2,0,2.5,0,-6,0,8> }
	object { ring3_dot_dat matrix <1,0,0,0,0,1,0,1,0,6,0,10> }
	object { ring4_dot_dat matrix <0.625,0,0,0,0,0.625,0,0.625,0,6,0,10> }
	object { ring3_dot_dat matrix <1,0,0,0,0,1,0,1,0,6,0,9> }
	object { ring3_dot_dat matrix <1,0,0,0,0,1,0,1,0,-6,0,10> }
	object { ring4_dot_dat matrix <0.625,0,0,0,0,0.625,0,0.625,0,-6,0,10> }
	object { ring3_dot_dat matrix <1,0,0,0,0,1,0,1,0,-6,0,9> }
// 
	object { _3_dash_4cyli_dot_dat matrix <4.242,4.242,0,0,0,8,-4.242,4.242,0,-6,0,-18> }
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,0,6,0,6,0,-6,0,-10> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,0,6,0,4,0,-6,0,-18> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,0,4,0,4,0,-6,0,-12> }
	object { ring2_dot_dat matrix <2,0,0,0,0,2,0,2,0,-6,0,-18> }
// 
	object { _3_dash_4cyli_dot_dat matrix <-4.242,4.242,0,0,0,8,4.242,4.242,0,6,0,-18> }
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,0,6,0,6,0,6,0,-10> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,0,6,0,4,0,6,0,-18> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,0,4,0,4,0,6,0,-12> }
	object { ring2_dot_dat matrix <2,0,0,0,0,2,0,2,0,6,0,-18> }
// 
	object { _1_dash_4cyli_dot_dat matrix <1.75,1.75,0,0,0,8,-1.75,1.75,0,0,-6,-18> }
	object { _1_dash_4ndis_dot_dat matrix <1.75,1.75,0,0,0,8,-1.75,1.75,0,0,-6,-18> }
	object { _1_dash_4ndis_dot_dat matrix <1.75,1.75,0,0,0,8,-1.75,1.75,0,0,-6,-10> }
	mesh {
		triangle { <-1.758,4.242,-18>, <-1.758,-4.242,-18>, <0,-2.5,-18> }
		triangle { <0,-2.5,-18>, <0,2.5,-18>, <-1.758,4.242,-18> }
		triangle { <-1.758,4.242,-10>, <-1.758,-4.242,-10>, <0,-2.5,-10> }
		triangle { <0,-2.5,-10>, <0,2.5,-10>, <-1.758,4.242,-10> }
	}
	object { _1_dash_4cyli_dot_dat matrix <1.75,-1.75,0,0,0,8,-1.75,-1.75,0,0,6,-18> }
	object { _1_dash_4ndis_dot_dat matrix <1.75,-1.75,0,0,0,8,-1.75,-1.75,0,0,6,-18> }
	object { _1_dash_4ndis_dot_dat matrix <1.75,-1.75,0,0,0,8,-1.75,-1.75,0,0,6,-10> }
	mesh {
		triangle { <1.758,4.242,-18>, <1.758,-4.242,-18>, <0,-2.5,-18> }
		triangle { <0,-2.5,-18>, <0,2.5,-18>, <1.758,4.242,-18> }
		triangle { <1.758,4.242,-10>, <1.758,-4.242,-10>, <0,-2.5,-10> }
		triangle { <0,-2.5,-10>, <0,2.5,-10>, <1.758,4.242,-10> }
	}
}
#end
#end // ifndef (_30162_dot_dat)


//// Model item_018_binoculars.ldr
#ifndef (item__018__binoculars_dot_ldr)
#declare item__018__binoculars_dot_ldr = object {
// Untitled
// Name: item_018_binoculars.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 0  -2 3 -1  -0.707107 0.5 -0.5  0 0.707107 0.707107  0.707107 0.5 -0.5 30162.dat
	object {
		_30162_dot_dat
		matrix <1-L3SW/28.968,0,0,0,1-L3SW/16.968,0,0,0,1-L3SW/28,0,0,L3SW/-7>
		matrix <-0.707107,0,0.707107,0.5,0.707107,0.5,-0.5,0.707107,-0.5,-2,3,-1>
		material { L3Color0 }
	}
}
#end // ifndef (item__018__binoculars_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-21.4837,-15.727,-20.4837>;
#declare L3ModelBBoxMax = <21.4837,16.0702,22.4837>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,0.171572,1>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <42.9675,31.7972,42.9675>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject item_018_binoculars.ldr
object { item__018__binoculars_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            13            16
// POV Equivs:       -             9 (69%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
