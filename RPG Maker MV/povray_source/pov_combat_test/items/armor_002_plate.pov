// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Sat Aug 23 20:53:39 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\armor_002_plate.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\armor_002_plate.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\armor_002_plate.pov" -o -ic -il -ibitems.inc -iearmor_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Primitive 1-4disc.dat
#ifndef (_1_dash_4disc_dot_dat)
#declare _1_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { plane { -x, 0 } plane { -z, 0 } } }
#end // ifndef (_1_dash_4disc_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4cyls.dat
#ifndef (_1_dash_4cyls_dot_dat)
#declare _1_dash_4cyls_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-1,0,-1>,-sqrt(1/2) } plane { <1,1,0>,sqrt(1/2) } }
}
#end // ifndef (_1_dash_4cyls_dot_dat)


//// Primitive 2-4ndis.dat
#ifndef (_2_dash_4ndis_dot_dat)
#declare _2_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <-1,-1,0>, <1,1,1> } } }
#end // ifndef (_2_dash_4ndis_dot_dat)


//// Primitive 4-4ndis.dat
#ifndef (_4_dash_4ndis_dot_dat)
#declare _4_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <-1,-1,-1>, <1,1,1> } } }
#end // ifndef (_4_dash_4ndis_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 1-8sphe.dat
#ifndef (_1_dash_8sphe_dot_dat)
#declare _1_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <0,0,0>, <2,2,2> } } }
#end // ifndef (_1_dash_8sphe_dot_dat)


//// Primitive 2-4disc.dat
#ifndef (_2_dash_4disc_dot_dat)
#declare _2_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { box { <-2,-1,0>, <2,1,2> } } }
#end // ifndef (_2_dash_4disc_dot_dat)


//// Primitive 2-8sphe.dat
#ifndef (_2_dash_8sphe_dot_dat)
#declare _2_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <-1,0,0>, <2,2,2> } } }
#end // ifndef (_2_dash_8sphe_dot_dat)


//// Primitive 1-4ring5.dat
#ifndef (_1_dash_4ring5_dot_dat)
#declare _1_dash_4ring5_dot_dat = disc {
	<0,0,0>, <0,1,0>, 6, 5
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring5_dot_dat)


//// Part s\2587s01.dat
#ifndef (s_slash_2587s01_dot_dat)
#declare s_slash_2587s01_dot_dat = #if (L3Quality = 0) box { <-21.2242,-4,-22.5>, <21.2242,33.375,14> } #else union {
// ~Minifig Armour Plate without Front
// Name: s\2587s01.dat
// Author: Bernd Broich [bbroich]
// !LDRAW_ORG Subpart UPDATE 2009-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2009-12-08 [Philo] Subparted for patterned parts
// !HISTORY 2009-12-29 [PTadmin] Official Update 2009-03
// Inner Back Plane
	object { _1_dash_4disc_dot_dat matrix <-3,0,0,0,0,1,0,3,0,-16,29,10> }
	object { _1_dash_4cyli_dot_dat matrix <-3,0,0,0,0,1.5,0,3,0,-16,29,10> }
	object { _1_dash_4cyls_dot_dat matrix <0,3,0,0,0,0.567,-3,0,0,-16,29,11.5> }
	object { _1_dash_4disc_dot_dat matrix <3,0,0,0,0,1,0,3,0,16,29,10> }
	object { _1_dash_4cyli_dot_dat matrix <3,0,0,0,0,1.5,0,3,0,16,29,10> }
	object { _1_dash_4cyls_dot_dat matrix <0,3,0,0,0,0.567,3,0,0,16,29,11.5> }
	mesh {
		triangle { <-16,32,10>, <-16,32,11.5>, <16,32,11.5> }
		triangle { <16,32,11.5>, <16,32,10>, <-16,32,10> }
		triangle { <-19,29,10>, <-15.379,8,10>, <-15.379,8,12> }
		triangle { <-15.379,8,12>, <-19,29,12.07>, <-19,29,10> }
		triangle { <16,29,10>, <-16,29,10>, <-16,32,10> }
		triangle { <-16,32,10>, <16,32,10>, <16,29,10> }
		triangle { <19,29,10>, <14,0,10>, <-14,0,10> }
		triangle { <-14,0,10>, <-19,29,10>, <19,29,10> }
		triangle { <19,29,10>, <19,29,12.07>, <15.379,8,12> }
		triangle { <15.379,8,12>, <15.379,8,10>, <19,29,10> }
// Outer Back Plane
	}
	object { _1_dash_4disc_dot_dat matrix <-3,0,0,0,-0.1888,-0.982,0,3,-0.5665,-16,29,12.067> }
	object { _1_dash_4disc_dot_dat matrix <3,0,0,0,-0.1888,-0.982,0,3,-0.5665,16,29,12.067> }
	mesh {
		triangle { <-11.7,11,14>, <-14,19,14>, <-13.48,-3,12> }
		triangle { <-13.48,-3,12>, <-14,19,14>, <-19,29,12.07> }
		triangle { <-11.7,11,14>, <-13.483,-3,12>, <13.483,-3,12> }
		triangle { <13.483,-3,12>, <11.7,11,14>, <-11.7,11,14> }
		triangle { <-14,19,14>, <-11.7,11,14>, <11.7,11,14> }
		triangle { <11.7,11,14>, <14,19,14>, <-14,19,14> }
		triangle { <11.7,11,14>, <13.48,-3,12>, <14,19,14> }
		triangle { <13.48,-3,12>, <19,29,12.07>, <14,19,14> }
		triangle { <14,19,14>, <19,29,12.067>, <-19,29,12.067> }
		triangle { <-19,29,12.067>, <-14,19,14>, <14,19,14> }
		triangle { <16,32,11.5>, <-16,32,11.5>, <-16,29,12.067> }
		triangle { <-16,29,12.067>, <16,29,12.067>, <16,32,11.5> }
// Top
	}
	object { _2_dash_4ndis_dot_dat matrix <0,0,12,0,1,0,1,0,0,-13.483,-3,0> }
	object { _4_dash_4ndis_dot_dat matrix <6,0,0,0,1,0,0,0,-6,0,-3,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,3,0,0,0,-6,0,-3,0> }
	object { _4_dash_4ndis_dot_dat matrix <6,0,0,0,-1,0,0,0,-6,0,0,0> }
	object { _2_dash_4ndis_dot_dat matrix <0,0,12,0,1,0,-1,0,0,13.483,-3,0> }
	mesh {
		triangle { <13.483,-3,-12>, <-13.483,-3,-12>, <0,-3,-15> }
		triangle { <-14,0,-10>, <-6,0,-6>, <6,0,-6> }
		triangle { <6,0,-6>, <14,0,-10>, <-14,0,-10> }
		triangle { <-14,0,10>, <-6,0,6>, <-6,0,-6> }
		triangle { <-6,0,-6>, <-14,0,-10>, <-14,0,10> }
		triangle { <-14,0,10>, <14,0,10>, <6,0,6> }
		triangle { <6,0,6>, <-6,0,6>, <-14,0,10> }
		triangle { <-6,-3,6>, <-12.483,-3,12>, <-12.483,-3,-12> }
		triangle { <-12.483,-3,-12>, <-6,-3,-6>, <-6,-3,6> }
		triangle { <14,0,10>, <14,0,-10>, <6,0,-6> }
		triangle { <6,0,-6>, <6,0,6>, <14,0,10> }
		triangle { <6,-3,-6>, <-6,-3,-6>, <-12.483,-3,-12> }
		triangle { <-12.483,-3,-12>, <12.483,-3,-12>, <6,-3,-6> }
		triangle { <6,-3,6>, <12.483,-3,12>, <-12.483,-3,12> }
		triangle { <-12.483,-3,12>, <-6,-3,6>, <6,-3,6> }
		triangle { <6,-3,6>, <6,-3,-6>, <12.483,-3,-12> }
		triangle { <12.483,-3,-12>, <12.483,-3,12>, <6,-3,6> }
// Outer Front Lines
// Inner Front
		triangle { <-2.121,27.44,-17.793>, <-6.9,23.3,-12.3>, <-1.148,27.114,-17.576> }
		triangle { <-3.272,27.926,-18.117>, <-6.9,23.3,-12.3>, <-2.121,27.43,-17.793> }
		triangle { <-5.3,33,-20.741>, <-6.9,23.3,-12.3>, <-3.272,27.926,-18.117> }
		triangle { <-6.5,33.375,-21>, <-6.9,23.3,-12.3>, <-5.3,33,-20.741> }
		triangle { <-6.5,33.375,-21>, <-9.5,33,-20>, <-6.9,23.3,-12.3> }
		triangle { <2.121,27.44,-17.793>, <1.148,27.114,-17.576>, <6.9,23.3,-12.3> }
		triangle { <3.272,27.926,-18.117>, <2.121,27.43,-17.793>, <6.9,23.3,-12.3> }
		triangle { <5.3,33,-20.741>, <3.272,27.926,-18.117>, <6.9,23.3,-12.3> }
		triangle { <6.5,33.375,-21>, <5.3,33,-20.741>, <6.9,23.3,-12.3> }
		triangle { <6.5,33.375,-21>, <6.9,23.3,-12.3>, <9.5,33,-20> }
		triangle { <-1.148,26.114,-19.076>, <-1.148,27.114,-17.576>, <0,27,-17.5> }
		triangle { <0,27,-17.5>, <0,26,-19>, <-1.148,26.114,-19.076> }
		triangle { <-1.148,27.114,-17.576>, <-6.9,23.3,-12.3>, <0,23.5,-13> }
		triangle { <0,23.5,-13>, <0,27,-17.5>, <-1.148,27.114,-17.576> }
		triangle { <-12.2,0,-10>, <-6.9,0,-10>, <-12.2,22.7,-11.3> }
		triangle { <-6.9,0,-10>, <-6.9,23.3,-12.3>, <-12.2,22.7,-11.3> }
		triangle { <-12.2,22.7,-11.3>, <-6.9,23.3,-12.3>, <-14,32,-17.5> }
		triangle { <-6.9,23.3,-12.3>, <-9.5,33,-20>, <-14,32,-17.5> }
		triangle { <-14,0,-10>, <-12.2,0,-10>, <-12.2,22.7,-11.3> }
		triangle { <-14,0,-10>, <-12.2,22.7,-11.3>, <-17.71,22,-10> }
		triangle { <-14,31,-19>, <-9.5,33,-20>, <-9,32,-21.5> }
		triangle { <-14,31,-19>, <-14,32,-17.5>, <-9.5,33,-20> }
		triangle { <-17.71,21.5,-12>, <-15.38,8,-12>, <-15.38,8,-10> }
		triangle { <-17.71,21.5,-12>, <-15.38,8,-10>, <-17.707,22,-10> }
		triangle { <-17.71,22,-10>, <-12.2,22.7,-11.3>, <-19.18,30.06,-13.4> }
		triangle { <-12.2,22.7,-11.3>, <-14,32,-17.5>, <-19.18,30.06,-13.4> }
		triangle { <-19,29,-15>, <-14,32,-17.5>, <-14,31,-19> }
		triangle { <-19,29,-15>, <-19.18,30.06,-13.4>, <-14,32,-17.5> }
		triangle { <-19,29,-15>, <-17.71,21.5,-12>, <-17.707,22,-10> }
		triangle { <-19,29,-15>, <-17.707,22,-10>, <-19.18,30.06,-13.4> }
		triangle { <-2.121,26.44,-19.293>, <-2.121,27.44,-17.793>, <-1.148,27.114,-17.576> }
		triangle { <-1.148,27.114,-17.576>, <-1.148,26.114,-19.076>, <-2.121,26.44,-19.293> }
		triangle { <-2.772,26.93,-19.62>, <-2.121,27.43,-17.79>, <-2.121,26.43,-19.29> }
		triangle { <-2.772,26.93,-19.62>, <-3.272,27.93,-18.12>, <-2.121,27.43,-17.79> }
		triangle { <-4.8,32,-22.241>, <-5.3,33,-20.741>, <-3.272,27.926,-18.117> }
		triangle { <-3.272,27.926,-18.117>, <-2.772,26.926,-19.617>, <-4.8,32,-22.241> }
		triangle { <-6,32.375,-22.5>, <-6.5,33.375,-21>, <-5.3,33,-20.741> }
		triangle { <-5.3,33,-20.741>, <-4.8,32,-22.241>, <-6,32.375,-22.5> }
		triangle { <-6,32.375,-22.5>, <-9,32,-21.5>, <-9.5,33,-20> }
		triangle { <-9.5,33,-20>, <-6.5,33.375,-21>, <-6,32.375,-22.5> }
		triangle { <-6.9,0,-10>, <0,0,-10>, <-6.9,23.3,-12.3> }
		triangle { <0,0,-10>, <0,23.5,-13>, <-6.9,23.3,-12.3> }
		triangle { <1.148,26.114,-19.076>, <0,26,-19>, <0,27,-17.5> }
		triangle { <0,27,-17.5>, <1.148,27.114,-17.576>, <1.148,26.114,-19.076> }
		triangle { <1.148,27.114,-17.576>, <0,27,-17.5>, <0,23.5,-13> }
		triangle { <0,23.5,-13>, <6.9,23.3,-12.3>, <1.148,27.114,-17.576> }
		triangle { <12.2,0,-10>, <12.2,22.7,-11.3>, <6.9,0,-10> }
		triangle { <6.9,0,-10>, <12.2,22.7,-11.3>, <6.9,23.3,-12.3> }
		triangle { <12.2,22.7,-11.3>, <14,32,-17.5>, <6.9,23.3,-12.3> }
		triangle { <6.9,23.3,-12.3>, <14,32,-17.5>, <9.5,33,-20> }
		triangle { <14,0,-10>, <12.2,22.7,-11.3>, <12.2,0,-10> }
		triangle { <14,0,-10>, <17.71,22,-10>, <12.2,22.7,-11.3> }
		triangle { <14,31,-19>, <9,32,-21.5>, <9.5,33,-20> }
		triangle { <14,31,-19>, <9.5,33,-20>, <14,32,-17.5> }
		triangle { <17.71,21.5,-12>, <15.38,8,-10>, <15.38,8,-12> }
		triangle { <17.71,22,-10>, <19.18,30.06,-13.4>, <12.2,22.7,-11.3> }
		triangle { <12.2,22.7,-11.3>, <19.18,30.06,-13.4>, <14,32,-17.5> }
		triangle { <19,29,-15>, <14,31,-19>, <14,32,-17.5> }
		triangle { <19,29,-15>, <14,32,-17.5>, <19.18,30.06,-13.4> }
		triangle { <2.121,26.44,-19.293>, <1.148,26.114,-19.076>, <1.148,27.114,-17.576> }
		triangle { <1.148,27.114,-17.576>, <2.121,27.44,-17.793>, <2.121,26.44,-19.293> }
		triangle { <2.772,26.93,-19.62>, <2.121,26.43,-19.29>, <2.121,27.43,-17.79> }
		triangle { <2.772,26.93,-19.62>, <2.121,27.43,-17.79>, <3.272,27.93,-18.12> }
		triangle { <4.8,32,-22.241>, <2.772,26.926,-19.617>, <3.272,27.926,-18.117> }
		triangle { <3.272,27.926,-18.117>, <5.3,33,-20.741>, <4.8,32,-22.241> }
		triangle { <6,32.375,-22.5>, <4.8,32,-22.241>, <5.3,33,-20.741> }
		triangle { <5.3,33,-20.741>, <6.5,33.375,-21>, <6,32.375,-22.5> }
		triangle { <6,32.375,-22.5>, <6.5,33.375,-21>, <9.5,33,-20> }
		triangle { <9.5,33,-20>, <9,32,-21.5>, <6,32.375,-22.5> }
		triangle { <6.9,0,-10>, <6.9,23.3,-12.3>, <0,0,-10> }
		triangle { <0,0,-10>, <6.9,23.3,-12.3>, <0,23.5,-13> }
// Left Shoulder
	}
	object { _1_dash_8sphe_dot_dat matrix <0,0,-12,0,-1,0,-1,0,0,13.483,-3,0> }
	object { _1_dash_8sphe_dot_dat matrix <0,0,12,0,-1,0,-1,0,0,13.483,-3,0> }
	object { _2_dash_4disc_dot_dat matrix <0,0,12,0,1.2,0,7.7412,2.6,0,13.483,-3,0> }
	object { _2_dash_4disc_dot_dat matrix <0,0,12,-1,0,0,0,-1,0,13.483,-3,0> }
	object { _2_dash_4disc_dot_dat matrix <0.948,5.5,0,1,0,0,0,0,-1,14.431,2.5,-12> }
	object { _2_dash_8sphe_dot_dat matrix <0.948,5.5,0,1,0,0.304,0,0,-1,14.431,2.5,-12> }
	object { _2_dash_8sphe_dot_dat matrix <0.948,5.5,0,1,0,-0.304,0,0,1,14.431,2.5,12> }
	object { _2_dash_4disc_dot_dat matrix <0.948,5.5,0,1,0,0,0,0,1,14.431,2.5,12> }
	object { _1_dash_4ring5_dot_dat matrix <0,0,-2,0,-0.2,0,0.9742,-1.4,0,15.379,8,0> }
	object { _1_dash_4ring5_dot_dat matrix <0,0,2,0,-0.2,0,0.9742,-1.4,0,15.379,8,0> }
	mesh {
		triangle { <14,0,10>, <20.25,1,0>, <14,0,-10> }
		triangle { <15.379,8,-10>, <14,0,-10>, <17.2431,5.3211,-9.239> }
		triangle { <15.379,8,10>, <17.2431,5.3211,9.239>, <14,0,10> }
		triangle { <17.2431,5.3211,-9.239>, <14,0,-10>, <18.823,3.05,-7.071> }
		triangle { <17.2431,5.3211,9.239>, <18.823,3.05,7.071>, <14,0,10> }
		triangle { <18.823,3.05,-7.071>, <14,0,-10>, <19.879,1.5327,-3.827> }
		triangle { <18.823,3.05,7.071>, <19.879,1.5327,3.827>, <14,0,10> }
		triangle { <19.879,1.5327,-3.827>, <14,0,-10>, <20.25,1,0> }
		triangle { <19.879,1.5327,3.827>, <20.25,1,0>, <14,0,10> }
		triangle { <20.779,0.239,-4.592>, <21.224,-0.4,0>, <20.635,-0.598,-4.592> }
		triangle { <20.779,0.239,4.592>, <20.635,-0.598,4.592>, <21.224,-0.4,0> }
		triangle { <15.379,8,-12>, <17.616,4.785,-11.087>, <16.446,-2.005,-11.087> }
		triangle { <16.446,-2.005,-11.087>, <13.483,-3,-12>, <15.379,8,-12> }
		triangle { <15.379,8,12>, <13.483,-3,12>, <16.446,-2.005,11.087> }
		triangle { <16.446,-2.005,11.087>, <17.616,4.785,11.087>, <15.379,8,12> }
		triangle { <17.616,4.785,-11.087>, <19.512,2.06,-8.485>, <18.957,-1.162,-8.485> }
		triangle { <18.957,-1.162,-8.485>, <16.446,-2.005,-11.087>, <17.616,4.785,-11.087> }
		triangle { <17.616,4.785,11.087>, <16.446,-2.005,11.087>, <18.957,-1.162,8.485> }
		triangle { <18.957,-1.162,8.485>, <19.512,2.06,8.485>, <17.616,4.785,11.087> }
		triangle { <19.512,2.06,-8.485>, <20.779,0.239,-4.592>, <20.635,-0.598,-4.592> }
		triangle { <20.635,-0.598,-4.592>, <18.957,-1.162,-8.485>, <19.512,2.06,-8.485> }
		triangle { <19.512,2.06,8.485>, <18.957,-1.162,8.485>, <20.635,-0.598,4.592> }
		triangle { <20.635,-0.598,4.592>, <20.779,0.239,4.592>, <19.512,2.06,8.485> }
// Right Shoulder
	}
	object { _2_dash_4disc_dot_dat matrix <0,0,12,1,0,0,0,-1,0,-13.483,-3,0> }
	object { _2_dash_4disc_dot_dat matrix <0,0,12,0,1.2,0,-7.7412,2.6,0,-13.483,-3,0> }
	object { _1_dash_8sphe_dot_dat matrix <0,0,-12,0,-1,0,1,0,0,-13.483,-3,0> }
	object { _1_dash_8sphe_dot_dat matrix <0,0,12,0,-1,0,1,0,0,-13.483,-3,0> }
	object { _2_dash_4disc_dot_dat matrix <-0.948,5.5,0,-1,0,0,0,0,-1,-14.431,2.5,-12> }
	object { _2_dash_8sphe_dot_dat matrix <-0.948,5.5,0,-1,0,0.304,0,0,-1,-14.431,2.5,-12> }
	object { _2_dash_8sphe_dot_dat matrix <-0.948,5.5,0,-1,0,-0.304,0,0,1,-14.431,2.5,12> }
	object { _2_dash_4disc_dot_dat matrix <-0.948,5.5,0,-1,0,0,0,0,1,-14.431,2.5,12> }
	object { _1_dash_4ring5_dot_dat matrix <0,0,-2,0,-0.2,0,-0.9742,-1.4,0,-15.379,8,0> }
	object { _1_dash_4ring5_dot_dat matrix <0,0,2,0,-0.2,0,-0.9742,-1.4,0,-15.379,8,0> }
	mesh {
		triangle { <-14,0,10>, <-14,0,-10>, <-20.25,1,0> }
		triangle { <-15.379,8,-10>, <-17.2431,5.3211,-9.239>, <-14,0,-10> }
		triangle { <-15.379,8,10>, <-14,0,10>, <-17.2431,5.3211,9.239> }
		triangle { <-17.2431,5.3211,-9.239>, <-18.823,3.05,-7.071>, <-14,0,-10> }
		triangle { <-17.2431,5.3211,9.239>, <-14,0,10>, <-18.823,3.05,7.071> }
		triangle { <-18.823,3.05,-7.071>, <-19.879,1.5327,-3.827>, <-14,0,-10> }
		triangle { <-18.823,3.05,7.071>, <-14,0,10>, <-19.879,1.5327,3.827> }
		triangle { <-19.879,1.5327,-3.827>, <-20.25,1,0>, <-14,0,-10> }
		triangle { <-19.879,1.5327,3.827>, <-14,0,10>, <-20.25,1,0> }
		triangle { <-20.779,0.239,-4.592>, <-20.635,-0.598,-4.592>, <-21.224,-0.4,0> }
		triangle { <-20.779,0.239,4.592>, <-21.224,-0.4,0>, <-20.635,-0.598,4.592> }
		triangle { <-15.379,8,-12>, <-13.483,-3,-12>, <-16.446,-2.005,-11.087> }
		triangle { <-16.446,-2.005,-11.087>, <-17.616,4.785,-11.087>, <-15.379,8,-12> }
		triangle { <-15.379,8,12>, <-17.616,4.785,11.087>, <-16.446,-2.005,11.087> }
		triangle { <-16.446,-2.005,11.087>, <-13.483,-3,12>, <-15.379,8,12> }
		triangle { <-17.616,4.785,-11.087>, <-16.446,-2.005,-11.087>, <-18.957,-1.162,-8.485> }
		triangle { <-18.957,-1.162,-8.485>, <-19.512,2.06,-8.485>, <-17.616,4.785,-11.087> }
		triangle { <-17.616,4.785,11.087>, <-19.512,2.06,8.485>, <-18.957,-1.162,8.485> }
		triangle { <-18.957,-1.162,8.485>, <-16.446,-2.005,11.087>, <-17.616,4.785,11.087> }
		triangle { <-19.512,2.06,-8.485>, <-18.957,-1.162,-8.485>, <-20.635,-0.598,-4.592> }
		triangle { <-20.635,-0.598,-4.592>, <-20.779,0.239,-4.592>, <-19.512,2.06,-8.485> }
		triangle { <-19.512,2.06,8.485>, <-20.779,0.239,4.592>, <-20.635,-0.598,4.592> }
		triangle { <-20.635,-0.598,4.592>, <-18.957,-1.162,8.485>, <-19.512,2.06,8.485> }
		triangle { <17.71,21.5,-12>, <17.707,22,-10>, <15.38,8,-10> }
		triangle { <19,29,-15>, <17.707,22,-10>, <17.71,21.5,-12> }
		triangle { <19,29,-15>, <19.18,30.06,-13.4>, <17.707,22,-10> }
	}
}
#end
#end // ifndef (s_slash_2587s01_dot_dat)


//// Part 2587.dat
#ifndef (_2587_dot_dat)
#declare _2587_dot_dat = #if (L3Quality = 0) box { <-21.2242,-4,-22.5>, <21.2242,33.375,14> } #else union {
// Minifig Armour Plate
// Name: 2587.dat
// Author: Bernd Broich [bbroich]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Neckwear
// !KEYWORDS knight, Castle, armor
// !HISTORY 2002-06-11 [PTadmin] Official Update 2002-03
// !HISTORY 2007-05-17 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-12-07 [cwdee] Correct description
// !HISTORY 2009-12-07 [Philo] BFCed, corrected coplanarity errors, closed gaps on sides
// !HISTORY 2009-12-07 [Philo] Subparted for patterned parts
// !HISTORY 2009-12-29 [PTadmin] Official Update 2009-03
// !HISTORY 2012-12-24 [cwdee] Update category
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
	object { s_slash_2587s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
// Outer Front
	mesh {
		triangle { <-1.148,26.114,-19.076>, <0,26,-19>, <-6.9,25.8,-18.6> }
		triangle { <-2.121,26.44,-19.293>, <-1.148,26.114,-19.076>, <-6.9,25.8,-18.6> }
		triangle { <-2.772,26.926,-19.617>, <-2.121,26.43,-19.293>, <-6.9,25.8,-18.6> }
		triangle { <-4.8,32,-22.241>, <-2.772,26.926,-19.617>, <-6.9,25.8,-18.6> }
		triangle { <1.148,26.114,-19.076>, <6.9,25.8,-18.6>, <0,26,-19> }
		triangle { <2.121,26.44,-19.293>, <6.9,25.8,-18.6>, <1.148,26.114,-19.076> }
		triangle { <2.772,26.926,-19.617>, <6.9,25.8,-18.6>, <2.121,26.43,-19.293> }
		triangle { <4.8,32,-22.241>, <6.9,25.8,-18.6>, <2.772,26.926,-19.617> }
		triangle { <-11.43,16.7,-16.3>, <-6,17.25,-19.11>, <-5.7,11.13,-18.6> }
		triangle { <-11.43,16.7,-16.3>, <-5.7,11.13,-18.6>, <-11,10.9,-16.1> }
		triangle { <-12.2,24.2,-16>, <-6.9,25.8,-18.6>, <-6,17.25,-19.11> }
		triangle { <-12.2,24.2,-16>, <-6,17.25,-19.11>, <-11.43,16.7,-16.3> }
		triangle { <-12.2,24.2,-16>, <-14,31,-19>, <-6.9,25.8,-18.6> }
		triangle { <-6.9,25.8,-18.6>, <-14,31,-19>, <-9,32,-21.5> }
		triangle { <-14.73,4.22,-12>, <-10.5,4.22,-14.8>, <-13.48,-3,-12> }
		triangle { <-10.5,4.22,-14.8>, <-10,-3,-12.78>, <-13.48,-3,-12> }
		triangle { <-15.96,10.67,-12>, <-11,10.9,-16.1>, <-14.73,4.22,-12> }
		triangle { <-11,10.9,-16.1>, <-10.5,4.22,-14.8>, <-14.73,4.22,-12> }
		triangle { <-16.6,15,-12>, <-11.43,16.7,-16.3>, <-11,10.9,-16.1> }
		triangle { <-16.6,15,-12>, <-11,10.9,-16.1>, <-15.96,10.67,-12> }
		triangle { <-17.71,21.5,-12>, <-12.2,24.2,-16>, <-11.43,16.7,-16.3> }
		triangle { <-17.71,21.5,-12>, <-11.43,16.7,-16.3>, <-16.6,15,-12> }
		triangle { <-17.71,21.5,-12>, <-19,29,-15>, <-12.2,24.2,-16> }
		triangle { <-12.2,24.2,-16>, <-19,29,-15>, <-14,31,-19> }
		triangle { <-5.2,4.22,-16.9>, <-5,-3,-13.89>, <-10.5,4.22,-14.8> }
		triangle { <-10.5,4.22,-14.8>, <-5,-3,-13.89>, <-10,-3,-12.78> }
		triangle { <-5.2,4.22,-16.9>, <0,4.22,-18.7>, <0,-3,-15> }
		triangle { <-5.2,4.22,-16.9>, <0,-3,-15>, <-5,-3,-13.89> }
		triangle { <-5.7,11.13,-18.6>, <-5.2,4.22,-16.9>, <-11,10.9,-16.1> }
		triangle { <-11,10.9,-16.1>, <-5.2,4.22,-16.9>, <-10.5,4.22,-14.8> }
		triangle { <-5.7,11.13,-18.6>, <0,11.37,-20.28>, <0,4.22,-18.7> }
		triangle { <-5.7,11.13,-18.6>, <0,4.22,-18.7>, <-5.2,4.22,-16.9> }
		triangle { <-6,17.25,-19.11>, <0,17.5,-20.36>, <0,11.37,-20.28> }
		triangle { <-6,17.25,-19.11>, <0,11.37,-20.28>, <-5.7,11.13,-18.6> }
		triangle { <-6,32.38,-22.5>, <-4.8,32,-22.24>, <-6.9,25.8,-18.6> }
		triangle { <-6,32.38,-22.5>, <-6.9,25.8,-18.6>, <-9,32,-21.5> }
		triangle { <-6.9,25.8,-18.6>, <0,26,-19>, <-6,17.25,-19.11> }
		triangle { <0,26,-19>, <0,17.5,-20.36>, <-6,17.25,-19.11> }
		triangle { <11.43,16.7,-16.3>, <5.7,11.13,-18.6>, <6,17.25,-19.11> }
		triangle { <11.43,16.7,-16.3>, <11,10.9,-16.1>, <5.7,11.13,-18.6> }
		triangle { <12.2,24.2,-16>, <6,17.25,-19.11>, <6.9,25.8,-18.6> }
		triangle { <12.2,24.2,-16>, <11.43,16.7,-16.3>, <6,17.25,-19.11> }
		triangle { <12.2,24.2,-16>, <6.9,25.8,-18.6>, <14,31,-19> }
		triangle { <6.9,25.8,-18.6>, <9,32,-21.5>, <14,31,-19> }
		triangle { <14.73,4.22,-12>, <13.48,-3,-12>, <10.5,4.22,-14.8> }
		triangle { <10.5,4.22,-14.8>, <13.48,-3,-12>, <10,-3,-12.78> }
		triangle { <15.96,10.67,-12>, <14.73,4.22,-12>, <11,10.9,-16.1> }
		triangle { <11,10.9,-16.1>, <14.73,4.22,-12>, <10.5,4.22,-14.8> }
		triangle { <16.6,15,-12>, <11,10.9,-16.1>, <11.43,16.7,-16.3> }
		triangle { <16.6,15,-12>, <15.96,10.67,-12>, <11,10.9,-16.1> }
		triangle { <17.71,21.5,-12>, <11.43,16.7,-16.3>, <12.2,24.2,-16> }
		triangle { <17.71,21.5,-12>, <16.6,15,-12>, <11.43,16.7,-16.3> }
		triangle { <17.71,21.5,-12>, <12.2,24.2,-16>, <19,29,-15> }
		triangle { <12.2,24.2,-16>, <14,31,-19>, <19,29,-15> }
		triangle { <5.2,4.22,-16.9>, <0,-3,-15>, <0,4.22,-18.7> }
		triangle { <5.2,4.22,-16.9>, <5,-3,-13.89>, <0,-3,-15> }
		triangle { <5.2,4.22,-16.9>, <10.5,4.22,-14.8>, <5,-3,-13.89> }
		triangle { <10.5,4.22,-14.8>, <10,-3,-12.78>, <5,-3,-13.89> }
		triangle { <5.7,11.13,-18.6>, <0,4.22,-18.7>, <0,11.37,-20.28> }
		triangle { <5.7,11.13,-18.6>, <5.2,4.22,-16.9>, <0,4.22,-18.7> }
		triangle { <5.7,11.13,-18.6>, <11,10.9,-16.1>, <5.2,4.22,-16.9> }
		triangle { <11,10.9,-16.1>, <10.5,4.22,-14.8>, <5.2,4.22,-16.9> }
		triangle { <6,17.25,-19.11>, <0,11.37,-20.28>, <0,17.5,-20.36> }
		triangle { <6,17.25,-19.11>, <5.7,11.13,-18.6>, <0,11.37,-20.28> }
		triangle { <6,32.38,-22.5>, <6.9,25.8,-18.6>, <4.8,32,-22.24> }
		triangle { <6,32.38,-22.5>, <9,32,-21.5>, <6.9,25.8,-18.6> }
		triangle { <6.9,25.8,-18.6>, <6,17.25,-19.11>, <0,26,-19> }
		triangle { <0,26,-19>, <6,17.25,-19.11>, <0,17.5,-20.36> }
// Condlines
	}
}
#end
#end // ifndef (_2587_dot_dat)


//// Model armor_002_plate.ldr
#ifndef (armor__002__plate_dot_ldr)
#declare armor__002__plate_dot_ldr = object {
// Untitled
// Name: armor_002_plate.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 7  0 -14 4  1 0 0  0 1 0  0 0 1 2587.dat
	object {
		_2587_dot_dat
		matrix <1-L3SW/42.4484,0,0,0,1-L3SW/37.375,0,0,0,1-L3SW/36.5,0,L3SW/2.54468,L3SW/-8.58824>
		matrix <1,0,0,0,1,0,0,0,1,0,-14,4>
		material { L3Color7 }
	}
}
#end // ifndef (armor__002__plate_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-21.2242,-18,-18.5>;
#declare L3ModelBBoxMax = <21.2242,19.375,18>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,0.6875,-0.25>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <42.4484,37.375,36.5>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject armor_002_plate.ldr
object { armor__002__plate_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        3            13            17
// POV Equivs:       -            10 (77%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "armor_camera.inc"

//// End
