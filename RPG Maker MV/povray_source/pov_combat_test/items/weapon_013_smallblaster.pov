// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:08 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_013_smallblaster.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_013_smallblaster.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_013_smallblaster.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 0 Black (from ldconfig.ldr)
#ifndef (L3Texture0)
#declare L3Texture0 = L3TextureOpaqueRGB(5,19,29)
#end
#ifndef (L3Texture0_slope)
#declare L3Texture0_slope = L3TextureSlope(L3Texture0)
#end
#ifndef (L3Color0)
#declare L3Color0 = L3Material(L3Texture0)
#end
#ifndef (L3Color0_slope)
#declare L3Color0_slope = L3Material(L3Texture0_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4cylc.dat
#ifndef (_4_dash_4cylc_dot_dat)
#declare _4_dash_4cylc_dot_dat = union {
// Cylinder Closed 1.0
// Name: 4-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2008-12-29 [cwdee] Removed one disc
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _4_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylc_dot_dat)


//// Primitive box5.dat
#ifndef (box5_dot_dat)
#declare box5_dot_dat = object {
// Box with 5 Faces and All Edges
// Name: box5.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-03 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box5_dot_dat)


//// Primitive box3u2p.dat
#ifndef (box3u2p_dot_dat)
#declare box3u2p_dot_dat = object {
// Box with 3 Faces without 2 Parallel Edges
// Name: box3u2p.dat
// Author: Niels Karsdorp [nielsk]
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-03-12 [PTadmin] Official Update 2003-01
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,-1>, <-1,1,1>, <1,1,1> }
		triangle { <1,1,1>, <1,1,-1>, <-1,1,-1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
	}
}
#end // ifndef (box3u2p_dot_dat)


//// Primitive 1-4disc.dat
#ifndef (_1_dash_4disc_dot_dat)
#declare _1_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { plane { -x, 0 } plane { -z, 0 } } }
#end // ifndef (_1_dash_4disc_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4cylc.dat
#ifndef (_1_dash_4cylc_dot_dat)
#declare _1_dash_4cylc_dot_dat = union {
// Cylinder Closed 0.25
// Name: 1-4cylc.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object { _1_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _1_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_1_dash_4cylc_dot_dat)


//// Part 61190a.dat
#ifndef (_61190a_dot_dat)
#declare _61190a_dot_dat = #if (L3Quality = 0) box { <-4.5,-22.341,-24.027>, <4.5,7,11.609> } #else union {
// Minifig Gun SW Small Blaster DC-17
// Name: 61190a.dat
// Author: El'dar Ismagilov [Eldar]
// !LDRAW_ORG Part UPDATE 2010-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !KEYWORDS weapon, star wars, clone, storm trooper
// !HISTORY 2010-07-05 [PTadmin] Official Update 2010-02
	object { _4_dash_4cylc_dot_dat matrix <0,-3.864,1.035,0,-1.294,-4.83,4,0,0,0,-9.273,10.574> }
	object { _4_dash_4cylc_dot_dat matrix <0,-3.864,1.035,0,2.912,10.867,-4,0,0,0,-18.266,-22.992> }
	object { box5_dot_dat matrix <0,0.647,2.415,0,-2.415,0.647,1,0,0,0,-19.279,-7.451> }
	mesh {
		triangle { <-4.5,-10.533,0.559>, <-4.5,-14.396,1.594>, <-4.5,-15.396,7.038> }
		triangle { <-4.5,-15.396,7.038>, <-4.5,-5.737,4.45>, <-4.5,-10.533,0.559> }
		triangle { <-4.5,-14.396,1.594>, <-4.5,-16.014,-4.443>, <-4.5,-20.184,-10.831> }
		triangle { <-4.5,-20.184,-10.831>, <-4.5,-15.396,7.038>, <-4.5,-14.396,1.594> }
		triangle { <-4.5,-10.525,-13.42>, <-4.5,-12.15,-5.478>, <-4.5,-10.533,0.559> }
		triangle { <-4.5,-10.533,0.559>, <-4.5,-5.737,4.45>, <-4.5,-10.525,-13.42> }
		triangle { <-4.5,-20.184,-10.831>, <-4.5,-16.014,-4.443>, <-4.5,-12.15,-5.478> }
		triangle { <-4.5,-12.15,-5.478>, <-4.5,-10.525,-13.42>, <-4.5,-20.184,-10.831> }
		triangle { <4.5,-5.737,4.45>, <4.5,-15.396,7.038>, <4.5,-14.396,1.594> }
		triangle { <4.5,-14.396,1.594>, <4.5,-10.533,0.559>, <4.5,-5.737,4.45> }
		triangle { <4.5,-15.396,7.038>, <4.5,-20.184,-10.831>, <4.5,-16.014,-4.443> }
		triangle { <4.5,-16.014,-4.443>, <4.5,-14.396,1.594>, <4.5,-15.396,7.038> }
		triangle { <4.5,-5.737,4.45>, <4.5,-10.533,0.559>, <4.5,-12.15,-5.478> }
		triangle { <4.5,-12.15,-5.478>, <4.5,-10.525,-13.42>, <4.5,-5.737,4.45> }
		triangle { <4.5,-10.525,-13.42>, <4.5,-12.15,-5.478>, <4.5,-16.014,-4.443> }
		triangle { <4.5,-16.014,-4.443>, <4.5,-20.184,-10.831>, <4.5,-10.525,-13.42> }
		triangle { <-4.5,-5.737,4.45>, <4.5,-5.737,4.45>, <4.5,-10.525,-13.42> }
		triangle { <4.5,-10.525,-13.42>, <-4.5,-10.525,-13.42>, <-4.5,-5.737,4.45> }
// BFC INVERTNEXT
	}
	object { box5_dot_dat matrix <0,0.809,3.019,-1.25,0,0,0,1.932,-0.518,4.5,-13.273,-1.942> }
// BFC INVERTNEXT
	object { box5_dot_dat matrix <0,0.809,3.019,1.25,0,0,0,1.932,-0.518,-4.5,-13.273,-1.942> }
	object { box3u2p_dot_dat matrix <4.5,0,0,0,-9.659,2.588,0,-2.394,-8.935,0,-8.131,-4.485> }
	object { _4_dash_4cylc_dot_dat matrix <0,0,-4,0,-15,0,-4,0,0,0,7,0.002> }
	object { _1_dash_4cylc_dot_dat matrix <0,4.347,-1.165,3,0,0,0,-1.165,-4.347,-1.5,-8.519,-5.934> }
	object { _1_dash_4disc_dot_dat matrix <0,4.347,-1.165,-1,0,0,0,-1.165,-4.347,1.5,-8.519,-5.934> }
	mesh {
		triangle { <-1.5,-3.262,-3.699>, <-1.5,-4.173,-7.098>, <-1.5,-8.519,-5.934> }
		triangle { <-1.5,-8.519,-5.934>, <-1.5,-7.921,-3.7>, <-1.5,-3.262,-3.699> }
		triangle { <1.5,-7.921,-3.7>, <1.5,-8.519,-5.934>, <1.5,-4.173,-7.098> }
		triangle { <1.5,-4.173,-7.098>, <1.5,-3.262,-3.699>, <1.5,-7.921,-3.7> }
		triangle { <-1.5,-3.262,-3.699>, <1.5,-3.262,-3.699>, <1.5,-4.173,-7.098> }
		triangle { <1.5,-4.173,-7.098>, <-1.5,-4.173,-7.098>, <-1.5,-3.262,-3.699> }
	}
}
#end
#end // ifndef (_61190a_dot_dat)


//// Model weapon_013_smallblaster.ldr
#ifndef (weapon__013__smallblaster_dot_ldr)
#declare weapon__013__smallblaster_dot_ldr = object {
// Untitled
// Name: weapon_013_smallblaster.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 0  -7 6 0  0 -0.258819 -0.965926  0 0.965926 -0.258819  1 0 0 61190a.dat
	object {
		_61190a_dot_dat
		matrix <1-L3SW/9,0,0,0,1-L3SW/29.341,0,0,0,1-L3SW/35.636,0,L3SW/-3.82517,L3SW/-5.73941>
		matrix <0,0,1,-0.258819,0.965926,0,-0.965926,-0.258819,0,-7,6,0>
		material { L3Color0 }
	}
}
#end // ifndef (weapon__013__smallblaster_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-20.0252,-18.5844,-4.5>;
#declare L3ModelBBoxMax = <21.9906,18.9801,4.5>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0.982706,0.197872,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <42.0157,37.5645,9>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_013_smallblaster.ldr
object { weapon__013__smallblaster_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            11            14
// POV Equivs:       -             4 (36%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
