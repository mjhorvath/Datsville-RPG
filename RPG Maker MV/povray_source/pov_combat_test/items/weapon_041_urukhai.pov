// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:10 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_041_urukhai.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_041_urukhai.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_041_urukhai.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Part s\10050s01.dat
#ifndef (s_slash_10050s01_dot_dat)
#declare s_slash_10050s01_dot_dat = #if (L3Quality = 0) box { <-1.531,-90.902,-14.794>, <0,-15.964,10.05> } #else object {
// ~Minifig Sword Uruk-Hai - Blade
// Name: s\10050s01.dat
// Author: Howard Lande [HowardLande]
// !LDRAW_ORG Subpart UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
// Blade Side
	mesh {
		triangle { <-1.531,-16,1.5>, <-1.154,-18,4>, <-1.2,-16,3.696> }
		triangle { <-1.124,-19,4.2>, <-1.154,-18,4>, <-1.531,-16,1.5> }
		triangle { <-1.531,-16,1.5>, <-1.531,-23,1.5>, <-1.124,-19,4.2> }
		triangle { <-1.531,-23,1.5>, <-1.049,-20,4.7>, <-1.124,-19,4.2> }
		triangle { <-1.531,-23,1.5>, <-0.898,-21,5.7>, <-1.049,-20,4.7> }
		triangle { <-1.531,-23,1.5>, <-0.672,-22,7.2>, <-0.898,-21,5.7> }
		triangle { <-1.531,-23,1.5>, <-0.476,-22.5,8.5>, <-0.672,-22,7.2> }
		triangle { <-0.25,-23,10>, <-0.476,-22.5,8.5>, <-1.531,-23,1.5> }
		triangle { <-1.531,-23,1.5>, <-0.25,-85.5,10>, <-0.25,-23,10> }
		triangle { <-0.25,-85.5,10>, <-1.531,-23,1.5>, <-1.531,-85.5,1.5> }
		triangle { <-1.531,-85.5,1.5>, <-0.295,-87.2,9.7>, <-0.25,-85.5,10> }
		triangle { <-0.401,-88.5,9>, <-0.295,-87.2,9.7>, <-1.531,-85.5,1.5> }
		triangle { <-0.401,-88.5,9>, <-1.531,-85.5,1.5>, <-0.449,-89.564,8.018> }
		triangle { <-1.531,-81.2,-4.8>, <-1.531,-85.5,1.5>, <-1.531,-80.4,-4> }
		triangle { <-1.531,-81.7,-6>, <-1.531,-85.5,1.5>, <-1.531,-81.2,-4.8> }
		triangle { <-1.531,-85.5,1.5>, <-1.531,-81.7,-6>, <-1.531,-83.5,-13> }
		triangle { <-1.531,-83.5,-13>, <-1.531,-85.5,-14.5>, <-1.531,-85.5,1.5> }
		triangle { <-1.531,-85.5,-14.5>, <-1.531,-83.5,-13>, <-1.531,-84,-14> }
		triangle { <-1.531,-84,-14>, <-1.531,-84.7,-14.5>, <-1.531,-85.5,-14.5> }
		triangle { <-1.531,-80.4,-4>, <-1.531,-85.5,1.5>, <-1.531,-23,1.5> }
		triangle { <-1.531,-23,1.5>, <-1.531,-16,-3.696>, <-1.531,-80.4,-4> }
		triangle { <-1.531,-23,1.5>, <-1.531,-16,1.5>, <-1.531,-16,-3.696> }
		triangle { <-1.2,-88.251,-6.806>, <-1.531,-85.5,1.5>, <-1.531,-86.9,-13> }
		triangle { <-1.531,-86.9,-13>, <-1.531,-85.5,1.5>, <-1.531,-85.5,-14.5> }
		triangle { <-1.531,-85.5,-14.5>, <-1.531,-86.4,-14>, <-1.531,-86.9,-13> }
		triangle { <-0.443,-89.8,7.8>, <-0.449,-89.564,8.018>, <-1.531,-85.5,1.5> }
		triangle { <-0.443,-89.8,7.8>, <-1.531,-85.5,1.5>, <-0.48,-90.6,6.2> }
		triangle { <-0.511,-90.8,5>, <-0.48,-90.6,6.2>, <-1.531,-85.5,1.5> }
		triangle { <-1.531,-85.5,1.5>, <-0.637,-90.5,3.5>, <-0.511,-90.8,5> }
		triangle { <-1.2,-88.251,-6.806>, <-0.637,-90.5,3.5>, <-1.531,-85.5,1.5> }
// Blade Edge
		triangle { <-1.154,-18,4>, <0,-17.96,4.226>, <0,-15.964,3.932> }
		triangle { <0,-15.964,3.932>, <-1.2,-16,3.696>, <-1.154,-18,4> }
		triangle { <-1.124,-19,4.2>, <0,-18.928,4.411>, <0,-17.96,4.226> }
		triangle { <0,-17.96,4.226>, <-1.154,-18,4>, <-1.124,-19,4.2> }
		triangle { <-1.049,-20,4.7>, <0,-19.878,4.869>, <0,-18.928,4.411> }
		triangle { <0,-18.928,4.411>, <-1.124,-19,4.2>, <-1.049,-20,4.7> }
		triangle { <-0.898,-21,5.7>, <0,-20.862,5.813>, <0,-19.878,4.869> }
		triangle { <0,-19.878,4.869>, <-1.049,-20,4.7>, <-0.898,-21,5.7> }
		triangle { <-0.672,-22,7.2>, <0,-21.882,7.261>, <0,-20.862,5.813> }
		triangle { <0,-20.862,5.813>, <-0.898,-21,5.7>, <-0.672,-22,7.2> }
		triangle { <-0.476,-22.5,8.5>, <0,-22.411,8.532>, <0,-21.882,7.261> }
		triangle { <0,-21.882,7.261>, <-0.672,-22,7.2>, <-0.476,-22.5,8.5> }
		triangle { <-0.25,-23,10>, <0,-22.971,10.04>, <-0.476,-22.5,8.5> }
		triangle { <0,-22.971,10.04>, <0,-22.411,8.532>, <-0.476,-22.5,8.5> }
		triangle { <-0.25,-85.5,10>, <0,-85.504,10.05>, <-0.25,-23,10> }
		triangle { <0,-85.504,10.05>, <0,-22.971,10.04>, <-0.25,-23,10> }
		triangle { <-0.295,-87.2,9.7>, <0,-87.219,9.755>, <0,-85.504,10.05> }
		triangle { <0,-85.504,10.05>, <-0.25,-85.5,10>, <-0.295,-87.2,9.7> }
		triangle { <-0.401,-88.5,9>, <0,-88.546,9.065>, <0,-87.219,9.755> }
		triangle { <0,-87.219,9.755>, <-0.295,-87.2,9.7>, <-0.401,-88.5,9> }
		triangle { <-0.449,-89.564,8.018>, <0,-89.638,8.098>, <-0.401,-88.5,9> }
		triangle { <0,-89.638,8.098>, <0,-88.546,9.065>, <-0.401,-88.5,9> }
		triangle { <-0.443,-89.8,7.8>, <0,-89.883,7.862>, <0,-89.638,8.098> }
		triangle { <-0.443,-89.8,7.8>, <0,-89.638,8.098>, <-0.449,-89.564,8.018> }
		triangle { <-0.48,-90.6,6.2>, <0,-90.691,6.229>, <-0.443,-89.8,7.8> }
		triangle { <0,-90.691,6.229>, <0,-89.883,7.862>, <-0.443,-89.8,7.8> }
		triangle { <-0.511,-90.8,5>, <0,-90.902,4.998>, <0,-90.691,6.229> }
		triangle { <0,-90.691,6.229>, <-0.48,-90.6,6.2>, <-0.511,-90.8,5> }
		triangle { <-0.637,-90.5,3.5>, <0,-90.624,3.474>, <0,-90.902,4.998> }
		triangle { <0,-90.902,4.998>, <-0.511,-90.8,5>, <-0.637,-90.5,3.5> }
		triangle { <0,-88.548,-6.871>, <-0.637,-90.5,3.5>, <-1.2,-88.251,-6.806> }
		triangle { <0,-90.624,3.474>, <-0.637,-90.5,3.5>, <0,-88.548,-6.871> }
		triangle { <0,-87.187,-13.101>, <-1.2,-88.251,-6.806>, <-1.531,-86.9,-13> }
		triangle { <0,-88.548,-6.871>, <-1.2,-88.251,-6.806>, <0,-87.187,-13.101> }
		triangle { <-1.531,-86.4,-14>, <0,-86.62,-14.21>, <0,-87.187,-13.101> }
		triangle { <0,-87.187,-13.101>, <-1.531,-86.9,-13>, <-1.531,-86.4,-14> }
		triangle { <-1.531,-85.5,-14.5>, <0,-85.576,-14.794>, <0,-86.62,-14.21> }
		triangle { <0,-86.62,-14.21>, <-1.531,-86.4,-14>, <-1.531,-85.5,-14.5> }
		triangle { <-1.531,-84.7,-14.5>, <0,-84.607,-14.79>, <0,-85.576,-14.794> }
		triangle { <0,-85.576,-14.794>, <-1.531,-85.5,-14.5>, <-1.531,-84.7,-14.5> }
		triangle { <-1.531,-84,-14>, <0,-83.769,-14.198>, <0,-84.607,-14.79> }
		triangle { <0,-84.607,-14.79>, <-1.531,-84.7,-14.5>, <-1.531,-84,-14> }
		triangle { <-1.531,-83.5,-13>, <0,-83.215,-13.106>, <0,-83.769,-14.198> }
		triangle { <0,-83.769,-14.198>, <-1.531,-84,-14>, <-1.531,-83.5,-13> }
		triangle { <-1.531,-81.7,-6>, <0,-81.412,-6.097>, <0,-83.215,-13.106> }
		triangle { <0,-83.215,-13.106>, <-1.531,-83.5,-13>, <-1.531,-81.7,-6> }
		triangle { <-1.531,-81.2,-4.8>, <0,-80.947,-4.969>, <0,-81.412,-6.097> }
		triangle { <0,-81.412,-6.097>, <-1.531,-81.7,-6>, <-1.531,-81.2,-4.8> }
		triangle { <-1.531,-80.4,-4>, <0,-80.283,-4.281>, <-1.531,-81.2,-4.8> }
		triangle { <0,-80.283,-4.281>, <0,-80.947,-4.969>, <-1.531,-81.2,-4.8> }
		triangle { <-1.531,-16,-3.696>, <0,-15.999,-4>, <0,-80.283,-4.281> }
		triangle { <0,-80.283,-4.281>, <-1.531,-80.4,-4>, <-1.531,-16,-3.696> }
// Edgelines
// Conditional Lines
	}
}
#end
#end // ifndef (s_slash_10050s01_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4cylc.dat
#ifndef (_4_dash_4cylc_dot_dat)
#declare _4_dash_4cylc_dot_dat = union {
// Cylinder Closed 1.0
// Name: 4-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2008-12-29 [cwdee] Removed one disc
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _4_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylc_dot_dat)


//// Primitive 4-4con14.dat
#ifndef (_4_dash_4con14_dot_dat)
#declare _4_dash_4con14_dot_dat = cone { <0,0,0>, 15, <0,1,0>, 14 open }
#end // ifndef (_4_dash_4con14_dot_dat)


//// Part 10050.dat
#ifndef (_10050_dot_dat)
#declare _10050_dot_dat = #if (L3Quality = 0) box { <-4,-90.902,-14.794>, <4,8,10.05> } #else union {
// Minifig Sword Uruk-Hai
// Name: 10050.dat
// Author: Howard Lande [HowardLande]
// !LDRAW_ORG Part UPDATE 2012-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !KEYWORDS Lord of the Rings
// !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
// Blade
	object { s_slash_10050s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_10050s01_dot_dat matrix <-1,0,0,0,1,0,0,0,1,0,0,0> }
// Hilt
	object { _4_dash_4cylc_dot_dat matrix <0,0,4,0,-5,0,4,0,0,0,8,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,-0.5,0,0.266,0,0,0,3,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,0.5,0,-0.266,0,0,0,2,0> }
	object { _4_dash_4cyli_dot_dat matrix <0,0,4,0,1,0,-4,0,0,0,1,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,-0.5,0,0.266,0,0,0,1,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,0.5,0,-0.266,0,0,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <0,0,4,0,1,0,-4,0,0,0,-1,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,-0.5,0,0.266,0,0,0,-1,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,0.5,0,-0.266,0,0,0,-2,0> }
	object { _4_dash_4cyli_dot_dat matrix <0,0,4,0,1,0,-4,0,0,0,-3,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,-0.5,0,0.266,0,0,0,-3,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,0.5,0,-0.266,0,0,0,-4,0> }
	object { _4_dash_4cyli_dot_dat matrix <0,0,4,0,1,0,-4,0,0,0,-5,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,-0.5,0,0.266,0,0,0,-5,0> }
	object { _4_dash_4con14_dot_dat matrix <0,0,0.266,0,0.5,0,-0.266,0,0,0,-6,0> }
	object { _4_dash_4cylc_dot_dat matrix <0,0,4,0,10,0,-4,0,0,0,-16,0> }
}
#end
#end // ifndef (_10050_dot_dat)


//// Model weapon_041_urukhai.ldr
#ifndef (weapon__041__urukhai_dot_ldr)
#declare weapon__041__urukhai_dot_ldr = object {
// Untitled
// Name: weapon_041_urukhai.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 7  -2 41 0  0 0 -1  0 1 0  1 0 0 10050.dat
	object {
		_10050_dot_dat
		matrix <1-L3SW/8,0,0,0,1-L3SW/98.902,0,0,0,1-L3SW/24.844,0,L3SW/-2.386,L3SW/-10.4739>
		matrix <0,0,1,0,1,0,-1,0,0,-2,41,0>
		material { L3Color7 }
	}
}
#end // ifndef (weapon__041__urukhai_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-12.05,-49.902,-4>;
#declare L3ModelBBoxMax = <12.794,49,4>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0.372,-0.451,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <24.844,98.902,8>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_041_urukhai.ldr
object { weapon__041__urukhai_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        3             5             9
// POV Equivs:       -             3 (60%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
