// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Aug 22 22:42:08 2014
// Input file:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_002_battleaxe.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// WorkDir:      D:\Datsville RPG\trunk\povray_source\pov_main_project\items
// LDRAWDIR:     E:\Programs Windows\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   D:\Datsville RPG\trunk\povray_source\pov_main_project\items\ (0x10)
// SearchDir2:   E:\Programs Windows\LDraw\P\ (0x9)
// SearchDir3:   E:\Programs Windows\LDraw\PARTS\ (0x4)
// SearchDir4:   E:\Programs Windows\LDraw\MODELS\ (0x0)
// ldconfig.ldr: E:\Programs Windows\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\l3p14beta\l3p.exe" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_002_battleaxe.ldr" "D:\Datsville RPG\trunk\povray_source\pov_main_project\items\weapon_002_battleaxe.pov" -o -ic -il -ibitems.inc -ieweapons_camera.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "items_settings.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 6 Brown (from ldconfig.ldr)
#ifndef (L3Texture6)
#declare L3Texture6 = L3TextureOpaqueRGB(88,57,39)
#end
#ifndef (L3Texture6_slope)
#declare L3Texture6_slope = L3TextureSlope(L3Texture6)
#end
#ifndef (L3Color6)
#declare L3Color6 = L3Material(L3Texture6)
#end
#ifndef (L3Color6_slope)
#declare L3Color6_slope = L3Material(L3Texture6_slope)
#end


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-8sphe.dat
#ifndef (_4_dash_8sphe_dot_dat)
#declare _4_dash_8sphe_dot_dat = sphere { <0,0,0>, 1 clipped_by { box { <-1,0,-1>, <2,2,2> } } }
#end // ifndef (_4_dash_8sphe_dot_dat)


//// Primitive 4-4con1.dat
#ifndef (_4_dash_4con1_dot_dat)
#declare _4_dash_4con1_dot_dat = cone { <0,0,0>, 2, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4con1_dot_dat)


//// Primitive 1-4ndis.dat
#ifndef (_1_dash_4ndis_dot_dat)
#declare _1_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <0,-1,0>, <1,1,1> } } }
#end // ifndef (_1_dash_4ndis_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Part 3848.dat
#ifndef (_3848_dot_dat)
#declare _3848_dot_dat = #if (L3Quality = 0) box { <-4,-62,-4>, <4,60,26> } #else union {
// Minifig Battleaxe
// Name: 3848.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2004-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !KEYWORDS Castle, weapon, polearm, poleaxe, axe, battleaxe
// !KEYWORDS medieval, infantry
// !CMDLINE -c6
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 2003-01-23 [sbliss] Changed title, category, completed header, BFC'ed
// !HISTORY 2003-07-06 [Steffen] fixed BFC errors
// !HISTORY 2003-12-03 [fwcain] fixed keywords; added CMDLINE...
// !HISTORY 2004-04-22 [PTadmin] Official Update 2004-02
// !HISTORY 2007-06-30 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,-1,0,0,0,4,0,60,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,112,0,0,0,4,0,-52,0> }
	object { _4_dash_8sphe_dot_dat matrix <-2,0,0,0,-2,0,0,0,2,0,-60,0> }
	object { _4_dash_4con1_dot_dat matrix <-2,0,0,0,-8,0,0,0,2,0,-52,0> }
	mesh {
		triangle { <1.5,-46,3.7>, <1.5,-46,10>, <-1.5,-46,10> }
		triangle { <-1.5,-46,10>, <-1.5,-46,3.7>, <1.5,-46,3.7> }
		triangle { <-1.5,-46,3.7>, <-1.5,-46,16>, <-1.5,-36,16> }
		triangle { <-1.5,-36,16>, <-1.5,-36,3.7>, <-1.5,-46,3.7> }
		triangle { <-1.5,-36,3.7>, <-1.5,-36,10>, <1.5,-36,10> }
		triangle { <1.5,-36,10>, <1.5,-36,3.7>, <-1.5,-36,3.7> }
		triangle { <1.5,-36,3.7>, <1.5,-36,16>, <1.5,-46,16> }
		triangle { <1.5,-46,16>, <1.5,-46,3.7>, <1.5,-36,3.7> }
	}
	object { _1_dash_4ndis_dot_dat matrix <0,6,0,-1,0,0,0,0,6,1.5,-52,10> }
	object { _1_dash_4ndis_dot_dat matrix <0,6,0,1,0,0,0,0,6,-1.5,-52,10> }
	object { _1_dash_4ndis_dot_dat matrix <0,-6,0,-1,0,0,0,0,6,1.5,-30,10> }
	object { _1_dash_4ndis_dot_dat matrix <0,-6,0,1,0,0,0,0,6,-1.5,-30,10> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,6,0,-3,0,0,0,0,6,1.5,-52,10> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,-6,0,-3,0,0,0,0,6,1.5,-30,10> }
	mesh {
		triangle { <1.5,-52,16>, <0,-58,16>, <-1.5,-52,16> }
		triangle { <-1.5,-30,16>, <0,-24,16>, <1.5,-30,16> }
		triangle { <1.5,-41,16>, <1.5,-41,20>, <1.5,-47.01,18.99> }
		triangle { <-1.5,-47.01,18.99>, <-1.5,-41,20>, <-1.5,-41,16> }
		triangle { <1.5,-41,16>, <1.5,-47.01,18.99>, <1.5,-52.11,16.1> }
		triangle { <-1.5,-52.11,16.1>, <-1.5,-47.01,18.99>, <-1.5,-41,16> }
		triangle { <1.5,-41,16>, <1.5,-29.89,16.1>, <1.5,-34.99,18.99> }
		triangle { <-1.5,-34.99,18.99>, <-1.5,-29.89,16.1>, <-1.5,-41,16> }
		triangle { <1.5,-41,16>, <1.5,-34.99,18.99>, <1.5,-41,20> }
		triangle { <-1.5,-41,20>, <-1.5,-34.99,18.99>, <-1.5,-41,16> }
		triangle { <0,-47.51,25.24>, <1.5,-47.01,18.99>, <1.5,-41,20> }
		triangle { <0,-41,26>, <0,-47.51,25.24>, <1.5,-41,20> }
		triangle { <-1.5,-41,20>, <-1.5,-47.01,18.99>, <0,-47.51,25.24> }
		triangle { <-1.5,-41,20>, <0,-47.51,25.24>, <0,-41,26> }
		triangle { <0,-53.02,23.07>, <1.5,-52,16>, <1.5,-47.01,18.99> }
		triangle { <0,-47.51,25.24>, <0,-53.02,23.07>, <1.5,-47.01,18.99> }
		triangle { <-1.5,-47.01,18.99>, <-1.5,-52,16>, <0,-53.02,23.07> }
		triangle { <-1.5,-47.01,18.99>, <0,-53.02,23.07>, <0,-47.51,25.24> }
		triangle { <0,-53.02,23.07>, <0,-56.71,19.83>, <1.5,-52,16> }
		triangle { <-1.5,-52,16>, <0,-56.71,19.83>, <0,-53.02,23.07> }
		triangle { <0,-56.71,19.83>, <0,-58,16>, <1.5,-52,16> }
		triangle { <-1.5,-52,16>, <0,-58,16>, <0,-56.71,19.83> }
		triangle { <0,-24,16>, <0,-25.29,19.83>, <1.5,-30,16> }
		triangle { <-1.5,-30,16>, <0,-25.29,19.83>, <0,-24,16> }
		triangle { <0,-25.29,19.83>, <0,-28.98,23.07>, <1.5,-30,16> }
		triangle { <-1.5,-30,16>, <0,-28.98,23.07>, <0,-25.29,19.83> }
		triangle { <0,-34.49,25.24>, <1.5,-34.99,18.99>, <1.5,-30,16> }
		triangle { <0,-28.98,23.07>, <0,-34.49,25.24>, <1.5,-30,16> }
		triangle { <-1.5,-30,16>, <-1.5,-34.99,18.99>, <0,-34.49,25.24> }
		triangle { <-1.5,-30,16>, <0,-34.49,25.24>, <0,-28.98,23.07> }
		triangle { <0,-41,26>, <1.5,-41,20>, <1.5,-34.99,18.99> }
		triangle { <0,-41,26>, <1.5,-34.99,18.99>, <0,-34.49,25.24> }
		triangle { <-1.5,-34.99,18.99>, <-1.5,-41,20>, <0,-41,26> }
		triangle { <-1.5,-34.99,18.99>, <0,-41,26>, <0,-34.49,25.24> }
// end of file
	}
}
#end
#end // ifndef (_3848_dot_dat)


//// Model weapon_002_battleaxe.ldr
#ifndef (weapon__002__battleaxe_dot_ldr)
#declare weapon__002__battleaxe_dot_ldr = object {
// Untitled
// Name: weapon_002_battleaxe.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 6  -11 1 0  0 0 1  0 1 0  -1 0 0 3848.dat
	object {
		_3848_dot_dat
		matrix <1-L3SW/8,0,0,0,1-L3SW/122,0,0,0,1-L3SW/30,0,L3SW/-122,L3SW/2.72727>
		matrix <0,0,-1,0,1,0,1,0,0,-11,1,0>
		material { L3Color6 }
	}
}
#end // ifndef (weapon__002__battleaxe_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-15,-61,-4>;
#declare L3ModelBBoxMax = <15,61,4>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,0,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <30,122,8>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject weapon_002_battleaxe.ldr
object { weapon__002__battleaxe_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            10            13
// POV Equivs:       -             6 (60%)
// Model has 2 parts (0 studs)

//// IncludeFile AtEnd
#include "weapons_camera.inc"

//// End
