// Generated by L3P v1.4 BETA 20131202 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Fri Apr 06 17:22:05 2018
// Input file:   infrastructure_streetlamp_02.ldr
// Title:        Street Lamp Mk2
// Author:       Michael Horvath
// ModelDir:     .
// WorkDir:      D:\Datsville RPG\povray_source_mv\pov_combat_test\infrastructure
// LDRAWDIR:     C:\Users\Public\Documents\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   .\ (0x10)
// SearchDir2:   C:\Users\Public\Documents\LDraw\P\ (0x9)
// SearchDir3:   C:\Users\Public\Documents\LDraw\PARTS\ (0x4)
// SearchDir4:   C:\Users\Public\Documents\LDraw\MODELS\ (0x0)
// ldconfig.ldr: C:\Users\Public\Documents\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\LDraw\l3p14beta\L3P20131202.EXE" infrastructure_streetlamp_02.ldr -o -ic -il -ibinfrastructure_figure.inc

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


//// IncludeFile AtBeginning
#include "infrastructure_shadow.inc"



//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Grey (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 288 Dark_Green (from ldconfig.ldr)
#ifndef (L3Texture288)
#declare L3Texture288 = L3TextureOpaqueRGB(24,70,50)
#end
#ifndef (L3Texture288_slope)
#declare L3Texture288_slope = L3TextureSlope(L3Texture288)
#end
#ifndef (L3Color288)
#declare L3Color288 = L3Material(L3Texture288)
#end
#ifndef (L3Color288_slope)
#declare L3Color288_slope = L3Material(L3Texture288_slope)
#end


//// Color 47 Trans_Clear (from ldconfig.ldr)
#ifndef (L3Texture47)
#declare L3Texture47 = L3TextureTransparentRGBA(252,252,252,128)
#end
#ifndef (L3Texture47_slope)
#declare L3Texture47_slope = L3TextureSlope(L3Texture47)
#end
#ifndef (L3Color47)
#declare L3Color47 = L3MaterialT(L3Texture47)
#end
#ifndef (L3Color47_slope)
#declare L3Color47_slope = L3MaterialT(L3Texture47_slope)
#end


//// Primitive stud2.dat
#ifndef (stud2_dot_dat)
#declare stud2_dot_dat = 
#if (L3Quality >= 4)
union {
#end
	difference {
		cylinder { <0,0,0>, <0,-4,0>, 6 }
		cylinder { <0,1,0>, <0,-5,0>, 4 }
	}
#if (L3Quality >= 4)
	object { L3Logo scale 0.75 }
}
#end
#end // ifndef (stud2_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4ring4.dat
#ifndef (_4_dash_4ring4_dot_dat)
#declare _4_dash_4ring4_dot_dat = disc { <0,0,0>, <0,1,0>, 5, 4 }
#end // ifndef (_4_dash_4ring4_dot_dat)


//// Primitive t04o3333.dat
#ifndef (t04o3333_dot_dat)
#declare t04o3333_dot_dat = torus {
	1, 3333/9999
	clipped_by {
		difference {
			box { <0,0,0>, <2,1,2> }
			cylinder { <0,0,0>, <0,1,0>, 1 open }
		}
	}
}
#end // ifndef (t04o3333_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Part s\2039s01.dat
#ifndef (s_slash_2039s01_dot_dat)
#declare s_slash_2039s01_dot_dat = #if (L3Quality = 0) box { <-3.866,18,4.696>, <2.134,100,6> } #else object {
// ~Lamppost  2 x  2 x  7 - Upper Column
// Name: s\2039s01.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Subpart UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-11-30 [PTadmin] Official Update 2002-05
// !HISTORY 2007-07-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [nielsk] Made BFC compliant; Conditional lines added for outer curve (2005-10-31)
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	mesh {
		triangle { <-3.866,18,4.696>, <-2.134,18,5.696>, <-2.134,100,5.696> }
		triangle { <-2.134,100,5.696>, <-3.866,100,4.696>, <-3.866,18,4.696> }
		triangle { <-2.134,18,5.696>, <0,18,6>, <0,21,6> }
		triangle { <0,21,6>, <-2.134,21,5.696>, <-2.134,18,5.696> }
		triangle { <0,18,6>, <2.134,18,5.696>, <2.134,21,5.696> }
		triangle { <2.134,21,5.696>, <0,21,6>, <0,18,6> }
// 
		triangle { <2.134,24,5.696>, <1.972,22.852,5.719>, <1.972,21,5.719> }
		triangle { <1.972,21,5.719>, <2.134,21,5.696>, <2.134,24,5.696> }
		triangle { <1.972,22.852,5.719>, <1.509,21.879,5.785>, <1.509,21,5.785> }
		triangle { <1.509,21,5.785>, <1.972,21,5.719>, <1.972,22.852,5.719> }
		triangle { <1.509,21.879,5.785>, <0.817,21.228,5.884>, <0.817,21,5.884> }
		triangle { <0.817,21,5.884>, <1.509,21,5.785>, <1.509,21.879,5.785> }
		triangle { <0.817,21.228,5.884>, <0,21,6>, <0.817,21,5.884> }
		triangle { <-2.134,21,5.696>, <-1.972,21,5.719>, <-1.972,22.852,5.719> }
		triangle { <-1.972,22.852,5.719>, <-2.134,24,5.696>, <-2.134,21,5.696> }
		triangle { <-1.972,21,5.719>, <-1.509,21,5.785>, <-1.509,21.879,5.785> }
		triangle { <-1.509,21.879,5.785>, <-1.972,22.852,5.719>, <-1.972,21,5.719> }
		triangle { <-1.509,21,5.785>, <-0.817,21,5.884>, <-0.817,21.228,5.884> }
		triangle { <-0.817,21.228,5.884>, <-1.509,21.879,5.785>, <-1.509,21,5.785> }
		triangle { <-0.817,21,5.884>, <0,21,6>, <-0.817,21.228,5.884> }
		triangle { <0,21,6>, <0.817,21.228,5.884>, <0,21.879,5.3> }
		triangle { <0.817,21.228,5.884>, <1.509,21.879,5.785>, <0,21.879,5.3> }
		triangle { <1.114,24,5.205>, <0,24,5>, <0,21.879,5.3> }
		triangle { <1.972,22.852,5.719>, <2.134,24,5.696>, <1.114,24,5.205> }
		triangle { <1.509,21.879,5.785>, <1.972,22.852,5.719>, <1.114,24,5.205> }
		triangle { <0,21.879,5.3>, <1.509,21.879,5.785>, <1.114,24,5.205> }
		triangle { <0,21.879,5.3>, <-0.817,21.228,5.884>, <0,21,6> }
		triangle { <0,21.879,5.3>, <-1.509,21.879,5.785>, <-0.817,21.228,5.884> }
		triangle { <0,21.879,5.3>, <0,24,5>, <-1.114,24,5.205> }
		triangle { <-1.114,24,5.205>, <-2.134,24,5.696>, <-1.972,22.852,5.719> }
		triangle { <-1.114,24,5.205>, <-1.972,22.852,5.719>, <-1.509,21.879,5.785> }
		triangle { <-1.114,24,5.205>, <-1.509,21.879,5.785>, <0,21.879,5.3> }
// 
		triangle { <-2.134,24,5.696>, <-1.114,24,5.205>, <-1.114,94,5.205> }
		triangle { <-1.114,94,5.205>, <-2.134,94,5.696>, <-2.134,24,5.696> }
		triangle { <-1.114,24,5.205>, <0,24,5>, <0,94,5> }
		triangle { <0,94,5>, <-1.114,94,5.205>, <-1.114,24,5.205> }
		triangle { <0,24,5>, <1.114,24,5.205>, <1.114,94,5.205> }
		triangle { <1.114,94,5.205>, <0,94,5>, <0,24,5> }
		triangle { <1.114,24,5.205>, <2.134,24,5.696>, <2.134,94,5.696> }
		triangle { <2.134,94,5.696>, <1.114,94,5.205>, <1.114,24,5.205> }
// 
		triangle { <2.134,97,5.696>, <1.972,97,5.719>, <1.972,95.148,5.719> }
		triangle { <1.972,95.148,5.719>, <2.134,94,5.696>, <2.134,97,5.696> }
		triangle { <1.972,97,5.719>, <1.509,97,5.785>, <1.509,96.121,5.785> }
		triangle { <1.509,96.121,5.785>, <1.972,95.148,5.719>, <1.972,97,5.719> }
		triangle { <1.509,97,5.785>, <0.817,97,5.884>, <0.817,96.772,5.884> }
		triangle { <0.817,96.772,5.884>, <1.509,96.121,5.785>, <1.509,97,5.785> }
		triangle { <0.817,97,5.884>, <0,97,6>, <0.817,96.772,5.884> }
		triangle { <-2.134,94,5.696>, <-1.972,95.148,5.719>, <-1.972,97,5.719> }
		triangle { <-1.972,97,5.719>, <-2.134,97,5.696>, <-2.134,94,5.696> }
		triangle { <-1.972,95.148,5.719>, <-1.509,96.121,5.785>, <-1.509,97,5.785> }
		triangle { <-1.509,97,5.785>, <-1.972,97,5.719>, <-1.972,95.148,5.719> }
		triangle { <-1.509,96.121,5.785>, <-0.817,96.772,5.884>, <-0.817,97,5.884> }
		triangle { <-0.817,97,5.884>, <-1.509,97,5.785>, <-1.509,96.121,5.785> }
		triangle { <-0.817,96.772,5.884>, <0,97,6>, <-0.817,97,5.884> }
		triangle { <0,96.121,5.3>, <0.817,96.772,5.884>, <0,97,6> }
		triangle { <0,96.121,5.3>, <1.509,96.121,5.785>, <0.817,96.772,5.884> }
		triangle { <0,96.121,5.3>, <0,94,5>, <1.114,94,5.205> }
		triangle { <1.114,94,5.205>, <2.134,94,5.696>, <1.972,95.148,5.719> }
		triangle { <1.114,94,5.205>, <1.972,95.148,5.719>, <1.509,96.121,5.785> }
		triangle { <1.114,94,5.205>, <1.509,96.121,5.785>, <0,96.121,5.3> }
		triangle { <0,97,6>, <-0.817,96.772,5.884>, <0,96.121,5.3> }
		triangle { <-0.817,96.772,5.884>, <-1.509,96.121,5.785>, <0,96.121,5.3> }
		triangle { <-1.114,94,5.205>, <0,94,5>, <0,96.121,5.3> }
		triangle { <-1.972,95.148,5.719>, <-2.134,94,5.696>, <-1.114,94,5.205> }
		triangle { <-1.509,96.121,5.785>, <-1.972,95.148,5.719>, <-1.114,94,5.205> }
		triangle { <0,96.121,5.3>, <-1.509,96.121,5.785>, <-1.114,94,5.205> }
// 
		triangle { <-2.134,97,5.696>, <0,97,6>, <0,100,6> }
		triangle { <0,100,6>, <-2.134,100,5.696>, <-2.134,97,5.696> }
		triangle { <0,97,6>, <2.134,97,5.696>, <2.134,100,5.696> }
		triangle { <2.134,100,5.696>, <0,100,6>, <0,97,6> }
// Conditional lines added by NK
	}
}
#end
#end // ifndef (s_slash_2039s01_dot_dat)


//// Part s\2039s02.dat
#ifndef (s_slash_2039s02_dot_dat)
#declare s_slash_2039s02_dot_dat = #if (L3Quality = 0) box { <6.178,104,-6.299>, <9.41,154,3.701> } #else object {
// ~Lamppost  2 x  2 x  7 - Lower Column
// Name: s\2039s02.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Subpart UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-11-30 [PTadmin] Official Update 2002-05
// !HISTORY 2007-07-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [nielsk] Made BFC compliant; Conditional lines added for outer curve (2005-10-31)
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// Note: Some faces seem possibly wrong, just above and below the oval
	mesh {
		triangle { <6.178,104,-5.299>, <7.044,113,-5.799>, <8.544,113,-3.201> }
		triangle { <8.544,113,-3.201>, <7.678,104,-2.701>, <6.178,104,-5.299> }
		triangle { <7.044,113,-5.799>, <7.91,124,-6.299>, <9.41,124,-3.701> }
		triangle { <9.41,124,-3.701>, <8.544,113,-3.201>, <7.044,113,-5.799> }
		triangle { <7.91,124,-6.299>, <7.91,134,-6.299>, <9.41,134,-3.701> }
		triangle { <9.41,134,-3.701>, <9.41,124,-3.701>, <7.91,124,-6.299> }
		triangle { <7.91,134,-6.299>, <7.044,145,-5.799>, <8.544,145,-3.201> }
		triangle { <8.544,145,-3.201>, <9.41,134,-3.701>, <7.91,134,-6.299> }
		triangle { <7.044,145,-5.799>, <6.178,154,-5.299>, <7.678,154,-2.701> }
		triangle { <7.678,154,-2.701>, <8.544,145,-3.201>, <7.044,145,-5.799> }
// 
		triangle { <7.678,104,2.701>, <8,104,0>, <8.389,107.5,0> }
		triangle { <7.678,104,2.701>, <8.389,107.5,0>, <8.015,107.5,2.895> }
		triangle { <8.015,107.5,2.895>, <8.389,107.5,0>, <8.381,107.614,0.574> }
		triangle { <8.015,107.5,2.895>, <8.381,107.614,0.574>, <8.363,107.939,1.061> }
		triangle { <8.015,107.5,2.895>, <8.363,107.939,1.061>, <8.385,108.426,1.386> }
		triangle { <8.015,107.5,2.895>, <8.385,108.426,1.386>, <8.443,109,1.5> }
		triangle { <8.015,107.5,2.895>, <8.443,109,1.5>, <8.159,109,2.979> }
		triangle { <8.159,109,2.979>, <8.443,109,1.5>, <8.66,113,2.387> }
		triangle { <8.159,109,2.979>, <8.66,113,2.387>, <8.544,113,3.201> }
		triangle { <8.544,113,3.201>, <8.66,113,2.387>, <9.41,124,3.701> }
		triangle { <8.13,113,1.688>, <7.996,124,2.617>, <9.41,124,3.701> }
		triangle { <8.66,113,2.387>, <8.13,113,1.688>, <9.41,124,3.701> }
		triangle { <7.91,113,0>, <7.41,124,0>, <7.996,124,2.617> }
		triangle { <8.13,113,1.688>, <7.91,113,0>, <7.996,124,2.617> }
		triangle { <7.759,109,1.061>, <8.13,113,1.688>, <8.66,113,2.387> }
		triangle { <8.443,109,1.5>, <7.759,109,1.061>, <8.66,113,2.387> }
		triangle { <7.476,109,0>, <7.91,113,0>, <8.13,113,1.688> }
		triangle { <7.759,109,1.061>, <7.476,109,0>, <8.13,113,1.688> }
		triangle { <7.743,107.939,0>, <8.381,107.614,0.574>, <8.389,107.5,0> }
		triangle { <7.743,107.939,0>, <8.363,107.939,1.061>, <8.381,107.614,0.574> }
		triangle { <7.759,109,1.061>, <7.743,107.939,0>, <7.476,109,0> }
		triangle { <8.385,108.426,1.386>, <7.759,109,1.061>, <8.443,109,1.5> }
		triangle { <8.363,107.939,1.061>, <7.759,109,1.061>, <8.385,108.426,1.386> }
		triangle { <8.363,107.939,1.061>, <7.743,107.939,0>, <7.759,109,1.061> }
// 
		triangle { <8.389,107.5,0>, <8,104,0>, <7.678,104,-2.701> }
		triangle { <8.015,107.5,-2.895>, <8.389,107.5,0>, <7.678,104,-2.701> }
		triangle { <8.381,107.614,-0.574>, <8.389,107.5,0>, <8.015,107.5,-2.895> }
		triangle { <8.363,107.939,-1.061>, <8.381,107.614,-0.574>, <8.015,107.5,-2.895> }
		triangle { <8.385,108.426,-1.386>, <8.363,107.939,-1.061>, <8.015,107.5,-2.895> }
		triangle { <8.443,109,-1.5>, <8.385,108.426,-1.386>, <8.015,107.5,-2.895> }
		triangle { <8.159,109,-2.979>, <8.443,109,-1.5>, <8.015,107.5,-2.895> }
		triangle { <8.66,113,-2.387>, <8.443,109,-1.5>, <8.159,109,-2.979> }
		triangle { <8.544,113,-3.201>, <8.66,113,-2.387>, <8.159,109,-2.979> }
		triangle { <9.41,124,-3.701>, <8.66,113,-2.387>, <8.544,113,-3.201> }
		triangle { <9.41,124,-3.701>, <7.996,124,-2.617>, <8.13,113,-1.688> }
		triangle { <9.41,124,-3.701>, <8.13,113,-1.688>, <8.66,113,-2.387> }
		triangle { <7.996,124,-2.617>, <7.41,124,0>, <7.91,113,0> }
		triangle { <7.996,124,-2.617>, <7.91,113,0>, <8.13,113,-1.688> }
		triangle { <8.66,113,-2.387>, <8.13,113,-1.688>, <7.759,109,-1.061> }
		triangle { <8.66,113,-2.387>, <7.759,109,-1.061>, <8.443,109,-1.5> }
		triangle { <8.13,113,-1.688>, <7.91,113,0>, <7.476,109,0> }
		triangle { <8.13,113,-1.688>, <7.476,109,0>, <7.759,109,-1.061> }
		triangle { <8.389,107.5,0>, <8.381,107.614,-0.574>, <7.743,107.939,0> }
		triangle { <8.381,107.614,-0.574>, <8.363,107.939,-1.061>, <7.743,107.939,0> }
		triangle { <7.476,109,0>, <7.743,107.939,0>, <7.759,109,-1.061> }
		triangle { <8.443,109,-1.5>, <7.759,109,-1.061>, <8.385,108.426,-1.386> }
		triangle { <8.385,108.426,-1.386>, <7.759,109,-1.061>, <8.363,107.939,-1.061> }
		triangle { <7.759,109,-1.061>, <7.743,107.939,0>, <8.363,107.939,-1.061> }
// 
		triangle { <8.389,150.5,0>, <8,154,0>, <7.678,154,2.701> }
		triangle { <8.015,150.5,2.895>, <8.389,150.5,0>, <7.678,154,2.701> }
		triangle { <8.381,150.386,0.574>, <8.389,150.5,0>, <8.015,150.5,2.895> }
		triangle { <8.363,150.061,1.061>, <8.381,150.386,0.574>, <8.015,150.5,2.895> }
		triangle { <8.385,149.574,1.386>, <8.363,150.061,1.061>, <8.015,150.5,2.895> }
		triangle { <8.443,149,1.5>, <8.385,149.574,1.386>, <8.015,150.5,2.895> }
		triangle { <8.159,149,2.979>, <8.443,149,1.5>, <8.015,150.5,2.895> }
		triangle { <8.66,145,2.387>, <8.443,149,1.5>, <8.159,149,2.979> }
		triangle { <8.544,145,3.201>, <8.66,145,2.387>, <8.159,149,2.979> }
		triangle { <9.41,134,3.701>, <8.66,145,2.387>, <8.544,145,3.201> }
		triangle { <9.41,134,3.701>, <7.996,134,2.617>, <8.13,145,1.688> }
		triangle { <9.41,134,3.701>, <8.13,145,1.688>, <8.66,145,2.387> }
		triangle { <7.996,134,2.617>, <7.41,134,0>, <7.91,145,0> }
		triangle { <7.996,134,2.617>, <7.91,145,0>, <8.13,145,1.688> }
		triangle { <8.66,145,2.387>, <8.13,145,1.688>, <7.759,149,1.061> }
		triangle { <8.66,145,2.387>, <7.759,149,1.061>, <8.443,149,1.5> }
		triangle { <8.13,145,1.688>, <7.91,145,0>, <7.476,149,0> }
		triangle { <8.13,145,1.688>, <7.476,149,0>, <7.759,149,1.061> }
		triangle { <8.389,150.5,0>, <8.381,150.386,0.574>, <7.743,150.061,0> }
		triangle { <8.381,150.386,0.574>, <8.363,150.061,1.061>, <7.743,150.061,0> }
		triangle { <7.476,149,0>, <7.743,150.061,0>, <7.759,149,1.061> }
		triangle { <8.443,149,1.5>, <7.759,149,1.061>, <8.385,149.574,1.386> }
		triangle { <8.385,149.574,1.386>, <7.759,149,1.061>, <8.363,150.061,1.061> }
		triangle { <7.759,149,1.061>, <7.743,150.061,0>, <8.363,150.061,1.061> }
// 
		triangle { <7.678,154,-2.701>, <8,154,0>, <8.389,150.5,0> }
		triangle { <7.678,154,-2.701>, <8.389,150.5,0>, <8.015,150.5,-2.895> }
		triangle { <8.015,150.5,-2.895>, <8.389,150.5,0>, <8.381,150.386,-0.574> }
		triangle { <8.015,150.5,-2.895>, <8.381,150.386,-0.574>, <8.363,150.061,-1.061> }
		triangle { <8.015,150.5,-2.895>, <8.363,150.061,-1.061>, <8.385,149.574,-1.386> }
		triangle { <8.015,150.5,-2.895>, <8.385,149.574,-1.386>, <8.443,149,-1.5> }
		triangle { <8.015,150.5,-2.895>, <8.443,149,-1.5>, <8.159,149,-2.979> }
		triangle { <8.159,149,-2.979>, <8.443,149,-1.5>, <8.66,145,-2.387> }
		triangle { <8.159,149,-2.979>, <8.66,145,-2.387>, <8.544,145,-3.201> }
		triangle { <8.544,145,-3.201>, <8.66,145,-2.387>, <9.41,134,-3.701> }
		triangle { <8.13,145,-1.688>, <7.996,134,-2.617>, <9.41,134,-3.701> }
		triangle { <8.66,145,-2.387>, <8.13,145,-1.688>, <9.41,134,-3.701> }
		triangle { <7.91,145,0>, <7.41,134,0>, <7.996,134,-2.617> }
		triangle { <8.13,145,-1.688>, <7.91,145,0>, <7.996,134,-2.617> }
		triangle { <7.759,149,-1.061>, <8.13,145,-1.688>, <8.66,145,-2.387> }
		triangle { <8.443,149,-1.5>, <7.759,149,-1.061>, <8.66,145,-2.387> }
		triangle { <7.476,149,0>, <7.91,145,0>, <8.13,145,-1.688> }
		triangle { <7.759,149,-1.061>, <7.476,149,0>, <8.13,145,-1.688> }
		triangle { <7.743,150.061,0>, <8.381,150.386,-0.574>, <8.389,150.5,0> }
		triangle { <7.743,150.061,0>, <8.363,150.061,-1.061>, <8.381,150.386,-0.574> }
		triangle { <7.759,149,-1.061>, <7.743,150.061,0>, <7.476,149,0> }
		triangle { <8.385,149.574,-1.386>, <7.759,149,-1.061>, <8.443,149,-1.5> }
		triangle { <8.363,150.061,-1.061>, <7.759,149,-1.061>, <8.385,149.574,-1.386> }
		triangle { <8.363,150.061,-1.061>, <7.743,150.061,0>, <7.759,149,-1.061> }
// 
		triangle { <9.41,124,3.701>, <7.996,124,2.617>, <7.996,134,2.617> }
		triangle { <7.996,134,2.617>, <9.41,134,3.701>, <9.41,124,3.701> }
		triangle { <7.996,124,2.617>, <7.41,124,0>, <7.41,134,0> }
		triangle { <7.41,134,0>, <7.996,134,2.617>, <7.996,124,2.617> }
		triangle { <7.41,124,0>, <7.996,124,-2.617>, <7.996,134,-2.617> }
		triangle { <7.996,134,-2.617>, <7.41,134,0>, <7.41,124,0> }
		triangle { <7.996,124,-2.617>, <9.41,124,-3.701>, <9.41,134,-3.701> }
		triangle { <9.41,134,-3.701>, <7.996,134,-2.617>, <7.996,124,-2.617> }
// 
// Conditional lines added by NK
	}
}
#end
#end // ifndef (s_slash_2039s02_dot_dat)


//// Primitive 4-4ring3.dat
#ifndef (_4_dash_4ring3_dot_dat)
#declare _4_dash_4ring3_dot_dat = disc { <0,0,0>, <0,1,0>, 4, 3 }
#end // ifndef (_4_dash_4ring3_dot_dat)


//// Primitive 4-4ndis.dat
#ifndef (_4_dash_4ndis_dot_dat)
#declare _4_dash_4ndis_dot_dat = disc { <0,0,0>, <0,1,0>, 2, 1 clipped_by { box { <-1,-1,-1>, <1,1,1> } } }
#end // ifndef (_4_dash_4ndis_dot_dat)


//// Primitive 1-4cyli.dat
#ifndef (_1_dash_4cyli_dot_dat)
#declare _1_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { <-1,0,-1>, -sqrt(1/2) } } }
#end // ifndef (_1_dash_4cyli_dot_dat)


//// Primitive 1-4disc.dat
#ifndef (_1_dash_4disc_dot_dat)
#declare _1_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { plane { -x, 0 } plane { -z, 0 } } }
#end // ifndef (_1_dash_4disc_dot_dat)


//// Primitive 1-4ring1.dat
#ifndef (_1_dash_4ring1_dot_dat)
#declare _1_dash_4ring1_dot_dat = disc {
	<0,0,0>, <0,1,0>, 2, 1
	clipped_by { plane { -x, 0 } plane { -z, 0 } }
}
#end // ifndef (_1_dash_4ring1_dot_dat)


//// Primitive stud4.dat
#ifndef (stud4_dot_dat)
#declare stud4_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4_dot_dat)


//// Primitive 4-4ring5.dat
#ifndef (_4_dash_4ring5_dot_dat)
#declare _4_dash_4ring5_dot_dat = disc { <0,0,0>, <0,1,0>, 6, 5 }
#end // ifndef (_4_dash_4ring5_dot_dat)


//// Part 2039.dat
#ifndef (_2039_dot_dat)
#declare _2039_dot_dat = #if (L3Quality = 0) box { <-20,-4,-20>, <20,168,20> } #else union {
// Lamppost  2 x  2 x  7
// Name: 2039.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Part UPDATE 2013-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Roadsign
// !KEYWORDS Fabuland, Belville, Trains, Harry Potter, Creator, Freestyle
// !HISTORY 2002-11-30 [PTadmin] Official Update 2002-05
// !HISTORY 2007-05-04 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [nielsk] Made BFC compliant (2005-10-31)
// !HISTORY 2008-07-08 [Philo] Corrected bad ring (2007-11-26)
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// !HISTORY 2013-08-29 [cwdee] Update category
// !HISTORY 2013-12-23 [PTadmin] Official Update 2013-02
	#if (L3Studs)
		object { stud2_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	#end
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,0,0> }
// top torus
	object { _4_dash_4ring4_dot_dat matrix <1.5,0,0,0,1,0,0,0,1.5,0,0,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,7.5,0,0,0,7.5,0,2.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,7.5,0,0,0,7.5,0,2.5,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,7.5,0,0,0,-7.5,0,2.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,7.5,0,0,0,-7.5,0,2.5,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,-7.5,0,0,0,7.5,0,2.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,-7.5,0,0,0,7.5,0,2.5,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,-7.5,0,0,0,-7.5,0,2.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,-7.5,0,0,0,-7.5,0,2.5,0> }
	object { _4_dash_4ring4_dot_dat matrix <1.5,0,0,0,-1,0,0,0,1.5,0,5,0> }
// cylinder between tori
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,8,0,0,0,6,0,5,0> }
// second torus
	object { _4_dash_4ring4_dot_dat matrix <1.5,0,0,0,1,0,0,0,1.5,0,13,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,7.5,0,0,0,7.5,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,7.5,0,0,0,7.5,0,15.5,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,7.5,0,0,0,-7.5,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,7.5,0,0,0,-7.5,0,15.5,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,-7.5,0,0,0,7.5,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,-7.5,0,0,0,7.5,0,15.5,0> }
	object { t04o3333_dot_dat matrix <7.5,0,0,0,-7.5,0,0,0,-7.5,0,15.5,0> }
	object { t04o3333_dot_dat matrix <-7.5,0,0,0,-7.5,0,0,0,-7.5,0,15.5,0> }
	object { _4_dash_4disc_dot_dat matrix <7.5,0,0,0,-1,0,0,0,7.5,0,18,0> }
// upper column
	object { s_slash_2039s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_2039s01_dot_dat matrix <0.5,0,-0.866,0,1,0,0.866,0,0.5,0,0,0> }
	object { s_slash_2039s01_dot_dat matrix <-0.5,0,-0.866,0,1,0,0.866,0,-0.5,0,0,0> }
	object { s_slash_2039s01_dot_dat matrix <-1,0,0,0,1,0,0,0,-1,0,0,0> }
	object { s_slash_2039s01_dot_dat matrix <-0.5,0,0.866,0,1,0,-0.866,0,-0.5,0,0,0> }
	object { s_slash_2039s01_dot_dat matrix <0.5,0,0.866,0,1,0,-0.866,0,0.5,0,0,0> }
// 
	mesh {
		triangle { <-2.972,100.19,7.174>, <-2.679,100,6.467>, <0,100,7> }
		triangle { <0,100,7>, <0,100.19,7.765>, <-2.972,100.19,7.174> }
		triangle { <-3.22,100.732,7.774>, <-2.972,100.19,7.174>, <0,100.19,7.765> }
		triangle { <0,100.19,7.765>, <0,100.732,8.414>, <-3.22,100.732,7.774> }
		triangle { <-3.386,101.543,8.174>, <-3.22,100.732,7.774>, <0,100.732,8.414> }
		triangle { <0,100.732,8.414>, <0,101.543,8.848>, <-3.386,101.543,8.174> }
		triangle { <-3.444,102.5,8.315>, <-3.386,101.543,8.174>, <0,101.543,8.848> }
		triangle { <0,101.543,8.848>, <0,102.5,9>, <-3.444,102.5,8.315> }
		triangle { <-3.386,103.457,8.174>, <-3.444,102.5,8.315>, <0,102.5,9> }
		triangle { <0,102.5,9>, <0,103.457,8.848>, <-3.386,103.457,8.174> }
		triangle { <-3.331,104,8.042>, <-3.386,103.457,8.174>, <0,103.457,8.848> }
		triangle { <0,103.457,8.848>, <0,104,8.705>, <-3.331,104,8.042> }
		triangle { <-5.491,100.19,5.491>, <-4.95,100,4.95>, <-2.679,100,6.467> }
		triangle { <-2.679,100,6.467>, <-2.972,100.19,7.174>, <-5.491,100.19,5.491> }
		triangle { <-5.95,100.732,5.95>, <-5.491,100.19,5.491>, <-2.972,100.19,7.174> }
		triangle { <-2.972,100.19,7.174>, <-3.22,100.732,7.774>, <-5.95,100.732,5.95> }
		triangle { <-6.256,101.543,6.256>, <-5.95,100.732,5.95>, <-3.22,100.732,7.774> }
		triangle { <-3.22,100.732,7.774>, <-3.386,101.543,8.174>, <-6.256,101.543,6.256> }
		triangle { <-6.364,102.5,6.364>, <-6.256,101.543,6.256>, <-3.386,101.543,8.174> }
		triangle { <-3.386,101.543,8.174>, <-3.444,102.5,8.315>, <-6.364,102.5,6.364> }
		triangle { <-6.256,103.457,6.256>, <-6.364,102.5,6.364>, <-3.444,102.5,8.315> }
		triangle { <-3.444,102.5,8.315>, <-3.386,103.457,8.174>, <-6.256,103.457,6.256> }
		triangle { <-6.155,104,6.155>, <-6.256,103.457,6.256>, <-3.386,103.457,8.174> }
		triangle { <-3.386,103.457,8.174>, <-3.331,104,8.042>, <-6.155,104,6.155> }
		triangle { <-7.174,100.19,2.972>, <-6.467,100,2.679>, <-4.95,100,4.95> }
		triangle { <-4.95,100,4.95>, <-5.491,100.19,5.491>, <-7.174,100.19,2.972> }
		triangle { <-7.774,100.732,3.22>, <-7.174,100.19,2.972>, <-5.491,100.19,5.491> }
		triangle { <-5.491,100.19,5.491>, <-5.95,100.732,5.95>, <-7.774,100.732,3.22> }
		triangle { <-8.174,101.543,3.386>, <-7.774,100.732,3.22>, <-5.95,100.732,5.95> }
		triangle { <-5.95,100.732,5.95>, <-6.256,101.543,6.256>, <-8.174,101.543,3.386> }
		triangle { <-8.315,102.5,3.444>, <-8.174,101.543,3.386>, <-6.256,101.543,6.256> }
		triangle { <-6.256,101.543,6.256>, <-6.364,102.5,6.364>, <-8.315,102.5,3.444> }
		triangle { <-8.174,103.457,3.386>, <-8.315,102.5,3.444>, <-6.364,102.5,6.364> }
		triangle { <-6.364,102.5,6.364>, <-6.256,103.457,6.256>, <-8.174,103.457,3.386> }
		triangle { <-8.042,104,3.331>, <-8.174,103.457,3.386>, <-6.256,103.457,6.256> }
		triangle { <-6.256,103.457,6.256>, <-6.155,104,6.155>, <-8.042,104,3.331> }
		triangle { <-7.765,100.19,0>, <-7,100,0>, <-6.467,100,2.679> }
		triangle { <-6.467,100,2.679>, <-7.174,100.19,2.972>, <-7.765,100.19,0> }
		triangle { <-8.414,100.732,0>, <-7.765,100.19,0>, <-7.174,100.19,2.972> }
		triangle { <-7.174,100.19,2.972>, <-7.774,100.732,3.22>, <-8.414,100.732,0> }
		triangle { <-8.848,101.543,0>, <-8.414,100.732,0>, <-7.774,100.732,3.22> }
		triangle { <-7.774,100.732,3.22>, <-8.174,101.543,3.386>, <-8.848,101.543,0> }
		triangle { <-9,102.5,0>, <-8.848,101.543,0>, <-8.174,101.543,3.386> }
		triangle { <-8.174,101.543,3.386>, <-8.315,102.5,3.444>, <-9,102.5,0> }
		triangle { <-8.848,103.457,0>, <-9,102.5,0>, <-8.315,102.5,3.444> }
		triangle { <-8.315,102.5,3.444>, <-8.174,103.457,3.386>, <-8.848,103.457,0> }
		triangle { <-8.705,104,0>, <-8.848,103.457,0>, <-8.174,103.457,3.386> }
		triangle { <-8.174,103.457,3.386>, <-8.042,104,3.331>, <-8.705,104,0> }
		triangle { <-7.174,100.19,-2.972>, <-6.467,100,-2.679>, <-7,100,0> }
		triangle { <-7,100,0>, <-7.765,100.19,0>, <-7.174,100.19,-2.972> }
		triangle { <-7.774,100.732,-3.22>, <-7.174,100.19,-2.972>, <-7.765,100.19,0> }
		triangle { <-7.765,100.19,0>, <-8.414,100.732,0>, <-7.774,100.732,-3.22> }
		triangle { <-8.174,101.543,-3.386>, <-7.774,100.732,-3.22>, <-8.414,100.732,0> }
		triangle { <-8.414,100.732,0>, <-8.848,101.543,0>, <-8.174,101.543,-3.386> }
		triangle { <-8.315,102.5,-3.444>, <-8.174,101.543,-3.386>, <-8.848,101.543,0> }
		triangle { <-8.848,101.543,0>, <-9,102.5,0>, <-8.315,102.5,-3.444> }
		triangle { <-8.174,103.457,-3.386>, <-8.315,102.5,-3.444>, <-9,102.5,0> }
		triangle { <-9,102.5,0>, <-8.848,103.457,0>, <-8.174,103.457,-3.386> }
		triangle { <-8.042,104,-3.331>, <-8.174,103.457,-3.386>, <-8.848,103.457,0> }
		triangle { <-8.848,103.457,0>, <-8.705,104,0>, <-8.042,104,-3.331> }
		triangle { <-5.491,100.19,-5.491>, <-4.95,100,-4.95>, <-6.467,100,-2.679> }
		triangle { <-6.467,100,-2.679>, <-7.174,100.19,-2.972>, <-5.491,100.19,-5.491> }
		triangle { <-5.95,100.732,-5.95>, <-5.491,100.19,-5.491>, <-7.174,100.19,-2.972> }
		triangle { <-7.174,100.19,-2.972>, <-7.774,100.732,-3.22>, <-5.95,100.732,-5.95> }
		triangle { <-6.256,101.543,-6.256>, <-5.95,100.732,-5.95>, <-7.774,100.732,-3.22> }
		triangle { <-7.774,100.732,-3.22>, <-8.174,101.543,-3.386>, <-6.256,101.543,-6.256> }
		triangle { <-6.364,102.5,-6.364>, <-6.256,101.543,-6.256>, <-8.174,101.543,-3.386> }
		triangle { <-8.174,101.543,-3.386>, <-8.315,102.5,-3.444>, <-6.364,102.5,-6.364> }
		triangle { <-6.256,103.457,-6.256>, <-6.364,102.5,-6.364>, <-8.315,102.5,-3.444> }
		triangle { <-8.315,102.5,-3.444>, <-8.174,103.457,-3.386>, <-6.256,103.457,-6.256> }
		triangle { <-6.155,104,-6.155>, <-6.256,103.457,-6.256>, <-8.174,103.457,-3.386> }
		triangle { <-8.174,103.457,-3.386>, <-8.042,104,-3.331>, <-6.155,104,-6.155> }
		triangle { <-2.972,100.19,-7.174>, <-2.679,100,-6.467>, <-4.95,100,-4.95> }
		triangle { <-4.95,100,-4.95>, <-5.491,100.19,-5.491>, <-2.972,100.19,-7.174> }
		triangle { <-3.22,100.732,-7.774>, <-2.972,100.19,-7.174>, <-5.491,100.19,-5.491> }
		triangle { <-5.491,100.19,-5.491>, <-5.95,100.732,-5.95>, <-3.22,100.732,-7.774> }
		triangle { <-3.386,101.543,-8.174>, <-3.22,100.732,-7.774>, <-5.95,100.732,-5.95> }
		triangle { <-5.95,100.732,-5.95>, <-6.256,101.543,-6.256>, <-3.386,101.543,-8.174> }
		triangle { <-3.444,102.5,-8.315>, <-3.386,101.543,-8.174>, <-6.256,101.543,-6.256> }
		triangle { <-6.256,101.543,-6.256>, <-6.364,102.5,-6.364>, <-3.444,102.5,-8.315> }
		triangle { <-3.386,103.457,-8.174>, <-3.444,102.5,-8.315>, <-6.364,102.5,-6.364> }
		triangle { <-6.364,102.5,-6.364>, <-6.256,103.457,-6.256>, <-3.386,103.457,-8.174> }
		triangle { <-3.331,104,-8.042>, <-3.386,103.457,-8.174>, <-6.256,103.457,-6.256> }
		triangle { <-6.256,103.457,-6.256>, <-6.155,104,-6.155>, <-3.331,104,-8.042> }
		triangle { <0,100.19,-7.765>, <0,100,-7>, <-2.679,100,-6.467> }
		triangle { <-2.679,100,-6.467>, <-2.972,100.19,-7.174>, <0,100.19,-7.765> }
		triangle { <0,100.732,-8.414>, <0,100.19,-7.765>, <-2.972,100.19,-7.174> }
		triangle { <-2.972,100.19,-7.174>, <-3.22,100.732,-7.774>, <0,100.732,-8.414> }
		triangle { <0,101.543,-8.848>, <0,100.732,-8.414>, <-3.22,100.732,-7.774> }
		triangle { <-3.22,100.732,-7.774>, <-3.386,101.543,-8.174>, <0,101.543,-8.848> }
		triangle { <0,102.5,-9>, <0,101.543,-8.848>, <-3.386,101.543,-8.174> }
		triangle { <-3.386,101.543,-8.174>, <-3.444,102.5,-8.315>, <0,102.5,-9> }
		triangle { <0,103.457,-8.848>, <0,102.5,-9>, <-3.444,102.5,-8.315> }
		triangle { <-3.444,102.5,-8.315>, <-3.386,103.457,-8.174>, <0,103.457,-8.848> }
		triangle { <0,104,-8.705>, <0,103.457,-8.848>, <-3.386,103.457,-8.174> }
		triangle { <-3.386,103.457,-8.174>, <-3.331,104,-8.042>, <0,104,-8.705> }
		triangle { <2.972,100.19,-7.174>, <2.679,100,-6.467>, <0,100,-7> }
		triangle { <0,100,-7>, <0,100.19,-7.765>, <2.972,100.19,-7.174> }
		triangle { <3.22,100.732,-7.774>, <2.972,100.19,-7.174>, <0,100.19,-7.765> }
		triangle { <0,100.19,-7.765>, <0,100.732,-8.414>, <3.22,100.732,-7.774> }
		triangle { <3.386,101.543,-8.174>, <3.22,100.732,-7.774>, <0,100.732,-8.414> }
		triangle { <0,100.732,-8.414>, <0,101.543,-8.848>, <3.386,101.543,-8.174> }
		triangle { <3.444,102.5,-8.315>, <3.386,101.543,-8.174>, <0,101.543,-8.848> }
		triangle { <0,101.543,-8.848>, <0,102.5,-9>, <3.444,102.5,-8.315> }
		triangle { <3.386,103.457,-8.174>, <3.444,102.5,-8.315>, <0,102.5,-9> }
		triangle { <0,102.5,-9>, <0,103.457,-8.848>, <3.386,103.457,-8.174> }
		triangle { <3.331,104,-8.042>, <3.386,103.457,-8.174>, <0,103.457,-8.848> }
		triangle { <0,103.457,-8.848>, <0,104,-8.705>, <3.331,104,-8.042> }
		triangle { <5.491,100.19,-5.491>, <4.95,100,-4.95>, <2.679,100,-6.467> }
		triangle { <2.679,100,-6.467>, <2.972,100.19,-7.174>, <5.491,100.19,-5.491> }
		triangle { <5.95,100.732,-5.95>, <5.491,100.19,-5.491>, <2.972,100.19,-7.174> }
		triangle { <2.972,100.19,-7.174>, <3.22,100.732,-7.774>, <5.95,100.732,-5.95> }
		triangle { <6.256,101.543,-6.256>, <5.95,100.732,-5.95>, <3.22,100.732,-7.774> }
		triangle { <3.22,100.732,-7.774>, <3.386,101.543,-8.174>, <6.256,101.543,-6.256> }
		triangle { <6.364,102.5,-6.364>, <6.256,101.543,-6.256>, <3.386,101.543,-8.174> }
		triangle { <3.386,101.543,-8.174>, <3.444,102.5,-8.315>, <6.364,102.5,-6.364> }
		triangle { <6.256,103.457,-6.256>, <6.364,102.5,-6.364>, <3.444,102.5,-8.315> }
		triangle { <3.444,102.5,-8.315>, <3.386,103.457,-8.174>, <6.256,103.457,-6.256> }
		triangle { <6.155,104,-6.155>, <6.256,103.457,-6.256>, <3.386,103.457,-8.174> }
		triangle { <3.386,103.457,-8.174>, <3.331,104,-8.042>, <6.155,104,-6.155> }
		triangle { <7.174,100.19,-2.972>, <6.467,100,-2.679>, <4.95,100,-4.95> }
		triangle { <4.95,100,-4.95>, <5.491,100.19,-5.491>, <7.174,100.19,-2.972> }
		triangle { <7.774,100.732,-3.22>, <7.174,100.19,-2.972>, <5.491,100.19,-5.491> }
		triangle { <5.491,100.19,-5.491>, <5.95,100.732,-5.95>, <7.774,100.732,-3.22> }
		triangle { <8.174,101.543,-3.386>, <7.774,100.732,-3.22>, <5.95,100.732,-5.95> }
		triangle { <5.95,100.732,-5.95>, <6.256,101.543,-6.256>, <8.174,101.543,-3.386> }
		triangle { <8.315,102.5,-3.444>, <8.174,101.543,-3.386>, <6.256,101.543,-6.256> }
		triangle { <6.256,101.543,-6.256>, <6.364,102.5,-6.364>, <8.315,102.5,-3.444> }
		triangle { <8.174,103.457,-3.386>, <8.315,102.5,-3.444>, <6.364,102.5,-6.364> }
		triangle { <6.364,102.5,-6.364>, <6.256,103.457,-6.256>, <8.174,103.457,-3.386> }
		triangle { <8.042,104,-3.331>, <8.174,103.457,-3.386>, <6.256,103.457,-6.256> }
		triangle { <6.256,103.457,-6.256>, <6.155,104,-6.155>, <8.042,104,-3.331> }
		triangle { <7.765,100.19,0>, <7,100,0>, <6.467,100,-2.679> }
		triangle { <6.467,100,-2.679>, <7.174,100.19,-2.972>, <7.765,100.19,0> }
		triangle { <8.414,100.732,0>, <7.765,100.19,0>, <7.174,100.19,-2.972> }
		triangle { <7.174,100.19,-2.972>, <7.774,100.732,-3.22>, <8.414,100.732,0> }
		triangle { <8.848,101.543,0>, <8.414,100.732,0>, <7.774,100.732,-3.22> }
		triangle { <7.774,100.732,-3.22>, <8.174,101.543,-3.386>, <8.848,101.543,0> }
		triangle { <9,102.5,0>, <8.848,101.543,0>, <8.174,101.543,-3.386> }
		triangle { <8.174,101.543,-3.386>, <8.315,102.5,-3.444>, <9,102.5,0> }
		triangle { <8.848,103.457,0>, <9,102.5,0>, <8.315,102.5,-3.444> }
		triangle { <8.315,102.5,-3.444>, <8.174,103.457,-3.386>, <8.848,103.457,0> }
		triangle { <8.705,104,0>, <8.848,103.457,0>, <8.174,103.457,-3.386> }
		triangle { <8.174,103.457,-3.386>, <8.042,104,-3.331>, <8.705,104,0> }
		triangle { <7.174,100.19,2.972>, <6.467,100,2.679>, <7,100,0> }
		triangle { <7,100,0>, <7.765,100.19,0>, <7.174,100.19,2.972> }
		triangle { <7.774,100.732,3.22>, <7.174,100.19,2.972>, <7.765,100.19,0> }
		triangle { <7.765,100.19,0>, <8.414,100.732,0>, <7.774,100.732,3.22> }
		triangle { <8.174,101.543,3.386>, <7.774,100.732,3.22>, <8.414,100.732,0> }
		triangle { <8.414,100.732,0>, <8.848,101.543,0>, <8.174,101.543,3.386> }
		triangle { <8.315,102.5,3.444>, <8.174,101.543,3.386>, <8.848,101.543,0> }
		triangle { <8.848,101.543,0>, <9,102.5,0>, <8.315,102.5,3.444> }
		triangle { <8.174,103.457,3.386>, <8.315,102.5,3.444>, <9,102.5,0> }
		triangle { <9,102.5,0>, <8.848,103.457,0>, <8.174,103.457,3.386> }
		triangle { <8.042,104,3.331>, <8.174,103.457,3.386>, <8.848,103.457,0> }
		triangle { <8.848,103.457,0>, <8.705,104,0>, <8.042,104,3.331> }
		triangle { <5.491,100.19,5.491>, <4.95,100,4.95>, <6.467,100,2.679> }
		triangle { <6.467,100,2.679>, <7.174,100.19,2.972>, <5.491,100.19,5.491> }
		triangle { <5.95,100.732,5.95>, <5.491,100.19,5.491>, <7.174,100.19,2.972> }
		triangle { <7.174,100.19,2.972>, <7.774,100.732,3.22>, <5.95,100.732,5.95> }
		triangle { <6.256,101.543,6.256>, <5.95,100.732,5.95>, <7.774,100.732,3.22> }
		triangle { <7.774,100.732,3.22>, <8.174,101.543,3.386>, <6.256,101.543,6.256> }
		triangle { <6.364,102.5,6.364>, <6.256,101.543,6.256>, <8.174,101.543,3.386> }
		triangle { <8.174,101.543,3.386>, <8.315,102.5,3.444>, <6.364,102.5,6.364> }
		triangle { <6.256,103.457,6.256>, <6.364,102.5,6.364>, <8.315,102.5,3.444> }
		triangle { <8.315,102.5,3.444>, <8.174,103.457,3.386>, <6.256,103.457,6.256> }
		triangle { <6.155,104,6.155>, <6.256,103.457,6.256>, <8.174,103.457,3.386> }
		triangle { <8.174,103.457,3.386>, <8.042,104,3.331>, <6.155,104,6.155> }
		triangle { <2.972,100.19,7.174>, <2.679,100,6.467>, <4.95,100,4.95> }
		triangle { <4.95,100,4.95>, <5.491,100.19,5.491>, <2.972,100.19,7.174> }
		triangle { <3.22,100.732,7.774>, <2.972,100.19,7.174>, <5.491,100.19,5.491> }
		triangle { <5.491,100.19,5.491>, <5.95,100.732,5.95>, <3.22,100.732,7.774> }
		triangle { <3.386,101.543,8.174>, <3.22,100.732,7.774>, <5.95,100.732,5.95> }
		triangle { <5.95,100.732,5.95>, <6.256,101.543,6.256>, <3.386,101.543,8.174> }
		triangle { <3.444,102.5,8.315>, <3.386,101.543,8.174>, <6.256,101.543,6.256> }
		triangle { <6.256,101.543,6.256>, <6.364,102.5,6.364>, <3.444,102.5,8.315> }
		triangle { <3.386,103.457,8.174>, <3.444,102.5,8.315>, <6.364,102.5,6.364> }
		triangle { <6.364,102.5,6.364>, <6.256,103.457,6.256>, <3.386,103.457,8.174> }
		triangle { <3.331,104,8.042>, <3.386,103.457,8.174>, <6.256,103.457,6.256> }
		triangle { <6.256,103.457,6.256>, <6.155,104,6.155>, <3.331,104,8.042> }
		triangle { <0,100.19,7.765>, <0,100,7>, <2.679,100,6.467> }
		triangle { <2.679,100,6.467>, <2.972,100.19,7.174>, <0,100.19,7.765> }
		triangle { <0,100.732,8.414>, <0,100.19,7.765>, <2.972,100.19,7.174> }
		triangle { <2.972,100.19,7.174>, <3.22,100.732,7.774>, <0,100.732,8.414> }
		triangle { <0,101.543,8.848>, <0,100.732,8.414>, <3.22,100.732,7.774> }
		triangle { <3.22,100.732,7.774>, <3.386,101.543,8.174>, <0,101.543,8.848> }
		triangle { <0,102.5,9>, <0,101.543,8.848>, <3.386,101.543,8.174> }
		triangle { <3.386,101.543,8.174>, <3.444,102.5,8.315>, <0,102.5,9> }
		triangle { <0,103.457,8.848>, <0,102.5,9>, <3.444,102.5,8.315> }
		triangle { <3.444,102.5,8.315>, <3.386,103.457,8.174>, <0,103.457,8.848> }
		triangle { <0,104,8.705>, <0,103.457,8.848>, <3.386,103.457,8.174> }
		triangle { <3.386,103.457,8.174>, <3.331,104,8.042>, <0,104,8.705> }
	}
	object { _4_dash_4disc_dot_dat matrix <7,0,0,0,1,0,0,0,7,0,100,0> }
	object { _4_dash_4disc_dot_dat matrix <8.705,0,0,0,-1,0,0,0,8.705,0,104,0> }
// lower column
	object { s_slash_2039s02_dot_dat matrix <0.866,0,-0.5,0,1,0,0.5,0,0.866,0,0,0> }
	object { s_slash_2039s02_dot_dat matrix <0,0,-1,0,1,0,1,0,0,0,0,0> }
	object { s_slash_2039s02_dot_dat matrix <-0.866,0,-0.5,0,1,0,0.5,0,-0.866,0,0,0> }
	object { s_slash_2039s02_dot_dat matrix <-0.866,0,0.5,0,1,0,-0.5,0,-0.866,0,0,0> }
	object { s_slash_2039s02_dot_dat matrix <0,0,1,0,1,0,-1,0,0,0,0,0> }
	object { s_slash_2039s02_dot_dat matrix <0.866,0,0.5,0,1,0,-0.5,0,0.866,0,0,0> }
	object { _4_dash_4ring3_dot_dat matrix <2.5,0,0,0,1,0,0,0,2.5,0,154,0> }
// 
	object { _4_dash_4cyli_dot_dat matrix <10,0,0,0,6,0,0,0,10,0,154,0> }
	object { _4_dash_4ndis_dot_dat matrix <10,0,0,0,1,0,0,0,10,0,160,0> }
// 
	mesh {
		triangle { <10,160,10>, <12,160,12>, <-12,160,12> }
		triangle { <-12,160,12>, <-10,160,10>, <10,160,10> }
		triangle { <12,160,12>, <12,160,18>, <-12,160,18> }
		triangle { <-12,160,18>, <-12,160,12>, <12,160,12> }
	}
	object { _1_dash_4cyli_dot_dat matrix <0,-2,0,-24,0,0,0,0,2,12,162,18> }
	object { _1_dash_4disc_dot_dat matrix <6,0,0,0,1,0,0,0,6,12,160,12> }
	object { t04o3333_dot_dat matrix <6,0,0,0,-6,0,0,0,6,12,162,12> }
	object { _1_dash_4cyli_dot_dat matrix <8,0,0,0,6,0,0,0,8,12,162,12> }
	mesh {
		triangle { <-12,168,20>, <-12,162,20>, <12,162,20> }
		triangle { <12,162,20>, <12,168,20>, <-12,168,20> }
	}
	object { _1_dash_4ring1_dot_dat matrix <4,0,0,0,-1,0,0,0,4,12,168,12> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <4,0,0,0,-4,0,0,0,4,12,168,12> }
	object { _1_dash_4disc_dot_dat matrix <4,0,0,0,-1,0,0,0,4,12,164,12> }
	mesh {
		triangle { <12,168,16>, <-12,168,16>, <-12,168,20> }
		triangle { <-12,168,20>, <12,168,20>, <12,168,16> }
		triangle { <12,164,16>, <-12,164,16>, <-12,168,16> }
		triangle { <-12,168,16>, <12,168,16>, <12,164,16> }
		triangle { <12,164,12>, <-12,164,12>, <-12,164,16> }
		triangle { <-12,164,16>, <12,164,16>, <12,164,12> }
		triangle { <8,164,8>, <-8,164,8>, <-12,164,12> }
		triangle { <-12,164,12>, <12,164,12>, <8,164,8> }
// 
		triangle { <10,160,-10>, <12,160,-12>, <12,160,12> }
		triangle { <12,160,12>, <10,160,10>, <10,160,-10> }
		triangle { <12,160,-12>, <18,160,-12>, <18,160,12> }
		triangle { <18,160,12>, <12,160,12>, <12,160,-12> }
	}
	object { _1_dash_4cyli_dot_dat matrix <0,-2,0,0,0,24,2,0,0,18,162,-12> }
	object { _1_dash_4disc_dot_dat matrix <0,0,-6,0,1,0,6,0,0,12,160,-12> }
	object { t04o3333_dot_dat matrix <0,0,-6,0,-6,0,6,0,0,12,162,-12> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,-8,0,6,0,8,0,0,12,162,-12> }
	mesh {
		triangle { <20,168,12>, <20,162,12>, <20,162,-12> }
		triangle { <20,162,-12>, <20,168,-12>, <20,168,12> }
	}
	object { _1_dash_4ring1_dot_dat matrix <0,0,-4,0,-1,0,4,0,0,12,168,-12> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,0,-4,0,-4,0,4,0,0,12,168,-12> }
	object { _1_dash_4disc_dot_dat matrix <0,0,-4,0,-1,0,4,0,0,12,164,-12> }
	mesh {
		triangle { <16,168,-12>, <16,168,12>, <20,168,12> }
		triangle { <20,168,12>, <20,168,-12>, <16,168,-12> }
		triangle { <16,164,-12>, <16,164,12>, <16,168,12> }
		triangle { <16,168,12>, <16,168,-12>, <16,164,-12> }
		triangle { <12,164,-12>, <12,164,12>, <16,164,12> }
		triangle { <16,164,12>, <16,164,-12>, <12,164,-12> }
		triangle { <8,164,-8>, <8,164,8>, <12,164,12> }
		triangle { <12,164,12>, <12,164,-12>, <8,164,-8> }
// 
		triangle { <-10,160,-10>, <-12,160,-12>, <12,160,-12> }
		triangle { <12,160,-12>, <10,160,-10>, <-10,160,-10> }
		triangle { <-12,160,-12>, <-12,160,-18>, <12,160,-18> }
		triangle { <12,160,-18>, <12,160,-12>, <-12,160,-12> }
	}
	object { _1_dash_4cyli_dot_dat matrix <0,-2,0,24,0,0,0,0,-2,-12,162,-18> }
	object { _1_dash_4disc_dot_dat matrix <-6,0,0,0,1,0,0,0,-6,-12,160,-12> }
	object { t04o3333_dot_dat matrix <-6,0,0,0,-6,0,0,0,-6,-12,162,-12> }
	object { _1_dash_4cyli_dot_dat matrix <-8,0,0,0,6,0,0,0,-8,-12,162,-12> }
	mesh {
		triangle { <12,168,-20>, <12,162,-20>, <-12,162,-20> }
		triangle { <-12,162,-20>, <-12,168,-20>, <12,168,-20> }
	}
	object { _1_dash_4ring1_dot_dat matrix <-4,0,0,0,-1,0,0,0,-4,-12,168,-12> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <-4,0,0,0,-4,0,0,0,-4,-12,168,-12> }
	object { _1_dash_4disc_dot_dat matrix <-4,0,0,0,-1,0,0,0,-4,-12,164,-12> }
	mesh {
		triangle { <-12,168,-16>, <12,168,-16>, <12,168,-20> }
		triangle { <12,168,-20>, <-12,168,-20>, <-12,168,-16> }
		triangle { <-12,164,-16>, <12,164,-16>, <12,168,-16> }
		triangle { <12,168,-16>, <-12,168,-16>, <-12,164,-16> }
		triangle { <-12,164,-12>, <12,164,-12>, <12,164,-16> }
		triangle { <12,164,-16>, <-12,164,-16>, <-12,164,-12> }
		triangle { <-8,164,-8>, <8,164,-8>, <12,164,-12> }
		triangle { <12,164,-12>, <-12,164,-12>, <-8,164,-8> }
// 
		triangle { <-10,160,10>, <-12,160,12>, <-12,160,-12> }
		triangle { <-12,160,-12>, <-10,160,-10>, <-10,160,10> }
		triangle { <-12,160,12>, <-18,160,12>, <-18,160,-12> }
		triangle { <-18,160,-12>, <-12,160,-12>, <-12,160,12> }
	}
	object { _1_dash_4cyli_dot_dat matrix <0,-2,0,0,0,-24,-2,0,0,-18,162,12> }
	object { _1_dash_4disc_dot_dat matrix <0,0,6,0,1,0,-6,0,0,-12,160,12> }
	object { t04o3333_dot_dat matrix <0,0,6,0,-6,0,-6,0,0,-12,162,12> }
	object { _1_dash_4cyli_dot_dat matrix <0,0,8,0,6,0,-8,0,0,-12,162,12> }
	mesh {
		triangle { <-20,168,-12>, <-20,162,-12>, <-20,162,12> }
		triangle { <-20,162,12>, <-20,168,12>, <-20,168,-12> }
	}
	object { _1_dash_4ring1_dot_dat matrix <0,0,4,0,-1,0,-4,0,0,-12,168,12> }
// BFC INVERTNEXT
	object { _1_dash_4cyli_dot_dat matrix <0,0,4,0,-4,0,-4,0,0,-12,168,12> }
	object { _1_dash_4disc_dot_dat matrix <0,0,4,0,-1,0,-4,0,0,-12,164,12> }
	mesh {
		triangle { <-16,168,12>, <-16,168,-12>, <-20,168,-12> }
		triangle { <-20,168,-12>, <-20,168,12>, <-16,168,12> }
		triangle { <-16,164,12>, <-16,164,-12>, <-16,168,-12> }
		triangle { <-16,168,-12>, <-16,168,12>, <-16,164,12> }
		triangle { <-12,164,12>, <-12,164,-12>, <-16,164,-12> }
		triangle { <-16,164,-12>, <-16,164,12>, <-12,164,12> }
		triangle { <-8,164,8>, <-8,164,-8>, <-12,164,-12> }
		triangle { <-12,164,-12>, <-12,164,12>, <-8,164,8> }
	}
	#if (L3Studs)
		object { stud4_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,164,0> }
	#end
	object { _4_dash_4ndis_dot_dat matrix <8,0,0,0,-1,0,0,0,8,0,164,0> }
	object { _4_dash_4ring5_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,164,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,-56,0,0,0,5,0,164,0> }
	object { _4_dash_4disc_dot_dat matrix <5,0,0,0,-1,0,0,0,5,0,108,0> }
}
#end
#end // ifndef (_2039_dot_dat)


//// Primitive stud2a.dat
#ifndef (stud2a_dot_dat)
#declare stud2a_dot_dat = 
#if (L3Quality >= 4)
union {
#end
	difference {
		cylinder { <0,0,0>, <0,-4,0>, 6 }
		cylinder { <0,1,0>, <0,-5,0>, 4 }
	}
#if (L3Quality >= 4)
	object { L3Logo scale 0.75 }
}
#end
#end // ifndef (stud2a_dot_dat)


//// Primitive 4-4ring2.dat
#ifndef (_4_dash_4ring2_dot_dat)
#declare _4_dash_4ring2_dot_dat = disc { <0,0,0>, <0,1,0>, 3, 2 }
#end // ifndef (_4_dash_4ring2_dot_dat)


//// Primitive stud4a.dat
#ifndef (stud4a_dot_dat)
#declare stud4a_dot_dat = difference {
	cylinder { <0,0,0>, <0,-4,0>, 8 }
	cylinder { <0,1,0>, <0,-5,0>, 6 }
}
#end // ifndef (stud4a_dot_dat)


//// Part 3062b.dat
#ifndef (_3062b_dot_dat)
#declare _3062b_dot_dat = #if (L3Quality = 0) box { <-10,-4,-10>, <10,24,10> } #else union {
// Brick  1 x  1 Round with Hollow Stud
// Name: 3062b.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 2003-08-02 [OrionP] Made some primitive subs
// !HISTORY 2003-08-04 [Steffen] replaced peghole.dat by stud4a.dat
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-10 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-03-19 [tchang] Add missing <CR>
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// Note: One or more STUD references in this file have been purposely
// capitalized to ensure that the stud is fully visible in LEdit.
	object { _4_dash_4cyli_dot_dat matrix <10,0,0,0,19,0,0,0,10,0,0,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,4,0,0,0,4,0,0,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,16,0,0,0,6,0,4,0> }
	#if (L3Studs)
		object { stud2a_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	#end
	object { _4_dash_4ring3_dot_dat matrix <2,0,0,0,1,0,0,0,2,0,0,0> }
	object { _4_dash_4ring2_dot_dat matrix <2,0,0,0,-1,0,0,0,2,0,4,0> }
	object { _4_dash_4ring4_dot_dat matrix <2,0,0,0,1,0,0,0,2,0,0,0> }
	object { _4_dash_4ring4_dot_dat matrix <2,0,0,0,-1,0,0,0,2,0,19,0> }
	object { _4_dash_4cyli_dot_dat matrix <8,0,0,0,1,0,0,0,8,0,19,0> }
	#if (L3Studs)
		object { stud4a_dot_dat matrix <1,0,0,0,-1,0,0,0,-1,0,20,0> }
	#end
}
#end
#end // ifndef (_3062b_dot_dat)


//// Primitive 4-4cylo.dat
#ifndef (_4_dash_4cylo_dot_dat)
#declare _4_dash_4cylo_dot_dat = object {
// Cylinder Open 1.0
// Name: 4-4cylo.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object { _4_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_4_dash_4cylo_dot_dat)


//// Primitive 4-4con1.dat
#ifndef (_4_dash_4con1_dot_dat)
#declare _4_dash_4con1_dot_dat = cone { <0,0,0>, 2, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4con1_dot_dat)


//// Primitive 4-4con4.dat
#ifndef (_4_dash_4con4_dot_dat)
#declare _4_dash_4con4_dot_dat = cone { <0,0,0>, 5, <0,1,0>, 4 open }
#end // ifndef (_4_dash_4con4_dot_dat)


//// Part s\4740s01.dat
#ifndef (s_slash_4740s01_dot_dat)
#declare s_slash_4740s01_dot_dat = #if (L3Quality = 0) box { <-20,-4,-20>, <20,8,20> } #else union {
// ~Dish  2 x  2 Inverted without Convex Surface
// Name: s\4740s01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2014-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2014-12-23 [PTadmin] Official Update 2014-02
	#if (L3Studs)
		object { stud2a_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
		object { stud4a_dot_dat matrix <1,0,0,0,-1,0,0,0,1,0,4,0> }
	#end
	object { _4_dash_4cylo_dot_dat matrix <20,0,0,0,2.4,0,0,0,20,0,5.6,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,2.7,0,0,0,4,0,0,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,-1.3,0,0,0,6,0,4,0> }
	object { _4_dash_4cyli_dot_dat matrix <8,0,0,0,-1.3,0,0,0,8,0,4,0> }
	object { _4_dash_4ring2_dot_dat matrix <2,0,0,0,-1,0,0,0,2,0,2.7,0> }
// BFC INVERTNEXT
	object { _4_dash_4con1_dot_dat matrix <8,0,0,0,-3.1,0,0,0,8,0,5.8,0> }
// BFC INVERTNEXT
	object { _4_dash_4con4_dot_dat matrix <4,0,0,0,-2.2,0,0,0,4,0,8,0> }
}
#end
#end // ifndef (s_slash_4740s01_dot_dat)


//// Primitive 4-4con3.dat
#ifndef (_4_dash_4con3_dot_dat)
#declare _4_dash_4con3_dot_dat = cone { <0,0,0>, 4, <0,1,0>, 3 open }
#end // ifndef (_4_dash_4con3_dot_dat)


//// Part 4740.dat
#ifndef (_4740_dot_dat)
#declare _4740_dot_dat = #if (L3Quality = 0) box { <-20,-4,-20>, <20,8,20> } #else union {
// Dish  2 x  2 Inverted
// Name: 4740.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2014-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !KEYWORDS Space, Radar Dish, Round
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 2003-06-08 [jriley] BFC compliant, cone & ring substitutions
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2004-09-15 [PTadmin] Official Update 2004-03
// !HISTORY 2007-07-08 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-05-09 [cwdee] Remove CATEGORY Round
// !HISTORY 2010-07-05 [PTadmin] Official Update 2010-02
// !HISTORY 2014-09-03 [Philo] Improved part shape, subparted for patterns
// !HISTORY 2014-12-23 [PTadmin] Official Update 2014-02
	object { s_slash_4740s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _4_dash_4con1_dot_dat matrix <6,0,0,0,-1.7,0,0,0,6,0,1.7,0> }
	object { _4_dash_4con3_dot_dat matrix <4,0,0,0,-1.6,0,0,0,4,0,3.3,0> }
	object { _4_dash_4con4_dot_dat matrix <4,0,0,0,-2.3,0,0,0,4,0,5.6,0> }
}
#end
#end // ifndef (_4740_dot_dat)


//// Model infrastructure_streetlamp_02.ldr
#ifndef (infrastructure__streetlamp__02_dot_ldr)
#declare infrastructure__streetlamp__02_dot_ldr = union {
// Street Lamp Mk2
// Name: infrastructure_streetlamp_02.ldr
// Author: Michael Horvath
// !LICENSE Redistributable under CC BY-SA version 3.0 : see https://creativecommons.org/licenses/by-sa/3.0/
// Unofficial Datsville Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 288  0 -168 0  1 0 0  0 1 0  0 0 1 2039.dat
	object {
		_2039_dot_dat
		matrix <1-L3SW/40,0,0,0,1-L3SW/172,0,0,0,1-L3SW/40,0,L3SW/2.09756,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-168,0>
		material { L3Color288 }
	}
	// 1 47  0 -192 0  1 0 0  0 1 0  0 0 1 3062b.dat
	object {
		_3062b_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-192,0>
		material { L3Color47 }
	}
	// 1 288  0 -200 0  1 0 0  0 1 0  0 0 1 4740.dat
	object {
		_4740_dot_dat
		matrix <1-L3SW/40,0,0,0,1-L3SW/12,0,0,0,1-L3SW/40,0,L3SW/6,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-200,0>
		material { L3Color288 }
	}
}
#end // ifndef (infrastructure__streetlamp__02_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-20,-204,-20>;
#declare L3ModelBBoxMax = <20,0,20>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-102,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <40,204,40>
#declare L3FloorY = L3ModelBBoxMax.y;

//// ModelObject infrastructure_streetlamp_02.ldr
object { infrastructure__streetlamp__02_dot_ldr no_image no_reflection }



//// Statistics
//               PARTS             P         Total
// DAT files:        6            21            28
// POV Equivs:       -            18 (86%)
// Model has 3 parts (6 studs)

//// End
